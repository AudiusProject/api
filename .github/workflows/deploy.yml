name: Build, Push, and Deploy

on:
  push:
    branches: [main]

jobs:
  build-pulumi:
    permissions:
      contents: write
    runs-on: ubuntu-latest
    steps:
      - name: Checkout api code
        uses: actions/checkout@v4
        with:
          path: api

      - name: Checkout audius-k8s repo
        uses: actions/checkout@v4
        with:
          repository: AudiusProject/audius-k8s
          path: audius-k8s
          token: ${{ secrets.GH_PAT }}

      - run: cd audius-k8s && go mod download

      - name: Get K8s hash
        run: |
          cd audius-k8s && echo "K8S_GIT_SHA=$(git rev-parse --short HEAD)" >> $GITHUB_ENV

      - name: Cache Pulumi Plugins
        uses: actions/cache@v4
        with:
          path: ~/.pulumi/plugins
          key: pulumi-plugins-${{ runner.os }}-${{ env.K8S_GIT_SHA }}

      - name: Up build stack
        uses: pulumi/actions@v6
        with:
          command: up
          stack-name: audius/audius-k8s/build-api
          work-dir: audius-k8s
          debug: true
          log-verbosity: 2
        env:
          PULUMI_ACCESS_TOKEN: ${{ secrets.PULUMI_ACCESS_TOKEN }}
          DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
          DOCKERHUB_PASSWORD: ${{ secrets.DOCKERHUB_TOKEN }}

  deploy-staging:
    needs: build-pulumi
    runs-on: ubuntu-latest
    environment:
      name: Staging
      url: https://api.staging.audius.engineering
    permissions:
      id-token: write
      contents: read

    steps:
      - name: Checkout api code
        uses: actions/checkout@v4
        with:
          path: api

      - name: Checkout audius-k8s repo
        uses: actions/checkout@v4
        with:
          repository: AudiusProject/audius-k8s
          path: audius-k8s
          token: ${{ secrets.GH_PAT }}

      - run: cd audius-k8s && go mod download

      - name: Get K8s hash
        run: |
          cd audius-k8s && echo "K8S_GIT_SHA=$(git rev-parse --short HEAD)" >> $GITHUB_ENV

      - name: Restore Cached Pulumi Plugins
        uses: actions/cache/restore@v4
        with:
          path: ~/.pulumi/plugins
          key: pulumi-plugins-${{ runner.os }}-${{ env.K8S_GIT_SHA }}

      - id: "auth"
        name: "Authenticate to Google Cloud"
        uses: "google-github-actions/auth@v1"
        with:
          create_credentials_file: true
          workload_identity_provider: ${{ vars.WORKLOAD_IDENTITY_PROVIDER }}
          service_account: ${{ vars.SERVICE_ACCOUNT }}

      - name: Set up gcloud CLI and gke-gcloud-auth-plugin
        uses: google-github-actions/setup-gcloud@v2
        with:
          install_components: "gke-gcloud-auth-plugin"

      - name: check auth
        run: gcloud container clusters list

      - name: Up stage-api stack
        uses: pulumi/actions@v6
        with:
          command: up
          stack-name: audius/audius-k8s/stage-api
          work-dir: audius-k8s
        env:
          PULUMI_ACCESS_TOKEN: ${{ secrets.PULUMI_ACCESS_TOKEN }}
          GOOGLE_APPLICATION_CREDENTIALS: ${{ steps.auth.outputs.credentials_file_path }}

  deploy-prod:
    needs: build-pulumi
    runs-on: ubuntu-latest
    environment:
      name: Prod
      url: https://api.audius.engineering
    permissions:
      id-token: write
      contents: read

    steps:
      - name: Checkout api code
        uses: actions/checkout@v4
        with:
          path: api

      - name: Checkout audius-k8s repo
        uses: actions/checkout@v4
        with:
          repository: AudiusProject/audius-k8s
          path: audius-k8s
          token: ${{ secrets.GH_PAT }}

      - run: cd audius-k8s && go mod download

      - name: Get K8s hash
        run: |
          cd audius-k8s && echo "K8S_GIT_SHA=$(git rev-parse --short HEAD)" >> $GITHUB_ENV

      - name: Restore Cached Pulumi Plugins
        uses: actions/cache/restore@v4
        with:
          path: ~/.pulumi/plugins
          key: pulumi-plugins-${{ runner.os }}-${{ env.K8S_GIT_SHA }}

      - id: "auth"
        name: "Authenticate to Google Cloud"
        uses: "google-github-actions/auth@v1"
        with:
          create_credentials_file: true
          workload_identity_provider: ${{ vars.WORKLOAD_IDENTITY_PROVIDER }}
          service_account: ${{ vars.SERVICE_ACCOUNT }}

      - name: Set up gcloud CLI and gke-gcloud-auth-plugin
        uses: google-github-actions/setup-gcloud@v2
        with:
          install_components: "gke-gcloud-auth-plugin"

      - name: Up prod-api stack
        uses: pulumi/actions@v6
        with:
          command: up
          stack-name: audius/audius-k8s/prod-api
          work-dir: audius-k8s
        env:
          PULUMI_ACCESS_TOKEN: ${{ secrets.PULUMI_ACCESS_TOKEN }}
          GOOGLE_APPLICATION_CREDENTIALS: ${{ steps.auth.outputs.credentials_file_path }}
