// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.28.0
// source: get_track_ids_by_permalink.sql

package dbv1

import (
	"context"
)

const getTrackIdsByPermalink = `-- name: GetTrackIdsByPermalink :many
SELECT track_id
FROM track_routes
JOIN users ON users.user_id = track_routes.owner_id
WHERE handle_lc = ANY($1::text[])
    AND slug = ANY($2::text[])
	AND CONCAT(handle_lc, '/', slug) = ANY($3::text[]) -- in case of conflicts across users
`

type GetTrackIdsByPermalinkParams struct {
	Handles    []string `json:"handles"`
	Slugs      []string `json:"slugs"`
	Permalinks []string `json:"permalinks"`
}

func (q *Queries) GetTrackIdsByPermalink(ctx context.Context, arg GetTrackIdsByPermalinkParams) ([]int32, error) {
	rows, err := q.db.Query(ctx, getTrackIdsByPermalink, arg.Handles, arg.Slugs, arg.Permalinks)
	if err != nil {
		return nil, err
	}
	defer rows.Close()
	var items []int32
	for rows.Next() {
		var track_id int32
		if err := rows.Scan(&track_id); err != nil {
			return nil, err
		}
		items = append(items, track_id)
	}
	if err := rows.Err(); err != nil {
		return nil, err
	}
	return items, nil
}
