{
    "swagger": "2.0",
    "basePath": "/v1/full",
    "paths": {
      "/challenges/{challenge_id}/attest": {
        "get": {
          "responses": {
            "200": {
              "description": "Success",
              "schema": {
                "$ref": "#/definitions/attestation_reponse"
              }
            },
            "400": {
              "description": "The attestation request was invalid (eg. The user didn't complete that challenge yet)"
            },
            "500": {
              "description": "Server error"
            }
          },
          "description": "Produces an attestation that a given user has completed a challenge, or errors.",
          "operationId": "Get Challenge Attestation",
          "parameters": [
            {
              "name": "challenge_id",
              "in": "path",
              "required": true,
              "type": "string",
              "description": "The challenge ID of the user challenge requiring the attestation"
            },
            {
              "name": "oracle",
              "in": "query",
              "type": "string",
              "required": true,
              "description": "The address of a valid, registered Anti-Abuse Oracle"
            },
            {
              "name": "specifier",
              "in": "query",
              "type": "string",
              "required": true,
              "description": "The specifier of the user challenge requiring the attestation"
            },
            {
              "name": "user_id",
              "in": "query",
              "type": "string",
              "required": true,
              "description": "The user ID of the user challenge requiring the attestation"
            }
          ],
          "tags": [
            "challenges"
          ]
        }
      },
      "/cid_data/{metadata_id}": {
        "get": {
          "responses": {
            "200": {
              "description": "Success",
              "schema": {
                "$ref": "#/definitions/cid_data_response"
              }
            },
            "400": {
              "description": "Bad request"
            },
            "500": {
              "description": "Server error"
            }
          },
          "description": "Get a metadata by CID",
          "operationId": "Get Metadata",
          "parameters": [
            {
              "name": "metadata_id",
              "in": "path",
              "required": true,
              "type": "string",
              "description": "A Metdata CID"
            }
          ],
          "tags": [
            "cid_data"
          ]
        }
      },
      "/comments/{comment_id}/replies": {
        "get": {
          "responses": {
            "200": {
              "description": "Success",
              "schema": {
                "$ref": "#/definitions/comment_replies_response"
              }
            },
            "400": {
              "description": "Bad request"
            },
            "500": {
              "description": "Server error"
            }
          },
          "description": "Gets replies to a parent comment",
          "operationId": "Get Comment Replies",
          "parameters": [
            {
              "name": "comment_id",
              "in": "path",
              "required": true,
              "type": "string",
              "description": "A Comment ID"
            },
            {
              "name": "offset",
              "in": "query",
              "type": "integer",
              "description": "The number of items to skip. Useful for pagination (page number * limit)"
            },
            {
              "name": "limit",
              "in": "query",
              "type": "integer",
              "description": "The number of items to fetch"
            },
            {
              "name": "user_id",
              "in": "query",
              "type": "string",
              "description": "The user ID of the user making the request"
            }
          ],
          "tags": [
            "comments"
          ]
        }
      },
      "/explore/best-selling": {
        "get": {
          "responses": {
            "200": {
              "description": "Success",
              "schema": {
                "$ref": "#/definitions/best_selling_full_response"
              }
            },
            "400": {
              "description": "Bad request"
            },
            "500": {
              "description": "Server error"
            }
          },
          "summary": "Get best selling tracks and playlists with related entities",
          "description": "Get best selling tracks and/or albums with related entities",
          "operationId": "Get Full Best Selling",
          "parameters": [
            {
              "name": "offset",
              "in": "query",
              "type": "integer",
              "description": "The number of items to skip. Useful for pagination (page number * limit)"
            },
            {
              "name": "limit",
              "in": "query",
              "type": "integer",
              "description": "The number of items to fetch"
            },
            {
              "name": "user_id",
              "in": "query",
              "type": "string",
              "description": "The user ID of the user making the request"
            },
            {
              "name": "type",
              "in": "query",
              "type": "string",
              "default": "all",
              "enum": [
                "all",
                "track",
                "album"
              ],
              "description": "The type of content to filter by"
            }
          ],
          "tags": [
            "explore"
          ]
        }
      },
      "/notifications/{user_id}": {
        "get": {
          "responses": {
            "200": {
              "description": "Success",
              "schema": {
                "$ref": "#/definitions/notifications_response"
              }
            }
          },
          "description": "Get notifications for user ID",
          "operationId": "Get Notifications",
          "parameters": [
            {
              "name": "user_id",
              "in": "path",
              "required": true,
              "type": "string",
              "description": "A User ID"
            },
            {
              "name": "timestamp",
              "in": "query",
              "type": "integer",
              "description": "The timestamp from which to paginate"
            },
            {
              "name": "group_id",
              "in": "query",
              "type": "string",
              "description": "The group_id form which to paginate"
            },
            {
              "name": "limit",
              "in": "query",
              "type": "integer",
              "description": "The number of notifications to return"
            },
            {
              "name": "valid_types",
              "in": "query",
              "type": "array",
              "default": [
                "repost",
                "save",
                "follow",
                "tip_send",
                "tip_receive",
                "milestone",
                "supporter_rank_up",
                "supporting_rank_up",
                "challenge_reward",
                "tier_change",
                "create",
                "remix",
                "cosign",
                "trending",
                "supporter_dethroned",
                "announcement",
                "reaction",
                "track_added_to_playlist"
              ],
              "items": {
                "type": "string",
                "enum": [
                  "announcement",
                  "follow",
                  "repost",
                  "save",
                  "remix",
                  "cosign",
                  "create",
                  "tip_receive",
                  "tip_send",
                  "challenge_reward",
                  "repost_of_repost",
                  "save_of_repost",
                  "tastemaker",
                  "reaction",
                  "supporter_dethroned",
                  "supporter_rank_up",
                  "supporting_rank_up",
                  "milestone",
                  "track_milestone",
                  "track_added_to_playlist",
                  "playlist_milestone",
                  "tier_change",
                  "trending",
                  "trending_playlist",
                  "trending_underground",
                  "usdc_purchase_buyer",
                  "usdc_purchase_seller",
                  "track_added_to_purchased_album",
                  "request_manager",
                  "approve_manager_request",
                  "claimable_reward",
                  "comment",
                  "comment_thread",
                  "comment_mention",
                  "comment_reaction",
                  "listen_streak_reminder",
                  "fan_remix_contest_started",
                  "fan_remix_contest_ended",
                  "fan_remix_contest_ending_soon",
                  "fan_remix_contest_winners_selected",
                  "artist_remix_contest_ended",
                  "artist_remix_contest_ending_soon",
                  "artist_remix_contest_submissions"
                ]
              },
              "collectionFormat": "multi",
              "description": "Additional valid notification types to return"
            }
          ],
          "tags": [
            "notifications"
          ]
        }
      },
      "/notifications/{user_id}/playlist_updates": {
        "get": {
          "responses": {
            "200": {
              "description": "Success",
              "schema": {
                "$ref": "#/definitions/playlist_updates_response"
              }
            }
          },
          "description": "Get playlists the user has saved that have been updated for user ID",
          "operationId": "Get Playlist Updates",
          "parameters": [
            {
              "name": "user_id",
              "in": "path",
              "required": true,
              "type": "string",
              "description": "A User ID"
            }
          ],
          "tags": [
            "notifications"
          ]
        }
      },
      "/playlists": {
        "get": {
          "responses": {
            "200": {
              "description": "Success",
              "schema": {
                "$ref": "#/definitions/full_playlist_response"
              }
            },
            "400": {
              "description": "Bad request"
            },
            "500": {
              "description": "Server error"
            }
          },
          "description": "Gets a list of playlists by ID",
          "operationId": "Get Bulk Playlists",
          "parameters": [
            {
              "name": "user_id",
              "in": "query",
              "type": "string",
              "description": "The user ID of the user making the request"
            },
            {
              "name": "id",
              "in": "query",
              "type": "array",
              "items": {
                "type": "string"
              },
              "collectionFormat": "multi",
              "description": "The ID of the playlist(s)"
            }
          ],
          "tags": [
            "playlists"
          ]
        }
      },
      "/playlists/by_permalink/{handle}/{slug}": {
        "get": {
          "responses": {
            "200": {
              "description": "Success",
              "schema": {
                "$ref": "#/definitions/full_playlist_response"
              }
            }
          },
          "description": "Get a playlist by handle and slug",
          "operationId": "Get Playlist By Handle and Slug",
          "parameters": [
            {
              "name": "handle",
              "in": "path",
              "required": true,
              "type": "string",
              "description": "playlist owner handle"
            },
            {
              "name": "slug",
              "in": "path",
              "required": true,
              "type": "string",
              "description": "playlist slug"
            },
            {
              "name": "user_id",
              "in": "query",
              "type": "string",
              "description": "The user ID of the user making the request"
            }
          ],
          "tags": [
            "playlists"
          ]
        }
      },
      "/playlists/top": {
        "get": {
          "responses": {
            "200": {
              "description": "Success",
              "schema": {
                "$ref": "#/definitions/full_playlist_with_score_response"
              }
            }
          },
          "description": "Gets top playlists.",
          "operationId": "Get Top Playlists",
          "parameters": [
            {
              "name": "offset",
              "in": "query",
              "type": "integer",
              "description": "The number of items to skip. Useful for pagination (page number * limit)"
            },
            {
              "name": "limit",
              "in": "query",
              "type": "integer",
              "description": "The number of items to fetch"
            },
            {
              "name": "user_id",
              "in": "query",
              "type": "string",
              "description": "The user ID of the user making the request"
            },
            {
              "name": "type",
              "in": "query",
              "type": "string",
              "required": true,
              "enum": [
                "album",
                "playlist"
              ],
              "description": "The collection type"
            },
            {
              "name": "mood",
              "in": "query",
              "type": "string",
              "description": "Filter to a mood"
            },
            {
              "name": "filter",
              "in": "query",
              "type": "string",
              "description": "Filter for the playlist query"
            }
          ],
          "tags": [
            "playlists"
          ]
        }
      },
      "/playlists/trending": {
        "get": {
          "responses": {
            "200": {
              "description": "Success",
              "schema": {
                "$ref": "#/definitions/full_trending_playlists_response"
              }
            },
            "400": {
              "description": "Bad request"
            },
            "500": {
              "description": "Server error"
            }
          },
          "description": "Returns trending playlists for a time period",
          "operationId": "Get Trending Playlists",
          "parameters": [
            {
              "name": "offset",
              "in": "query",
              "type": "integer",
              "description": "The number of items to skip. Useful for pagination (page number * limit)"
            },
            {
              "name": "limit",
              "in": "query",
              "type": "integer",
              "description": "The number of items to fetch"
            },
            {
              "name": "user_id",
              "in": "query",
              "type": "string",
              "description": "The user ID of the user making the request"
            },
            {
              "name": "time",
              "in": "query",
              "type": "string",
              "enum": [
                "week",
                "month",
                "year",
                "allTime"
              ],
              "description": "Calculate trending over a specified time range"
            }
          ],
          "tags": [
            "playlists"
          ]
        }
      },
      "/playlists/trending/{version}": {
        "get": {
          "responses": {
            "200": {
              "description": "Success",
              "schema": {
                "$ref": "#/definitions/full_trending_playlists_response"
              }
            },
            "400": {
              "description": "Bad request"
            },
            "500": {
              "description": "Server error"
            }
          },
          "description": "Returns trending playlists for a time period based on the given trending version",
          "operationId": "Get Trending Playlists With Version",
          "parameters": [
            {
              "name": "version",
              "in": "path",
              "required": true,
              "type": "string",
              "description": "The strategy version of trending to use"
            },
            {
              "name": "offset",
              "in": "query",
              "type": "integer",
              "description": "The number of items to skip. Useful for pagination (page number * limit)"
            },
            {
              "name": "limit",
              "in": "query",
              "type": "integer",
              "description": "The number of items to fetch"
            },
            {
              "name": "user_id",
              "in": "query",
              "type": "string",
              "description": "The user ID of the user making the request"
            },
            {
              "name": "time",
              "in": "query",
              "type": "string",
              "enum": [
                "week",
                "month",
                "year",
                "allTime"
              ],
              "description": "Calculate trending over a specified time range"
            }
          ],
          "tags": [
            "playlists"
          ]
        }
      },
      "/playlists/{playlist_id}": {
        "get": {
          "responses": {
            "200": {
              "description": "Success",
              "schema": {
                "$ref": "#/definitions/full_playlist_response"
              }
            }
          },
          "description": "Get a playlist by ID",
          "operationId": "Get Playlist",
          "parameters": [
            {
              "name": "playlist_id",
              "in": "path",
              "required": true,
              "type": "string",
              "description": "A Playlist ID"
            },
            {
              "name": "user_id",
              "in": "query",
              "type": "string",
              "description": "The user ID of the user making the request"
            }
          ],
          "tags": [
            "playlists"
          ]
        }
      },
      "/playlists/{playlist_id}/favorites": {
        "get": {
          "responses": {
            "200": {
              "description": "Success",
              "schema": {
                "$ref": "#/definitions/following_response"
              }
            },
            "400": {
              "description": "Bad request"
            },
            "500": {
              "description": "Server error"
            }
          },
          "description": "Get users that favorited a playlist",
          "operationId": "Get Users From Playlist Favorites",
          "parameters": [
            {
              "name": "playlist_id",
              "in": "path",
              "required": true,
              "type": "string",
              "description": "A Playlist ID"
            },
            {
              "name": "offset",
              "in": "query",
              "type": "integer",
              "description": "The number of items to skip. Useful for pagination (page number * limit)"
            },
            {
              "name": "limit",
              "in": "query",
              "type": "integer",
              "description": "The number of items to fetch"
            },
            {
              "name": "user_id",
              "in": "query",
              "type": "string",
              "description": "The user ID of the user making the request"
            }
          ],
          "tags": [
            "playlists"
          ]
        }
      },
      "/playlists/{playlist_id}/reposts": {
        "get": {
          "responses": {
            "200": {
              "description": "Success",
              "schema": {
                "$ref": "#/definitions/following_response"
              }
            },
            "400": {
              "description": "Bad request"
            },
            "500": {
              "description": "Server error"
            }
          },
          "description": "Get users that reposted a playlist",
          "operationId": "Get Users From Playlist Reposts",
          "parameters": [
            {
              "name": "playlist_id",
              "in": "path",
              "required": true,
              "type": "string",
              "description": "A Playlist ID"
            },
            {
              "name": "offset",
              "in": "query",
              "type": "integer",
              "description": "The number of items to skip. Useful for pagination (page number * limit)"
            },
            {
              "name": "limit",
              "in": "query",
              "type": "integer",
              "description": "The number of items to fetch"
            },
            {
              "name": "user_id",
              "in": "query",
              "type": "string",
              "description": "The user ID of the user making the request"
            }
          ],
          "tags": [
            "playlists"
          ]
        }
      },
      "/playlists/{playlist_id}/tracks": {
        "get": {
          "responses": {
            "200": {
              "description": "Success",
              "schema": {
                "$ref": "#/definitions/full_playlist_tracks_response"
              }
            },
            "400": {
              "description": "Bad request"
            },
            "500": {
              "description": "Server error"
            }
          },
          "description": "Fetch tracks within a playlist.",
          "operationId": "Get Playlist Tracks",
          "parameters": [
            {
              "name": "playlist_id",
              "in": "path",
              "required": true,
              "type": "string",
              "description": "A Playlist ID"
            }
          ],
          "tags": [
            "playlists"
          ]
        }
      },
      "/reactions": {
        "get": {
          "responses": {
            "200": {
              "description": "Success",
              "schema": {
                "$ref": "#/definitions/reactions"
              }
            },
            "400": {
              "description": "Bad request"
            },
            "404": {
              "description": "No such reaction"
            },
            "500": {
              "description": "Server error"
            }
          },
          "description": "Gets reactions by reacted_to_id and type",
          "operationId": "Bulk get Reactions",
          "parameters": [
            {
              "name": "type",
              "in": "query",
              "type": "string",
              "description": "The type of reactions for which to query."
            },
            {
              "name": "reacted_to_ids",
              "in": "query",
              "type": "array",
              "required": true,
              "items": {
                "type": "string"
              },
              "collectionFormat": "csv",
              "description": "The `reacted_to` transaction id(s) of the reactions in question."
            }
          ],
          "tags": [
            "reactions"
          ]
        }
      },
      "/search/autocomplete": {
        "get": {
          "responses": {
            "200": {
              "description": "Success",
              "schema": {
                "$ref": "#/definitions/search_autocomplete_response"
              }
            },
            "400": {
              "description": "Bad request"
            },
            "500": {
              "description": "Server error"
            }
          },
          "summary": "Get Users/Tracks/Playlists/Albums that best match the search query",
          "description": "Same as search but optimized for quicker response at the cost of some entity information.",
          "operationId": "Search Autocomplete",
          "parameters": [
            {
              "name": "offset",
              "in": "query",
              "type": "integer",
              "description": "The number of items to skip. Useful for pagination (page number * limit)"
            },
            {
              "name": "limit",
              "in": "query",
              "type": "integer",
              "description": "The number of items to fetch"
            },
            {
              "name": "user_id",
              "in": "query",
              "type": "string",
              "description": "The user ID of the user making the request"
            },
            {
              "name": "query",
              "in": "query",
              "type": "string",
              "description": "The search query"
            },
            {
              "name": "kind",
              "in": "query",
              "type": "string",
              "default": "all",
              "enum": [
                "all",
                "users",
                "tracks",
                "playlists",
                "albums"
              ],
              "description": "The type of response, one of: all, users, tracks, playlists, or albums"
            },
            {
              "name": "includePurchaseable",
              "in": "query",
              "type": "boolean",
              "description": "Whether or not to include purchaseable content"
            },
            {
              "name": "genre",
              "in": "query",
              "type": "array",
              "items": {
                "type": "string"
              },
              "collectionFormat": "multi",
              "description": "The genres to filter by"
            },
            {
              "name": "mood",
              "in": "query",
              "type": "array",
              "items": {
                "type": "string"
              },
              "collectionFormat": "multi",
              "description": "The moods to filter by"
            },
            {
              "name": "is_verified",
              "in": "query",
              "type": "boolean",
              "description": "Only include verified users in the user results"
            },
            {
              "name": "has_downloads",
              "in": "query",
              "type": "boolean",
              "description": "Only include tracks that have downloads in the track results"
            },
            {
              "name": "is_purchaseable",
              "in": "query",
              "type": "boolean",
              "description": "Only include purchaseable tracks and albums in the track and album results"
            },
            {
              "name": "key",
              "in": "query",
              "type": "array",
              "items": {
                "type": "string"
              },
              "collectionFormat": "multi",
              "description": "Only include tracks that match the musical key"
            },
            {
              "name": "bpm_min",
              "in": "query",
              "type": "number",
              "description": "Only include tracks that have a bpm greater than or equal to"
            },
            {
              "name": "bpm_max",
              "in": "query",
              "type": "number",
              "description": "Only include tracks that have a bpm less than or equal to"
            },
            {
              "name": "sort_method",
              "in": "query",
              "type": "string",
              "enum": [
                "relevant",
                "popular",
                "recent"
              ],
              "description": "The sort method"
            }
          ],
          "tags": [
            "search"
          ]
        }
      },
      "/search/full": {
        "get": {
          "responses": {
            "200": {
              "description": "Success",
              "schema": {
                "$ref": "#/definitions/search_full_response"
              }
            },
            "400": {
              "description": "Bad request"
            },
            "500": {
              "description": "Server error"
            }
          },
          "description": "Get Users/Tracks/Playlists/Albums that best match the search query",
          "operationId": "Search",
          "parameters": [
            {
              "name": "offset",
              "in": "query",
              "type": "integer",
              "description": "The number of items to skip. Useful for pagination (page number * limit)"
            },
            {
              "name": "limit",
              "in": "query",
              "type": "integer",
              "description": "The number of items to fetch"
            },
            {
              "name": "user_id",
              "in": "query",
              "type": "string",
              "description": "The user ID of the user making the request"
            },
            {
              "name": "query",
              "in": "query",
              "type": "string",
              "description": "The search query"
            },
            {
              "name": "kind",
              "in": "query",
              "type": "string",
              "default": "all",
              "enum": [
                "all",
                "users",
                "tracks",
                "playlists",
                "albums"
              ],
              "description": "The type of response, one of: all, users, tracks, playlists, or albums"
            },
            {
              "name": "includePurchaseable",
              "in": "query",
              "type": "boolean",
              "description": "Whether or not to include purchaseable content"
            },
            {
              "name": "genre",
              "in": "query",
              "type": "array",
              "items": {
                "type": "string"
              },
              "collectionFormat": "multi",
              "description": "The genres to filter by"
            },
            {
              "name": "mood",
              "in": "query",
              "type": "array",
              "items": {
                "type": "string"
              },
              "collectionFormat": "multi",
              "description": "The moods to filter by"
            },
            {
              "name": "is_verified",
              "in": "query",
              "type": "boolean",
              "description": "Only include verified users in the user results"
            },
            {
              "name": "has_downloads",
              "in": "query",
              "type": "boolean",
              "description": "Only include tracks that have downloads in the track results"
            },
            {
              "name": "is_purchaseable",
              "in": "query",
              "type": "boolean",
              "description": "Only include purchaseable tracks and albums in the track and album results"
            },
            {
              "name": "key",
              "in": "query",
              "type": "array",
              "items": {
                "type": "string"
              },
              "collectionFormat": "multi",
              "description": "Only include tracks that match the musical key"
            },
            {
              "name": "bpm_min",
              "in": "query",
              "type": "number",
              "description": "Only include tracks that have a bpm greater than or equal to"
            },
            {
              "name": "bpm_max",
              "in": "query",
              "type": "number",
              "description": "Only include tracks that have a bpm less than or equal to"
            },
            {
              "name": "sort_method",
              "in": "query",
              "type": "string",
              "enum": [
                "relevant",
                "popular",
                "recent"
              ],
              "description": "The sort method"
            }
          ],
          "tags": [
            "search"
          ]
        }
      },
      "/search/tags": {
        "get": {
          "responses": {
            "200": {
              "description": "Success",
              "schema": {
                "$ref": "#/definitions/search_full_response"
              }
            },
            "400": {
              "description": "Bad request"
            },
            "500": {
              "description": "Server error"
            }
          },
          "description": "Get Users/Tracks/Playlists/Albums that best match the provided tag",
          "operationId": "SearchTags",
          "parameters": [
            {
              "name": "offset",
              "in": "query",
              "type": "integer",
              "description": "The number of items to skip. Useful for pagination (page number * limit)"
            },
            {
              "name": "limit",
              "in": "query",
              "type": "integer",
              "description": "The number of items to fetch"
            },
            {
              "name": "user_id",
              "in": "query",
              "type": "string",
              "description": "The user ID of the user making the request"
            },
            {
              "name": "query",
              "in": "query",
              "type": "string",
              "description": "The search query"
            },
            {
              "name": "kind",
              "in": "query",
              "type": "string",
              "default": "all",
              "enum": [
                "all",
                "users",
                "tracks",
                "playlists",
                "albums"
              ],
              "description": "The type of response, one of: all, users, tracks, playlists, or albums"
            },
            {
              "name": "includePurchaseable",
              "in": "query",
              "type": "boolean",
              "description": "Whether or not to include purchaseable content"
            },
            {
              "name": "genre",
              "in": "query",
              "type": "array",
              "items": {
                "type": "string"
              },
              "collectionFormat": "multi",
              "description": "The genres to filter by"
            },
            {
              "name": "mood",
              "in": "query",
              "type": "array",
              "items": {
                "type": "string"
              },
              "collectionFormat": "multi",
              "description": "The moods to filter by"
            },
            {
              "name": "is_verified",
              "in": "query",
              "type": "boolean",
              "description": "Only include verified users in the user results"
            },
            {
              "name": "has_downloads",
              "in": "query",
              "type": "boolean",
              "description": "Only include tracks that have downloads in the track results"
            },
            {
              "name": "is_purchaseable",
              "in": "query",
              "type": "boolean",
              "description": "Only include purchaseable tracks and albums in the track and album results"
            },
            {
              "name": "key",
              "in": "query",
              "type": "array",
              "items": {
                "type": "string"
              },
              "collectionFormat": "multi",
              "description": "Only include tracks that match the musical key"
            },
            {
              "name": "bpm_min",
              "in": "query",
              "type": "number",
              "description": "Only include tracks that have a bpm greater than or equal to"
            },
            {
              "name": "bpm_max",
              "in": "query",
              "type": "number",
              "description": "Only include tracks that have a bpm less than or equal to"
            },
            {
              "name": "sort_method",
              "in": "query",
              "type": "string",
              "enum": [
                "relevant",
                "popular",
                "recent"
              ],
              "description": "The sort method"
            }
          ],
          "tags": [
            "search"
          ]
        }
      },
      "/tips": {
        "get": {
          "responses": {
            "200": {
              "description": "Success",
              "schema": {
                "$ref": "#/definitions/get_tips_response"
              }
            }
          },
          "description": "Gets the most recent tips on the network",
          "operationId": "Get Tips",
          "parameters": [
            {
              "name": "offset",
              "in": "query",
              "type": "integer",
              "description": "The number of items to skip. Useful for pagination (page number * limit)"
            },
            {
              "name": "limit",
              "in": "query",
              "type": "integer",
              "description": "The number of items to fetch"
            },
            {
              "name": "user_id",
              "in": "query",
              "type": "string",
              "description": "The user ID of the user making the request"
            },
            {
              "name": "receiver_min_followers",
              "in": "query",
              "type": "integer",
              "default": 0,
              "description": "Only include tips to recipients that have this many followers"
            },
            {
              "name": "receiver_is_verified",
              "in": "query",
              "type": "boolean",
              "default": false,
              "description": "Only include tips to recipients that are verified"
            },
            {
              "name": "current_user_follows",
              "in": "query",
              "type": "string",
              "enum": [
                "sender",
                "receiver",
                "sender_or_receiver"
              ],
              "description": "Only include tips involving the user's followers in the given capacity. Requires user_id to be set."
            },
            {
              "name": "unique_by",
              "in": "query",
              "type": "string",
              "enum": [
                "sender",
                "receiver"
              ],
              "description": "Only include the most recent tip for a user was involved in the given capacity.\n\nEg. 'sender' will ensure that each tip returned has a unique sender, using the most recent tip sent by a user if that user has sent multiple tips.\n    "
            },
            {
              "name": "min_slot",
              "in": "query",
              "type": "integer",
              "default": 0,
              "description": "The minimum Solana slot to pull tips from"
            },
            {
              "name": "max_slot",
              "in": "query",
              "type": "integer",
              "default": 0,
              "description": "The maximum Solana slot to pull tips from"
            },
            {
              "name": "tx_signatures",
              "in": "query",
              "type": "array",
              "items": {
                "type": "string"
              },
              "collectionFormat": "csv",
              "description": "A list of transaction signatures of tips to fetch"
            }
          ],
          "tags": [
            "tips"
          ]
        }
      },
      "/tracks": {
        "get": {
          "responses": {
            "200": {
              "description": "Success",
              "schema": {
                "$ref": "#/definitions/full_tracks_response"
              }
            }
          },
          "description": "Gets a list of tracks using their IDs or permalinks",
          "operationId": "Get Bulk Tracks",
          "parameters": [
            {
              "name": "user_id",
              "in": "query",
              "type": "string",
              "description": "The user ID of the user making the request"
            },
            {
              "name": "permalink",
              "in": "query",
              "type": "array",
              "items": {
                "type": "string"
              },
              "collectionFormat": "multi",
              "description": "The permalink of the track(s)"
            },
            {
              "name": "id",
              "in": "query",
              "type": "array",
              "items": {
                "type": "string"
              },
              "collectionFormat": "multi",
              "description": "The ID of the track(s)"
            }
          ],
          "tags": [
            "tracks"
          ]
        }
      },
      "/tracks/best_new_releases": {
        "get": {
          "responses": {
            "200": {
              "description": "Success",
              "schema": {
                "$ref": "#/definitions/full_tracks_response"
              }
            }
          },
          "description": "Gets the tracks found on the \"Best New Releases\" smart playlist",
          "operationId": "Get Best New Releases",
          "parameters": [
            {
              "name": "user_id",
              "in": "query",
              "type": "string",
              "description": "The user ID of the user making the request"
            },
            {
              "name": "window",
              "in": "query",
              "type": "string",
              "required": true,
              "enum": [
                "week",
                "month",
                "year"
              ],
              "description": "The window from now() to look back over"
            },
            {
              "name": "limit",
              "in": "query",
              "type": "integer",
              "default": 25,
              "description": "The number of tracks to get"
            },
            {
              "name": "with_users",
              "in": "query",
              "type": "boolean",
              "description": "Boolean to include user info with tracks"
            }
          ],
          "tags": [
            "tracks"
          ]
        }
      },
      "/tracks/feeling_lucky": {
        "get": {
          "responses": {
            "200": {
              "description": "Success",
              "schema": {
                "$ref": "#/definitions/full_tracks_response"
              }
            }
          },
          "description": "Gets random tracks found on the \"Feeling Lucky\" smart playlist",
          "operationId": "Get Feeling Lucky Tracks",
          "parameters": [
            {
              "name": "user_id",
              "in": "query",
              "type": "string",
              "description": "The user ID of the user making the request"
            },
            {
              "name": "limit",
              "in": "query",
              "type": "integer",
              "default": 25,
              "description": "Number of tracks to fetch"
            },
            {
              "name": "with_users",
              "in": "query",
              "type": "boolean",
              "default": false,
              "description": "Boolean to include user info with tracks"
            },
            {
              "name": "min_followers",
              "in": "query",
              "type": "integer",
              "default": 100,
              "description": "Fetch tracks from users with at least this number of followers"
            }
          ],
          "tags": [
            "tracks"
          ]
        }
      },
      "/tracks/most_loved": {
        "get": {
          "responses": {
            "200": {
              "description": "Success",
              "schema": {
                "$ref": "#/definitions/full_tracks_response"
              }
            }
          },
          "description": "Gets the tracks found on the \"Most Loved\" smart playlist",
          "operationId": "Get Most Loved Tracks",
          "parameters": [
            {
              "name": "user_id",
              "in": "query",
              "type": "string",
              "description": "The user ID of the user making the request"
            },
            {
              "name": "limit",
              "in": "query",
              "type": "integer",
              "default": 25,
              "description": "Number of tracks to fetch"
            },
            {
              "name": "with_users",
              "in": "query",
              "type": "boolean",
              "description": "Boolean to include user info with tracks"
            }
          ],
          "tags": [
            "tracks"
          ]
        }
      },
      "/tracks/recent-premium": {
        "get": {
          "responses": {
            "200": {
              "description": "Success",
              "schema": {
                "$ref": "#/definitions/full_tracks_response"
              }
            }
          },
          "description": "Gets the most recently listed premium tracks",
          "operationId": "Get Recent Premium Tracks",
          "parameters": [
            {
              "name": "offset",
              "in": "query",
              "type": "integer",
              "description": "The number of items to skip. Useful for pagination (page number * limit)"
            },
            {
              "name": "limit",
              "in": "query",
              "type": "integer",
              "description": "The number of items to fetch"
            },
            {
              "name": "user_id",
              "in": "query",
              "type": "string",
              "description": "The user ID of the user making the request"
            }
          ],
          "tags": [
            "tracks"
          ]
        }
      },
      "/tracks/recommended": {
        "get": {
          "responses": {
            "200": {
              "description": "Success",
              "schema": {
                "$ref": "#/definitions/full_tracks_response"
              }
            }
          },
          "description": "Get recommended tracks",
          "operationId": "Get Recommended Tracks",
          "parameters": [
            {
              "name": "limit",
              "in": "query",
              "type": "integer",
              "description": "The number of items to fetch"
            },
            {
              "name": "genre",
              "in": "query",
              "type": "string",
              "description": "Filter trending to a specified genre"
            },
            {
              "name": "time",
              "in": "query",
              "type": "string",
              "enum": [
                "week",
                "month",
                "year",
                "allTime"
              ],
              "description": "Calculate trending over a specified time range"
            },
            {
              "name": "exclusion_list",
              "in": "query",
              "type": "array",
              "items": {
                "type": "integer"
              },
              "collectionFormat": "multi",
              "description": "List of track ids to exclude"
            },
            {
              "name": "user_id",
              "in": "query",
              "type": "string",
              "description": "The user ID of the user making the request"
            }
          ],
          "tags": [
            "tracks"
          ]
        }
      },
      "/tracks/recommended/{version}": {
        "get": {
          "responses": {
            "200": {
              "description": "Success",
              "schema": {
                "$ref": "#/definitions/full_tracks_response"
              }
            }
          },
          "description": "Get recommended tracks using the given trending strategy version",
          "operationId": "Get Recommended Tracks With Version",
          "parameters": [
            {
              "name": "version",
              "in": "path",
              "required": true,
              "type": "string",
              "description": "The strategy version of trending to use"
            },
            {
              "name": "limit",
              "in": "query",
              "type": "integer",
              "description": "The number of items to fetch"
            },
            {
              "name": "genre",
              "in": "query",
              "type": "string",
              "description": "Filter trending to a specified genre"
            },
            {
              "name": "time",
              "in": "query",
              "type": "string",
              "enum": [
                "week",
                "month",
                "year",
                "allTime"
              ],
              "description": "Calculate trending over a specified time range"
            },
            {
              "name": "exclusion_list",
              "in": "query",
              "type": "array",
              "items": {
                "type": "integer"
              },
              "collectionFormat": "multi",
              "description": "List of track ids to exclude"
            },
            {
              "name": "user_id",
              "in": "query",
              "type": "string",
              "description": "The user ID of the user making the request"
            }
          ],
          "tags": [
            "tracks"
          ]
        }
      },
      "/tracks/remixables": {
        "get": {
          "responses": {
            "200": {
              "description": "Success",
              "schema": {
                "$ref": "#/definitions/remixables_response"
              }
            },
            "400": {
              "description": "Bad request"
            },
            "500": {
              "description": "Server error"
            }
          },
          "description": "Gets a list of tracks that have stems available for remixing",
          "operationId": "Get Remixable Tracks",
          "parameters": [
            {
              "name": "limit",
              "in": "query",
              "type": "integer",
              "description": "The number of items to fetch"
            },
            {
              "name": "user_id",
              "in": "query",
              "type": "string",
              "description": "The user ID of the user making the request"
            },
            {
              "name": "with_users",
              "in": "query",
              "type": "boolean",
              "description": "Boolean to include user info with tracks"
            }
          ],
          "tags": [
            "tracks"
          ]
        }
      },
      "/tracks/trending": {
        "get": {
          "responses": {
            "200": {
              "description": "Success",
              "schema": {
                "$ref": "#/definitions/full_tracks_response"
              }
            },
            "400": {
              "description": "Bad request"
            },
            "500": {
              "description": "Server error"
            }
          },
          "description": "Gets the top 100 trending (most popular) tracks on Audius",
          "operationId": "Get Trending Tracks",
          "parameters": [
            {
              "name": "offset",
              "in": "query",
              "type": "integer",
              "description": "The number of items to skip. Useful for pagination (page number * limit)"
            },
            {
              "name": "limit",
              "in": "query",
              "type": "integer",
              "description": "The number of items to fetch"
            },
            {
              "name": "user_id",
              "in": "query",
              "type": "string",
              "description": "The user ID of the user making the request"
            },
            {
              "name": "genre",
              "in": "query",
              "type": "string",
              "description": "Filter trending to a specified genre"
            },
            {
              "name": "time",
              "in": "query",
              "type": "string",
              "enum": [
                "week",
                "month",
                "year",
                "allTime"
              ],
              "description": "Calculate trending over a specified time range"
            }
          ],
          "tags": [
            "tracks"
          ]
        }
      },
      "/tracks/trending/ids": {
        "get": {
          "responses": {
            "200": {
              "description": "Success",
              "schema": {
                "$ref": "#/definitions/trending_ids_response"
              }
            },
            "400": {
              "description": "Bad request"
            },
            "500": {
              "description": "Server error"
            }
          },
          "description": "Gets the track IDs of the top trending tracks on Audius",
          "operationId": "Get Trending Track IDs",
          "parameters": [
            {
              "name": "offset",
              "in": "query",
              "type": "integer",
              "description": "The number of items to skip. Useful for pagination (page number * limit)"
            },
            {
              "name": "limit",
              "in": "query",
              "type": "integer",
              "description": "The number of items to fetch"
            },
            {
              "name": "genre",
              "in": "query",
              "type": "string",
              "description": "Filter trending to a specified genre"
            }
          ],
          "tags": [
            "tracks"
          ]
        }
      },
      "/tracks/trending/ids/{version}": {
        "get": {
          "responses": {
            "200": {
              "description": "Success",
              "schema": {
                "$ref": "#/definitions/trending_ids_response"
              }
            },
            "400": {
              "description": "Bad request"
            },
            "500": {
              "description": "Server error"
            }
          },
          "description": "Gets the track IDs of the top trending tracks on Audius based on the given trending strategy version",
          "operationId": "Get Trending Tracks IDs With Version",
          "parameters": [
            {
              "name": "version",
              "in": "path",
              "required": true,
              "type": "string",
              "description": "The strategy version of trending to use"
            },
            {
              "name": "offset",
              "in": "query",
              "type": "integer",
              "description": "The number of items to skip. Useful for pagination (page number * limit)"
            },
            {
              "name": "limit",
              "in": "query",
              "type": "integer",
              "description": "The number of items to fetch"
            },
            {
              "name": "genre",
              "in": "query",
              "type": "string",
              "description": "Filter trending to a specified genre"
            }
          ],
          "tags": [
            "tracks"
          ]
        }
      },
      "/tracks/trending/underground": {
        "get": {
          "responses": {
            "200": {
              "description": "Success",
              "schema": {
                "$ref": "#/definitions/full_tracks_response"
              }
            }
          },
          "description": "Gets the top 100 trending underground tracks on Audius",
          "operationId": "Get Underground Trending Tracks",
          "parameters": [
            {
              "name": "offset",
              "in": "query",
              "type": "integer",
              "description": "The number of items to skip. Useful for pagination (page number * limit)"
            },
            {
              "name": "limit",
              "in": "query",
              "type": "integer",
              "description": "The number of items to fetch"
            },
            {
              "name": "user_id",
              "in": "query",
              "type": "string",
              "description": "The user ID of the user making the request"
            }
          ],
          "tags": [
            "tracks"
          ]
        }
      },
      "/tracks/trending/underground/{version}": {
        "get": {
          "responses": {
            "200": {
              "description": "Success",
              "schema": {
                "$ref": "#/definitions/full_tracks_response"
              }
            }
          },
          "description": "Gets the top 100 trending underground tracks on Audius using a given trending strategy version",
          "operationId": "Get Underground Trending Tracks With Version",
          "parameters": [
            {
              "name": "version",
              "in": "path",
              "required": true,
              "type": "string",
              "description": "The strategy version of trending to user"
            },
            {
              "name": "offset",
              "in": "query",
              "type": "integer",
              "description": "The number of items to skip. Useful for pagination (page number * limit)"
            },
            {
              "name": "limit",
              "in": "query",
              "type": "integer",
              "description": "The number of items to fetch"
            },
            {
              "name": "user_id",
              "in": "query",
              "type": "string",
              "description": "The user ID of the user making the request"
            }
          ],
          "tags": [
            "tracks"
          ]
        }
      },
      "/tracks/trending/{version}": {
        "get": {
          "responses": {
            "200": {
              "description": "Success",
              "schema": {
                "$ref": "#/definitions/full_tracks_response"
              }
            }
          },
          "description": "Gets the top 100 trending (most popular) tracks on Audius using a given trending strategy version",
          "operationId": "Get Trending Tracks With Version",
          "parameters": [
            {
              "name": "version",
              "in": "path",
              "required": true,
              "type": "string",
              "description": "The strategy version of trending to use"
            },
            {
              "name": "offset",
              "in": "query",
              "type": "integer",
              "description": "The number of items to skip. Useful for pagination (page number * limit)"
            },
            {
              "name": "limit",
              "in": "query",
              "type": "integer",
              "description": "The number of items to fetch"
            },
            {
              "name": "user_id",
              "in": "query",
              "type": "string",
              "description": "The user ID of the user making the request"
            },
            {
              "name": "genre",
              "in": "query",
              "type": "string",
              "description": "Filter trending to a specified genre"
            },
            {
              "name": "time",
              "in": "query",
              "type": "string",
              "enum": [
                "week",
                "month",
                "year",
                "allTime"
              ],
              "description": "Calculate trending over a specified time range"
            }
          ],
          "tags": [
            "tracks"
          ]
        }
      },
      "/tracks/under_the_radar": {
        "get": {
          "responses": {
            "200": {
              "description": "Success",
              "schema": {
                "$ref": "#/definitions/full_tracks_response"
              }
            }
          },
          "description": "Gets the tracks found on the \"Under the Radar\" smart playlist",
          "operationId": "Get Under the Radar Tracks",
          "parameters": [
            {
              "name": "offset",
              "in": "query",
              "type": "integer",
              "description": "The number of items to skip. Useful for pagination (page number * limit)"
            },
            {
              "name": "limit",
              "in": "query",
              "type": "integer",
              "description": "The number of items to fetch"
            },
            {
              "name": "user_id",
              "in": "query",
              "type": "string",
              "description": "The user ID of the user making the request"
            },
            {
              "name": "filter",
              "in": "query",
              "type": "string",
              "default": "all",
              "enum": [
                "all",
                "repost",
                "original"
              ],
              "description": "Filters for activity that is original vs reposts"
            },
            {
              "name": "tracks_only",
              "in": "query",
              "type": "boolean",
              "description": "Whether to only include tracks"
            },
            {
              "name": "with_users",
              "in": "query",
              "type": "boolean",
              "description": "Boolean to include user info with tracks"
            }
          ],
          "tags": [
            "tracks"
          ]
        }
      },
      "/tracks/usdc-purchase": {
        "get": {
          "responses": {
            "200": {
              "description": "Success",
              "schema": {
                "$ref": "#/definitions/full_tracks_response"
              }
            },
            "400": {
              "description": "Bad request"
            },
            "500": {
              "description": "Server error"
            }
          },
          "description": "Gets the top trending (most popular) USDC purchase tracks on Audius",
          "operationId": "Get Trending USDC Purchase Tracks",
          "parameters": [
            {
              "name": "offset",
              "in": "query",
              "type": "integer",
              "description": "The number of items to skip. Useful for pagination (page number * limit)"
            },
            {
              "name": "limit",
              "in": "query",
              "type": "integer",
              "description": "The number of items to fetch"
            },
            {
              "name": "user_id",
              "in": "query",
              "type": "string",
              "description": "The user ID of the user making the request"
            },
            {
              "name": "genre",
              "in": "query",
              "type": "string",
              "description": "Filter trending to a specified genre"
            },
            {
              "name": "time",
              "in": "query",
              "type": "string",
              "enum": [
                "week",
                "month",
                "year",
                "allTime"
              ],
              "description": "Calculate trending over a specified time range"
            }
          ],
          "tags": [
            "tracks"
          ]
        }
      },
      "/tracks/usdc-purchase/{version}": {
        "get": {
          "responses": {
            "200": {
              "description": "Success",
              "schema": {
                "$ref": "#/definitions/full_tracks_response"
              }
            }
          },
          "description": "Gets the top trending (most popular) USDC purchase tracks on Audius using a given trending strategy version",
          "operationId": "Get Trending USDC Purchase Tracks With Version",
          "parameters": [
            {
              "name": "version",
              "in": "path",
              "required": true,
              "type": "string",
              "description": "The strategy version of trending to use"
            },
            {
              "name": "offset",
              "in": "query",
              "type": "integer",
              "description": "The number of items to skip. Useful for pagination (page number * limit)"
            },
            {
              "name": "limit",
              "in": "query",
              "type": "integer",
              "description": "The number of items to fetch"
            },
            {
              "name": "user_id",
              "in": "query",
              "type": "string",
              "description": "The user ID of the user making the request"
            },
            {
              "name": "genre",
              "in": "query",
              "type": "string",
              "description": "Filter trending to a specified genre"
            },
            {
              "name": "time",
              "in": "query",
              "type": "string",
              "enum": [
                "week",
                "month",
                "year",
                "allTime"
              ],
              "description": "Calculate trending over a specified time range"
            }
          ],
          "tags": [
            "tracks"
          ]
        }
      },
      "/tracks/{track_id}": {
        "get": {
          "responses": {
            "200": {
              "description": "Success",
              "schema": {
                "$ref": "#/definitions/full_track_response"
              }
            }
          },
          "description": "Gets a track by ID.",
          "operationId": "Get Track",
          "parameters": [
            {
              "name": "track_id",
              "in": "path",
              "required": true,
              "type": "string",
              "description": "A Track ID"
            },
            {
              "name": "user_id",
              "in": "query",
              "type": "string",
              "description": "The user ID of the user making the request"
            }
          ],
          "tags": [
            "tracks"
          ]
        }
      },
      "/tracks/{track_id}/comments": {
        "get": {
          "responses": {
            "200": {
              "description": "Success",
              "schema": {
                "$ref": "#/definitions/track_comments_response_full"
              }
            },
            "400": {
              "description": "Bad request"
            },
            "500": {
              "description": "Server error"
            }
          },
          "description": "Get a list of comments for a track",
          "operationId": "Get Track Comments",
          "parameters": [
            {
              "name": "track_id",
              "in": "path",
              "required": true,
              "type": "string",
              "description": "A Track ID"
            },
            {
              "name": "offset",
              "in": "query",
              "type": "integer",
              "description": "The number of items to skip. Useful for pagination (page number * limit)"
            },
            {
              "name": "limit",
              "in": "query",
              "type": "integer",
              "description": "The number of items to fetch"
            },
            {
              "name": "user_id",
              "in": "query",
              "type": "string",
              "description": "The user ID of the user making the request"
            },
            {
              "name": "sort_method",
              "in": "query",
              "type": "string",
              "default": "top",
              "enum": [
                "top",
                "newest",
                "timestamp"
              ],
              "description": "The sort method"
            }
          ],
          "tags": [
            "tracks"
          ]
        }
      },
      "/tracks/{track_id}/favorites": {
        "get": {
          "responses": {
            "200": {
              "description": "Success",
              "schema": {
                "$ref": "#/definitions/track_favorites_response_full"
              }
            },
            "400": {
              "description": "Bad request"
            },
            "500": {
              "description": "Server error"
            }
          },
          "description": "Get users that favorited a track",
          "operationId": "Get Users From Favorites",
          "parameters": [
            {
              "name": "track_id",
              "in": "path",
              "required": true,
              "type": "string",
              "description": "A Track ID"
            },
            {
              "name": "offset",
              "in": "query",
              "type": "integer",
              "description": "The number of items to skip. Useful for pagination (page number * limit)"
            },
            {
              "name": "limit",
              "in": "query",
              "type": "integer",
              "description": "The number of items to fetch"
            },
            {
              "name": "user_id",
              "in": "query",
              "type": "string",
              "description": "The user ID of the user making the request"
            }
          ],
          "tags": [
            "tracks"
          ]
        }
      },
      "/tracks/{track_id}/remixes": {
        "get": {
          "responses": {
            "200": {
              "description": "Success",
              "schema": {
                "$ref": "#/definitions/remixes_response_full"
              }
            }
          },
          "description": "Get all tracks that remix the given track",
          "operationId": "Get Track Remixes",
          "parameters": [
            {
              "name": "track_id",
              "in": "path",
              "required": true,
              "type": "string",
              "description": "A Track ID"
            },
            {
              "name": "offset",
              "in": "query",
              "type": "integer",
              "description": "The number of items to skip. Useful for pagination (page number * limit)"
            },
            {
              "name": "limit",
              "in": "query",
              "type": "integer",
              "description": "The number of items to fetch"
            },
            {
              "name": "user_id",
              "in": "query",
              "type": "string",
              "description": "The user ID of the user making the request"
            },
            {
              "name": "sort_method",
              "in": "query",
              "type": "string",
              "default": "recent",
              "enum": [
                "likes",
                "plays",
                "recent"
              ],
              "description": "The sort method to use"
            },
            {
              "name": "only_cosigns",
              "in": "query",
              "type": "boolean",
              "description": "Only remixes cosigned by the original artist"
            },
            {
              "name": "only_contest_entries",
              "in": "query",
              "type": "boolean",
              "description": "Only entries to a remix contest"
            }
          ],
          "tags": [
            "tracks"
          ]
        }
      },
      "/tracks/{track_id}/remixing": {
        "get": {
          "responses": {
            "200": {
              "description": "Success",
              "schema": {
                "$ref": "#/definitions/remixing_response"
              }
            }
          },
          "description": "Gets all the tracks that the given track remixes",
          "operationId": "Get Track Remix Parents",
          "parameters": [
            {
              "name": "track_id",
              "in": "path",
              "required": true,
              "type": "string",
              "description": "A Track ID"
            },
            {
              "name": "offset",
              "in": "query",
              "type": "integer",
              "description": "The number of items to skip. Useful for pagination (page number * limit)"
            },
            {
              "name": "limit",
              "in": "query",
              "type": "integer",
              "description": "The number of items to fetch"
            },
            {
              "name": "user_id",
              "in": "query",
              "type": "string",
              "description": "The user ID of the user making the request"
            }
          ],
          "tags": [
            "tracks"
          ]
        }
      },
      "/tracks/{track_id}/reposts": {
        "get": {
          "responses": {
            "200": {
              "description": "Success",
              "schema": {
                "$ref": "#/definitions/track_reposts_response_full"
              }
            },
            "400": {
              "description": "Bad request"
            },
            "500": {
              "description": "Server error"
            }
          },
          "description": "Get the users that reposted a track",
          "operationId": "Get Users From Reposts",
          "parameters": [
            {
              "name": "track_id",
              "in": "path",
              "required": true,
              "type": "string",
              "description": "A Track ID"
            },
            {
              "name": "offset",
              "in": "query",
              "type": "integer",
              "description": "The number of items to skip. Useful for pagination (page number * limit)"
            },
            {
              "name": "limit",
              "in": "query",
              "type": "integer",
              "description": "The number of items to fetch"
            },
            {
              "name": "user_id",
              "in": "query",
              "type": "string",
              "description": "The user ID of the user making the request"
            }
          ],
          "tags": [
            "tracks"
          ]
        }
      },
      "/tracks/{track_id}/stems": {
        "get": {
          "responses": {
            "200": {
              "description": "Success",
              "schema": {
                "$ref": "#/definitions/stems_response"
              }
            }
          },
          "description": "Get the remixable stems of a track",
          "operationId": "Get Track Stems",
          "parameters": [
            {
              "name": "track_id",
              "in": "path",
              "required": true,
              "type": "string",
              "description": "A Track ID"
            }
          ],
          "tags": [
            "tracks"
          ]
        }
      },
      "/tracks/{track_id}/top_listeners": {
        "get": {
          "responses": {
            "200": {
              "description": "Success",
              "schema": {
                "$ref": "#/definitions/full_top_listener"
              }
            },
            "400": {
              "description": "Bad request"
            },
            "500": {
              "description": "Server error"
            }
          },
          "description": "Get the users that have listened to a track the most",
          "operationId": "Get Track Top Listeners",
          "parameters": [
            {
              "name": "track_id",
              "in": "path",
              "required": true,
              "type": "string",
              "description": "A Track ID"
            },
            {
              "name": "offset",
              "in": "query",
              "type": "integer",
              "description": "The number of items to skip. Useful for pagination (page number * limit)"
            },
            {
              "name": "limit",
              "in": "query",
              "type": "integer",
              "description": "The number of items to fetch"
            },
            {
              "name": "user_id",
              "in": "query",
              "type": "string",
              "description": "The user ID of the user making the request"
            }
          ],
          "tags": [
            "tracks"
          ]
        }
      },
      "/tracks/{user_id}/nft-gated-signatures": {
        "get": {
          "responses": {
            "200": {
              "description": "Success",
              "schema": {
                "$ref": "#/definitions/nft_gated_track_signatures_response"
              }
            }
          },
          "description": "Gets gated track signatures for passed in gated track ids",
          "operationId": "Get NFT Gated Track Signatures",
          "parameters": [
            {
              "name": "user_id",
              "in": "path",
              "required": true,
              "type": "string",
              "description": "The user for whom we are generating gated track signatures."
            },
            {
              "name": "track_ids",
              "in": "query",
              "type": "array",
              "items": {
                "type": "integer"
              },
              "collectionFormat": "multi",
              "description": "A list of track ids. The order of these track ids will match the order of the token ids."
            },
            {
              "name": "token_ids",
              "in": "query",
              "type": "array",
              "items": {
                "type": "string"
              },
              "collectionFormat": "multi",
              "description": "A list of ERC1155 token ids. The order of these token ids will match the order of the track ids.\n        There may be multiple token ids for a given track id, so we use a '-' as the delimiter for a track id's token ids."
            }
          ],
          "tags": [
            "tracks"
          ]
        }
      },
      "/transactions": {
        "get": {
          "responses": {
            "200": {
              "description": "Success",
              "schema": {
                "$ref": "#/definitions/transaction_history_response"
              }
            }
          },
          "summary": "Gets the user's $AUDIO transaction history within the App",
          "description": "Deprecated: Use `/users/{id}/transactions/audio` or `sdk.full.users.getAudioTransactions()` instead.",
          "operationId": "Get Audio Transaction History",
          "parameters": [
            {
              "name": "offset",
              "in": "query",
              "type": "integer",
              "description": "The number of items to skip. Useful for pagination (page number * limit)"
            },
            {
              "name": "limit",
              "in": "query",
              "type": "integer",
              "description": "The number of items to fetch"
            },
            {
              "name": "sort_method",
              "in": "query",
              "type": "string",
              "default": "date",
              "enum": [
                "date",
                "transaction_type"
              ],
              "description": "The sort method"
            },
            {
              "name": "sort_direction",
              "in": "query",
              "type": "string",
              "default": "desc",
              "enum": [
                "asc",
                "desc"
              ],
              "description": "The sort direction"
            },
            {
              "name": "Encoded-Data-Message",
              "in": "header",
              "type": "string",
              "description": "The data that was signed by the user for signature recovery"
            },
            {
              "name": "Encoded-Data-Signature",
              "in": "header",
              "type": "string",
              "description": "The signature of data, used for signature recovery"
            }
          ],
          "deprecated": true,
          "tags": [
            "transactions"
          ]
        }
      },
      "/transactions/count": {
        "get": {
          "responses": {
            "200": {
              "description": "Success",
              "schema": {
                "$ref": "#/definitions/transaction_history_count_response"
              }
            }
          },
          "summary": "Gets the count of the user's $AUDIO transaction history within the App",
          "description": "Deprecated: Use `/users/{id}/transactions/audio/count` or `sdk.full.users.getAudioTransactionCount()` instead.",
          "operationId": "Get Audio Transaction History Count",
          "parameters": [
            {
              "name": "Encoded-Data-Message",
              "in": "header",
              "type": "string",
              "description": "The data that was signed by the user for signature recovery"
            },
            {
              "name": "Encoded-Data-Signature",
              "in": "header",
              "type": "string",
              "description": "The signature of data, used for signature recovery"
            }
          ],
          "deprecated": true,
          "tags": [
            "transactions"
          ]
        }
      },
      "/users": {
        "get": {
          "responses": {
            "200": {
              "description": "Success",
              "schema": {
                "$ref": "#/definitions/full_user_response"
              }
            },
            "400": {
              "description": "Bad request"
            },
            "500": {
              "description": "Server error"
            }
          },
          "description": "Gets a list of users by ID",
          "operationId": "Get Bulk Users",
          "parameters": [
            {
              "name": "user_id",
              "in": "query",
              "type": "string",
              "description": "The user ID of the user making the request"
            },
            {
              "name": "id",
              "in": "query",
              "type": "array",
              "items": {
                "type": "string"
              },
              "collectionFormat": "multi",
              "description": "The ID of the user(s)"
            }
          ],
          "tags": [
            "users"
          ]
        }
      },
      "/users/account/{wallet}": {
        "get": {
          "responses": {
            "200": {
              "description": "Success",
              "schema": {
                "$ref": "#/definitions/user_account_response_full"
              }
            },
            "401": {
              "description": "Unauthorized"
            },
            "403": {
              "description": "Forbidden"
            },
            "404": {
              "description": "Not Found"
            },
            "500": {
              "description": "Server error"
            }
          },
          "description": "Gets the account for a given user",
          "operationId": "Get User Account",
          "parameters": [
            {
              "name": "wallet",
              "in": "path",
              "required": true,
              "type": "string",
              "description": "Wallet address for the account"
            },
            {
              "name": "Encoded-Data-Message",
              "in": "header",
              "type": "string",
              "description": "The data that was signed by the user for signature recovery"
            },
            {
              "name": "Encoded-Data-Signature",
              "in": "header",
              "type": "string",
              "description": "The signature of data, used for signature recovery"
            }
          ],
          "tags": [
            "users"
          ]
        }
      },
      "/users/genre/top": {
        "get": {
          "responses": {
            "200": {
              "description": "Success",
              "schema": {
                "$ref": "#/definitions/top_genre_users_response_full"
              }
            },
            "400": {
              "description": "Bad request"
            },
            "500": {
              "description": "Server error"
            }
          },
          "description": "Get the Top Users for a Given Genre",
          "operationId": "Get Top Users In Genre",
          "parameters": [
            {
              "name": "offset",
              "in": "query",
              "type": "integer",
              "description": "The number of items to skip. Useful for pagination (page number * limit)"
            },
            {
              "name": "limit",
              "in": "query",
              "type": "integer",
              "description": "The number of items to fetch"
            },
            {
              "name": "genre",
              "in": "query",
              "type": "array",
              "items": {
                "type": "string"
              },
              "collectionFormat": "multi",
              "description": "List of Genres"
            }
          ],
          "tags": [
            "users"
          ]
        }
      },
      "/users/handle/{handle}": {
        "get": {
          "responses": {
            "200": {
              "description": "Success",
              "schema": {
                "$ref": "#/definitions/full_user_response"
              }
            },
            "400": {
              "description": "Bad request"
            },
            "500": {
              "description": "Server error"
            }
          },
          "description": "Gets a single user by their handle",
          "operationId": "Get User by Handle",
          "parameters": [
            {
              "name": "handle",
              "in": "path",
              "required": true,
              "type": "string",
              "description": "A User handle"
            },
            {
              "name": "user_id",
              "in": "query",
              "type": "string",
              "description": "The user ID of the user making the request"
            }
          ],
          "tags": [
            "users"
          ]
        }
      },
      "/users/handle/{handle}/reposts": {
        "get": {
          "responses": {
            "200": {
              "description": "Success",
              "schema": {
                "$ref": "#/definitions/full_reposts"
              }
            },
            "400": {
              "description": "Bad request"
            },
            "500": {
              "description": "Server error"
            }
          },
          "description": "Gets the user's reposts by the user handle",
          "operationId": "Get Reposts by Handle",
          "parameters": [
            {
              "name": "handle",
              "in": "path",
              "required": true,
              "type": "string",
              "description": "A User handle"
            },
            {
              "name": "offset",
              "in": "query",
              "type": "integer",
              "description": "The number of items to skip. Useful for pagination (page number * limit)"
            },
            {
              "name": "limit",
              "in": "query",
              "type": "integer",
              "description": "The number of items to fetch"
            },
            {
              "name": "user_id",
              "in": "query",
              "type": "string",
              "description": "The user ID of the user making the request"
            }
          ],
          "tags": [
            "users"
          ]
        }
      },
      "/users/handle/{handle}/tracks": {
        "get": {
          "responses": {
            "200": {
              "description": "Success",
              "schema": {
                "$ref": "#/definitions/full_tracks"
              }
            },
            "400": {
              "description": "Bad request"
            },
            "500": {
              "description": "Server error"
            }
          },
          "description": "Gets the tracks created by a user using the user's handle",
          "operationId": "Get Tracks by User Handle",
          "parameters": [
            {
              "name": "handle",
              "in": "path",
              "required": true,
              "type": "string",
              "description": "A User handle"
            },
            {
              "name": "offset",
              "in": "query",
              "type": "integer",
              "description": "The number of items to skip. Useful for pagination (page number * limit)"
            },
            {
              "name": "limit",
              "in": "query",
              "type": "integer",
              "description": "The number of items to fetch"
            },
            {
              "name": "user_id",
              "in": "query",
              "type": "string",
              "description": "The user ID of the user making the request"
            },
            {
              "name": "sort",
              "in": "query",
              "type": "string",
              "default": "date",
              "enum": [
                "date",
                "plays"
              ],
              "description": "[Deprecated] Field to sort by"
            },
            {
              "name": "query",
              "in": "query",
              "type": "string",
              "description": "The filter query"
            },
            {
              "name": "sort_method",
              "in": "query",
              "type": "string",
              "enum": [
                "title",
                "artist_name",
                "release_date",
                "last_listen_date",
                "added_date",
                "plays",
                "reposts",
                "saves",
                "most_listens_by_user"
              ],
              "description": "The sort method"
            },
            {
              "name": "sort_direction",
              "in": "query",
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ],
              "description": "The sort direction"
            },
            {
              "name": "filter_tracks",
              "in": "query",
              "type": "string",
              "default": "all",
              "enum": [
                "all",
                "public",
                "unlisted"
              ],
              "description": "Filter by unlisted or public tracks"
            },
            {
              "name": "Encoded-Data-Message",
              "in": "header",
              "type": "string",
              "description": "The data that was signed by the user for signature recovery"
            },
            {
              "name": "Encoded-Data-Signature",
              "in": "header",
              "type": "string",
              "description": "The signature of data, used for signature recovery"
            }
          ],
          "tags": [
            "users"
          ]
        }
      },
      "/users/handle/{handle}/tracks/ai_attributed": {
        "get": {
          "responses": {
            "200": {
              "description": "Success",
              "schema": {
                "$ref": "#/definitions/full_tracks"
              }
            },
            "400": {
              "description": "Bad request"
            },
            "500": {
              "description": "Server error"
            }
          },
          "description": "Gets the AI generated tracks attributed to a user using the user's handle",
          "operationId": "Get AI Attributed Tracks by User Handle",
          "parameters": [
            {
              "name": "handle",
              "in": "path",
              "required": true,
              "type": "string",
              "description": "A User handle"
            },
            {
              "name": "offset",
              "in": "query",
              "type": "integer",
              "description": "The number of items to skip. Useful for pagination (page number * limit)"
            },
            {
              "name": "limit",
              "in": "query",
              "type": "integer",
              "description": "The number of items to fetch"
            },
            {
              "name": "user_id",
              "in": "query",
              "type": "string",
              "description": "The user ID of the user making the request"
            },
            {
              "name": "sort",
              "in": "query",
              "type": "string",
              "default": "date",
              "enum": [
                "date",
                "plays"
              ],
              "description": "[Deprecated] Field to sort by"
            },
            {
              "name": "query",
              "in": "query",
              "type": "string",
              "description": "The filter query"
            },
            {
              "name": "sort_method",
              "in": "query",
              "type": "string",
              "enum": [
                "title",
                "artist_name",
                "release_date",
                "last_listen_date",
                "added_date",
                "plays",
                "reposts",
                "saves",
                "most_listens_by_user"
              ],
              "description": "The sort method"
            },
            {
              "name": "sort_direction",
              "in": "query",
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ],
              "description": "The sort direction"
            },
            {
              "name": "filter_tracks",
              "in": "query",
              "type": "string",
              "default": "all",
              "enum": [
                "all",
                "public",
                "unlisted"
              ],
              "description": "Filter by unlisted or public tracks"
            },
            {
              "name": "Encoded-Data-Message",
              "in": "header",
              "type": "string",
              "description": "The data that was signed by the user for signature recovery"
            },
            {
              "name": "Encoded-Data-Signature",
              "in": "header",
              "type": "string",
              "description": "The signature of data, used for signature recovery"
            }
          ],
          "tags": [
            "users"
          ]
        }
      },
      "/users/subscribers": {
        "get": {
          "responses": {
            "200": {
              "description": "Success",
              "schema": {
                "$ref": "#/definitions/full_bulk_subscribers_response"
              }
            },
            "400": {
              "description": "Bad request"
            },
            "500": {
              "description": "Server error"
            }
          },
          "description": "All users that subscribe to the provided users",
          "operationId": "Bulk Get Subscribers",
          "parameters": [
            {
              "name": "ids",
              "in": "query",
              "type": "array",
              "required": true,
              "items": {
                "type": "string"
              },
              "collectionFormat": "csv",
              "description": "User IDs to fetch subscribers for"
            }
          ],
          "tags": [
            "users"
          ]
        },
        "post": {
          "responses": {
            "200": {
              "description": "Success",
              "schema": {
                "$ref": "#/definitions/full_bulk_subscribers_response"
              }
            },
            "400": {
              "description": "Bad request"
            },
            "500": {
              "description": "Server error"
            }
          },
          "description": "Get all users that subscribe to the users listed in the JSON request",
          "operationId": "Bulk Get Subscribers via JSON request",
          "parameters": [
            {
              "name": "ids",
              "in": "query",
              "type": "array",
              "required": true,
              "items": {
                "type": "string"
              },
              "collectionFormat": "csv",
              "description": "User IDs to fetch subscribers for"
            }
          ],
          "tags": [
            "users"
          ]
        }
      },
      "/users/top": {
        "get": {
          "responses": {
            "200": {
              "description": "Success",
              "schema": {
                "$ref": "#/definitions/top_users_response_full"
              }
            },
            "400": {
              "description": "Bad request"
            },
            "500": {
              "description": "Server error"
            }
          },
          "description": "Get the Top Users having at least one track by follower count",
          "operationId": "Get Top Users",
          "parameters": [
            {
              "name": "offset",
              "in": "query",
              "type": "integer",
              "description": "The number of items to skip. Useful for pagination (page number * limit)"
            },
            {
              "name": "limit",
              "in": "query",
              "type": "integer",
              "description": "The number of items to fetch"
            },
            {
              "name": "user_id",
              "in": "query",
              "type": "string",
              "description": "The user ID of the user making the request"
            }
          ],
          "tags": [
            "users"
          ]
        }
      },
      "/users/{id}": {
        "get": {
          "responses": {
            "200": {
              "description": "Success",
              "schema": {
                "$ref": "#/definitions/full_user_response"
              }
            },
            "400": {
              "description": "Bad request"
            },
            "500": {
              "description": "Server error"
            }
          },
          "description": "Gets a single user by their user ID",
          "operationId": "Get User",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "type": "string",
              "description": "A User ID"
            },
            {
              "name": "user_id",
              "in": "query",
              "type": "string",
              "description": "The user ID of the user making the request"
            }
          ],
          "tags": [
            "users"
          ]
        }
      },
      "/users/{id}/albums": {
        "get": {
          "responses": {
            "200": {
              "description": "Success",
              "schema": {
                "$ref": "#/definitions/albums_response_full"
              }
            },
            "400": {
              "description": "Bad request"
            },
            "500": {
              "description": "Server error"
            }
          },
          "description": "Gets the albums created by a user using their user ID",
          "operationId": "Get Albums by User",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "type": "string",
              "description": "A User ID"
            },
            {
              "name": "offset",
              "in": "query",
              "type": "integer",
              "description": "The number of items to skip. Useful for pagination (page number * limit)"
            },
            {
              "name": "limit",
              "in": "query",
              "type": "integer",
              "description": "The number of items to fetch"
            },
            {
              "name": "user_id",
              "in": "query",
              "type": "string",
              "description": "The user ID of the user making the request"
            },
            {
              "name": "sort_method",
              "in": "query",
              "type": "string",
              "default": "recent",
              "enum": [
                "recent",
                "popular"
              ],
              "description": "The sort method"
            },
            {
              "name": "query",
              "in": "query",
              "type": "string",
              "description": "Filter albums by name"
            },
            {
              "name": "Encoded-Data-Message",
              "in": "header",
              "type": "string",
              "description": "The data that was signed by the user for signature recovery"
            },
            {
              "name": "Encoded-Data-Signature",
              "in": "header",
              "type": "string",
              "description": "The signature of data, used for signature recovery"
            }
          ],
          "tags": [
            "users"
          ]
        }
      },
      "/users/{id}/comments": {
        "get": {
          "responses": {
            "200": {
              "description": "Success",
              "schema": {
                "$ref": "#/definitions/user_comments_response_full"
              }
            },
            "400": {
              "description": "Bad request"
            },
            "500": {
              "description": "Server error"
            }
          },
          "description": "Get user comment history",
          "operationId": "Get User Comments",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "type": "string",
              "description": "A User ID"
            },
            {
              "name": "offset",
              "in": "query",
              "type": "integer",
              "description": "The number of items to skip. Useful for pagination (page number * limit)"
            },
            {
              "name": "limit",
              "in": "query",
              "type": "integer",
              "description": "The number of items to fetch"
            },
            {
              "name": "user_id",
              "in": "query",
              "type": "string",
              "description": "The user ID of the user making the request"
            }
          ],
          "tags": [
            "users"
          ]
        }
      },
      "/users/{id}/favorites/tracks": {
        "get": {
          "responses": {
            "200": {
              "description": "Success",
              "schema": {
                "$ref": "#/definitions/track_library_response_full"
              }
            },
            "400": {
              "description": "Bad request"
            },
            "500": {
              "description": "Server error"
            }
          },
          "description": "Gets a user's favorite tracks",
          "operationId": "Get Favorites",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "type": "string",
              "description": "A User ID"
            },
            {
              "name": "offset",
              "in": "query",
              "type": "integer",
              "description": "The number of items to skip. Useful for pagination (page number * limit)"
            },
            {
              "name": "limit",
              "in": "query",
              "type": "integer",
              "description": "The number of items to fetch"
            },
            {
              "name": "user_id",
              "in": "query",
              "type": "string",
              "description": "The user ID of the user making the request"
            },
            {
              "name": "query",
              "in": "query",
              "type": "string",
              "description": "The filter query"
            },
            {
              "name": "sort_method",
              "in": "query",
              "type": "string",
              "enum": [
                "title",
                "artist_name",
                "release_date",
                "last_listen_date",
                "added_date",
                "plays",
                "reposts",
                "saves",
                "most_listens_by_user"
              ],
              "description": "The sort method"
            },
            {
              "name": "sort_direction",
              "in": "query",
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ],
              "description": "The sort direction"
            }
          ],
          "tags": [
            "users"
          ]
        }
      },
      "/users/{id}/feed": {
        "get": {
          "responses": {
            "200": {
              "description": "Success",
              "schema": {
                "$ref": "#/definitions/user_feed_response"
              }
            },
            "400": {
              "description": "Bad request"
            },
            "500": {
              "description": "Server error"
            }
          },
          "description": "Gets the feed for the user",
          "operationId": "Get User Feed",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "type": "string",
              "description": "A User ID"
            },
            {
              "name": "offset",
              "in": "query",
              "type": "integer",
              "description": "The number of items to skip. Useful for pagination (page number * limit)"
            },
            {
              "name": "limit",
              "in": "query",
              "type": "integer",
              "description": "The number of items to fetch"
            },
            {
              "name": "user_id",
              "in": "query",
              "type": "string",
              "description": "The user ID of the user making the request"
            },
            {
              "name": "filter",
              "in": "query",
              "type": "string",
              "default": "all",
              "enum": [
                "all",
                "repost",
                "original"
              ],
              "description": "Controls whether the feed is limited to reposts, original content, or all items"
            },
            {
              "name": "tracks_only",
              "in": "query",
              "type": "boolean",
              "description": "Limit feed to only tracks"
            },
            {
              "name": "with_users",
              "in": "query",
              "type": "boolean",
              "description": "Include user data with feed items"
            },
            {
              "name": "followee_user_id",
              "in": "query",
              "type": "array",
              "items": {
                "type": "integer"
              },
              "collectionFormat": "multi",
              "description": "A list of followed users to prioritize in feed generation"
            },
            {
              "name": "Encoded-Data-Message",
              "in": "header",
              "type": "string",
              "description": "The data that was signed by the user for signature recovery"
            },
            {
              "name": "Encoded-Data-Signature",
              "in": "header",
              "type": "string",
              "description": "The signature of data, used for signature recovery"
            }
          ],
          "tags": [
            "users"
          ]
        }
      },
      "/users/{id}/followers": {
        "get": {
          "responses": {
            "200": {
              "description": "Success",
              "schema": {
                "$ref": "#/definitions/full_followers_response"
              }
            },
            "400": {
              "description": "Bad request"
            },
            "500": {
              "description": "Server error"
            }
          },
          "description": "All users that follow the provided user",
          "operationId": "Get Followers",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "type": "string",
              "description": "A User ID"
            },
            {
              "name": "offset",
              "in": "query",
              "type": "integer",
              "description": "The number of items to skip. Useful for pagination (page number * limit)"
            },
            {
              "name": "limit",
              "in": "query",
              "type": "integer",
              "description": "The number of items to fetch"
            },
            {
              "name": "user_id",
              "in": "query",
              "type": "string",
              "description": "The user ID of the user making the request"
            }
          ],
          "tags": [
            "users"
          ]
        }
      },
      "/users/{id}/following": {
        "get": {
          "responses": {
            "200": {
              "description": "Success",
              "schema": {
                "$ref": "#/definitions/following_response_full"
              }
            },
            "400": {
              "description": "Bad request"
            },
            "500": {
              "description": "Server error"
            }
          },
          "description": "All users that the provided user follows",
          "operationId": "Get Following",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "type": "string",
              "description": "A User ID"
            },
            {
              "name": "offset",
              "in": "query",
              "type": "integer",
              "description": "The number of items to skip. Useful for pagination (page number * limit)"
            },
            {
              "name": "limit",
              "in": "query",
              "type": "integer",
              "description": "The number of items to fetch"
            },
            {
              "name": "user_id",
              "in": "query",
              "type": "string",
              "description": "The user ID of the user making the request"
            }
          ],
          "tags": [
            "users"
          ]
        }
      },
      "/users/{id}/history/tracks": {
        "get": {
          "responses": {
            "200": {
              "description": "Success",
              "schema": {
                "$ref": "#/definitions/history_response_full"
              }
            },
            "400": {
              "description": "Bad request"
            },
            "401": {
              "description": "Unauthorized"
            },
            "403": {
              "description": "Forbidden"
            },
            "500": {
              "description": "Server error"
            }
          },
          "description": "Get the tracks the user recently listened to.",
          "operationId": "Get User's Track History",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "type": "string",
              "description": "A User ID"
            },
            {
              "name": "offset",
              "in": "query",
              "type": "integer",
              "description": "The number of items to skip. Useful for pagination (page number * limit)"
            },
            {
              "name": "limit",
              "in": "query",
              "type": "integer",
              "description": "The number of items to fetch"
            },
            {
              "name": "query",
              "in": "query",
              "type": "string",
              "description": "The filter query"
            },
            {
              "name": "sort_method",
              "in": "query",
              "type": "string",
              "enum": [
                "title",
                "artist_name",
                "release_date",
                "last_listen_date",
                "added_date",
                "plays",
                "reposts",
                "saves",
                "most_listens_by_user"
              ],
              "description": "The sort method"
            },
            {
              "name": "sort_direction",
              "in": "query",
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ],
              "description": "The sort direction"
            },
            {
              "name": "Encoded-Data-Message",
              "in": "header",
              "type": "string",
              "description": "The data that was signed by the user for signature recovery"
            },
            {
              "name": "Encoded-Data-Signature",
              "in": "header",
              "type": "string",
              "description": "The signature of data, used for signature recovery"
            }
          ],
          "tags": [
            "users"
          ]
        }
      },
      "/users/{id}/library/albums": {
        "get": {
          "responses": {
            "200": {
              "description": "Success",
              "schema": {
                "$ref": "#/definitions/collection_library_response_full"
              }
            },
            "400": {
              "description": "Bad request"
            },
            "500": {
              "description": "Server error"
            }
          },
          "summary": "Fetch a user's full library playlists",
          "description": "Gets a user's saved/reposted/purchased/all albums",
          "operationId": "Get User Library Albums",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "type": "string",
              "description": "A user ID"
            },
            {
              "name": "offset",
              "in": "query",
              "type": "integer",
              "description": "The number of items to skip. Useful for pagination (page number * limit)"
            },
            {
              "name": "limit",
              "in": "query",
              "type": "integer",
              "description": "The number of items to fetch"
            },
            {
              "name": "user_id",
              "in": "query",
              "type": "string",
              "description": "The user ID of the user making the request"
            },
            {
              "name": "query",
              "in": "query",
              "type": "string",
              "description": "The filter query"
            },
            {
              "name": "sort_direction",
              "in": "query",
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ],
              "description": "The sort direction"
            },
            {
              "name": "type",
              "in": "query",
              "type": "string",
              "default": "favorite",
              "enum": [
                "all",
                "repost",
                "favorite",
                "purchase"
              ],
              "description": "The type of entity to return: favorited, reposted, purchased, or all. Defaults to favorite"
            },
            {
              "name": "sort_method",
              "in": "query",
              "type": "string",
              "enum": [
                "added_date",
                "reposts",
                "saves"
              ],
              "description": "The sort method"
            },
            {
              "name": "Encoded-Data-Message",
              "in": "header",
              "type": "string",
              "description": "The data that was signed by the user for signature recovery"
            },
            {
              "name": "Encoded-Data-Signature",
              "in": "header",
              "type": "string",
              "description": "The signature of data, used for signature recovery"
            }
          ],
          "tags": [
            "users"
          ]
        }
      },
      "/users/{id}/library/playlists": {
        "get": {
          "responses": {
            "200": {
              "description": "Success",
              "schema": {
                "$ref": "#/definitions/collection_library_response_full"
              }
            },
            "400": {
              "description": "Bad request"
            },
            "500": {
              "description": "Server error"
            }
          },
          "summary": "Fetch a user's full library playlists",
          "description": "Gets a user's saved/reposted/purchased/all playlists",
          "operationId": "Get User Library Playlists",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "type": "string",
              "description": "A user ID"
            },
            {
              "name": "offset",
              "in": "query",
              "type": "integer",
              "description": "The number of items to skip. Useful for pagination (page number * limit)"
            },
            {
              "name": "limit",
              "in": "query",
              "type": "integer",
              "description": "The number of items to fetch"
            },
            {
              "name": "user_id",
              "in": "query",
              "type": "string",
              "description": "The user ID of the user making the request"
            },
            {
              "name": "query",
              "in": "query",
              "type": "string",
              "description": "The filter query"
            },
            {
              "name": "sort_direction",
              "in": "query",
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ],
              "description": "The sort direction"
            },
            {
              "name": "type",
              "in": "query",
              "type": "string",
              "default": "favorite",
              "enum": [
                "all",
                "repost",
                "favorite",
                "purchase"
              ],
              "description": "The type of entity to return: favorited, reposted, purchased, or all. Defaults to favorite"
            },
            {
              "name": "sort_method",
              "in": "query",
              "type": "string",
              "enum": [
                "added_date",
                "reposts",
                "saves"
              ],
              "description": "The sort method"
            },
            {
              "name": "Encoded-Data-Message",
              "in": "header",
              "type": "string",
              "description": "The data that was signed by the user for signature recovery"
            },
            {
              "name": "Encoded-Data-Signature",
              "in": "header",
              "type": "string",
              "description": "The signature of data, used for signature recovery"
            }
          ],
          "tags": [
            "users"
          ]
        }
      },
      "/users/{id}/library/tracks": {
        "get": {
          "responses": {
            "200": {
              "description": "Success",
              "schema": {
                "$ref": "#/definitions/track_library_response_full"
              }
            },
            "400": {
              "description": "Bad request"
            },
            "500": {
              "description": "Server error"
            }
          },
          "summary": "Fetch a user's full library tracks",
          "description": "Gets a user's saved/reposted/purchased/all tracks",
          "operationId": "Get User Library Tracks",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "type": "string",
              "description": "A user ID"
            },
            {
              "name": "offset",
              "in": "query",
              "type": "integer",
              "description": "The number of items to skip. Useful for pagination (page number * limit)"
            },
            {
              "name": "limit",
              "in": "query",
              "type": "integer",
              "description": "The number of items to fetch"
            },
            {
              "name": "user_id",
              "in": "query",
              "type": "string",
              "description": "The user ID of the user making the request"
            },
            {
              "name": "query",
              "in": "query",
              "type": "string",
              "description": "The filter query"
            },
            {
              "name": "sort_method",
              "in": "query",
              "type": "string",
              "enum": [
                "title",
                "artist_name",
                "release_date",
                "last_listen_date",
                "added_date",
                "plays",
                "reposts",
                "saves",
                "most_listens_by_user"
              ],
              "description": "The sort method"
            },
            {
              "name": "sort_direction",
              "in": "query",
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ],
              "description": "The sort direction"
            },
            {
              "name": "type",
              "in": "query",
              "type": "string",
              "default": "favorite",
              "enum": [
                "all",
                "repost",
                "favorite",
                "purchase"
              ],
              "description": "The type of entity to return: favorited, reposted, purchased, or all. Defaults to favorite"
            },
            {
              "name": "Encoded-Data-Message",
              "in": "header",
              "type": "string",
              "description": "The data that was signed by the user for signature recovery"
            },
            {
              "name": "Encoded-Data-Signature",
              "in": "header",
              "type": "string",
              "description": "The signature of data, used for signature recovery"
            }
          ],
          "tags": [
            "users"
          ]
        }
      },
      "/users/{id}/managed_users": {
        "get": {
          "responses": {
            "200": {
              "description": "Success",
              "schema": {
                "$ref": "#/definitions/managed_users_response"
              }
            },
            "400": {
              "description": "Bad request"
            },
            "401": {
              "description": "Unauthorized"
            },
            "403": {
              "description": "Forbidden"
            },
            "500": {
              "description": "Server error"
            }
          },
          "description": "Gets a list of users managed by the given user",
          "operationId": "Get Managed Users",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "type": "string",
              "description": "A user id for the manager"
            },
            {
              "name": "is_approved",
              "in": "query",
              "type": "boolean",
              "description": "If true, only show users where the management request has been accepted. If false, only show those where the request was rejected. If omitted, shows all users regardless of approval status."
            },
            {
              "name": "is_revoked",
              "in": "query",
              "type": "boolean",
              "default": false,
              "description": "If true, only show users where the management request has been revoked. If false, only show those with a pending or accepted request. Defaults to false."
            },
            {
              "name": "Encoded-Data-Message",
              "in": "header",
              "type": "string",
              "description": "The data that was signed by the user for signature recovery"
            },
            {
              "name": "Encoded-Data-Signature",
              "in": "header",
              "type": "string",
              "description": "The signature of data, used for signature recovery"
            }
          ],
          "tags": [
            "users"
          ]
        }
      },
      "/users/{id}/managers": {
        "get": {
          "responses": {
            "200": {
              "description": "Success",
              "schema": {
                "$ref": "#/definitions/managers_response"
              }
            },
            "400": {
              "description": "Bad request"
            },
            "401": {
              "description": "Unauthorized"
            },
            "403": {
              "description": "Forbidden"
            },
            "500": {
              "description": "Server error"
            }
          },
          "description": "Gets a list of users managing the given user",
          "operationId": "Get Managers",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "type": "string",
              "description": "An id for the managed user"
            },
            {
              "name": "is_approved",
              "in": "query",
              "type": "boolean",
              "description": "If true, only show users where the management request has been accepted. If false, only show those where the request was rejected. If omitted, shows all users regardless of approval status."
            },
            {
              "name": "is_revoked",
              "in": "query",
              "type": "boolean",
              "default": false,
              "description": "If true, only show users where the management request has been revoked. If false, only show those with a pending or accepted request. Defaults to false."
            },
            {
              "name": "Encoded-Data-Message",
              "in": "header",
              "type": "string",
              "description": "The data that was signed by the user for signature recovery"
            },
            {
              "name": "Encoded-Data-Signature",
              "in": "header",
              "type": "string",
              "description": "The signature of data, used for signature recovery"
            }
          ],
          "tags": [
            "users"
          ]
        }
      },
      "/users/{id}/muted": {
        "get": {
          "responses": {
            "200": {
              "description": "Success",
              "schema": {
                "$ref": "#/definitions/full_user_response"
              }
            },
            "400": {
              "description": "Bad request"
            },
            "500": {
              "description": "Server error"
            }
          },
          "description": "Gets users muted by the given user",
          "operationId": "Get Muted Users",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "type": "string",
              "description": "A User ID"
            },
            {
              "name": "Encoded-Data-Message",
              "in": "header",
              "type": "string",
              "description": "The data that was signed by the user for signature recovery"
            },
            {
              "name": "Encoded-Data-Signature",
              "in": "header",
              "type": "string",
              "description": "The signature of data, used for signature recovery"
            }
          ],
          "tags": [
            "users"
          ]
        }
      },
      "/users/{id}/mutuals": {
        "get": {
          "responses": {
            "200": {
              "description": "Success",
              "schema": {
                "$ref": "#/definitions/full_mutual_followers_response"
              }
            },
            "400": {
              "description": "Bad request"
            },
            "500": {
              "description": "Server error"
            }
          },
          "description": "Get intersection of users that follow followeeUserId and users that are followed by followerUserId",
          "operationId": "Get Mutual Followers",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "type": "string",
              "description": "A User ID"
            },
            {
              "name": "offset",
              "in": "query",
              "type": "integer",
              "description": "The number of items to skip. Useful for pagination (page number * limit)"
            },
            {
              "name": "limit",
              "in": "query",
              "type": "integer",
              "description": "The number of items to fetch"
            },
            {
              "name": "user_id",
              "in": "query",
              "type": "string",
              "description": "The user ID of the user making the request"
            }
          ],
          "tags": [
            "users"
          ]
        }
      },
      "/users/{id}/playlists": {
        "get": {
          "responses": {
            "200": {
              "description": "Success",
              "schema": {
                "$ref": "#/definitions/playlists_response_full"
              }
            },
            "400": {
              "description": "Bad request"
            },
            "500": {
              "description": "Server error"
            }
          },
          "description": "Gets the playlists created by a user using their user ID",
          "operationId": "Get Playlists by User",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "type": "string",
              "description": "A User ID"
            },
            {
              "name": "offset",
              "in": "query",
              "type": "integer",
              "description": "The number of items to skip. Useful for pagination (page number * limit)"
            },
            {
              "name": "limit",
              "in": "query",
              "type": "integer",
              "description": "The number of items to fetch"
            },
            {
              "name": "user_id",
              "in": "query",
              "type": "string",
              "description": "The user ID of the user making the request"
            },
            {
              "name": "sort_method",
              "in": "query",
              "type": "string",
              "default": "recent",
              "enum": [
                "recent",
                "popular"
              ],
              "description": "The sort method"
            },
            {
              "name": "query",
              "in": "query",
              "type": "string",
              "description": "Filter playlists by name"
            },
            {
              "name": "Encoded-Data-Message",
              "in": "header",
              "type": "string",
              "description": "The data that was signed by the user for signature recovery"
            },
            {
              "name": "Encoded-Data-Signature",
              "in": "header",
              "type": "string",
              "description": "The signature of data, used for signature recovery"
            }
          ],
          "tags": [
            "users"
          ]
        }
      },
      "/users/{id}/purchasers": {
        "get": {
          "responses": {
            "200": {
              "description": "Success",
              "schema": {
                "$ref": "#/definitions/full_purchasers_response"
              }
            },
            "400": {
              "description": "Bad request"
            },
            "500": {
              "description": "Server error"
            }
          },
          "description": "Gets the list of unique users who have purchased content by the given user",
          "operationId": "Get purchasers",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "type": "string",
              "description": "A User ID"
            },
            {
              "name": "offset",
              "in": "query",
              "type": "integer",
              "description": "The number of items to skip. Useful for pagination (page number * limit)"
            },
            {
              "name": "limit",
              "in": "query",
              "type": "integer",
              "description": "The number of items to fetch"
            },
            {
              "name": "user_id",
              "in": "query",
              "type": "string",
              "description": "The user ID of the user making the request"
            },
            {
              "name": "content_type",
              "in": "query",
              "type": "string",
              "description": "Type of content to filter by (track or album)"
            },
            {
              "name": "content_id",
              "in": "query",
              "type": "string",
              "description": "Filters for users who have purchased the given track or album ID"
            }
          ],
          "tags": [
            "users"
          ]
        }
      },
      "/users/{id}/purchasers/count": {
        "get": {
          "responses": {
            "200": {
              "description": "Success",
              "schema": {
                "$ref": "#/definitions/purchasers_count_response"
              }
            },
            "400": {
              "description": "Bad request"
            },
            "500": {
              "description": "Server error"
            }
          },
          "description": "Gets the list of users who have purchased content by the given user",
          "operationId": "Get purchasers count",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "type": "string",
              "description": "A User ID"
            },
            {
              "name": "offset",
              "in": "query",
              "type": "integer",
              "description": "The number of items to skip. Useful for pagination (page number * limit)"
            },
            {
              "name": "limit",
              "in": "query",
              "type": "integer",
              "description": "The number of items to fetch"
            },
            {
              "name": "user_id",
              "in": "query",
              "type": "string",
              "description": "The user ID of the user making the request"
            },
            {
              "name": "content_type",
              "in": "query",
              "type": "string",
              "description": "Type of content to filter by (track or album)"
            },
            {
              "name": "content_id",
              "in": "query",
              "type": "string",
              "description": "Filters for users who have purchased the given track or album ID"
            }
          ],
          "tags": [
            "users"
          ]
        }
      },
      "/users/{id}/purchases": {
        "get": {
          "responses": {
            "200": {
              "description": "Success",
              "schema": {
                "$ref": "#/definitions/purchases_response"
              }
            }
          },
          "description": "Gets the purchases the user has made",
          "operationId": "Get Purchases",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "type": "string",
              "description": "A User ID"
            },
            {
              "name": "offset",
              "in": "query",
              "type": "integer",
              "description": "The number of items to skip. Useful for pagination (page number * limit)"
            },
            {
              "name": "limit",
              "in": "query",
              "type": "integer",
              "description": "The number of items to fetch"
            },
            {
              "name": "user_id",
              "in": "query",
              "type": "string",
              "description": "The user ID of the user making the request"
            },
            {
              "name": "sort_method",
              "in": "query",
              "type": "string",
              "enum": [
                "content_title",
                "artist_name",
                "buyer_name",
                "date"
              ],
              "description": "The sort direction"
            },
            {
              "name": "sort_direction",
              "in": "query",
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ],
              "description": "The sort direction"
            },
            {
              "name": "content_ids",
              "in": "query",
              "type": "array",
              "items": {
                "type": "string"
              },
              "collectionFormat": "multi",
              "description": "Filters purchases by track or album IDs"
            },
            {
              "name": "Encoded-Data-Message",
              "in": "header",
              "type": "string",
              "description": "The data that was signed by the user for signature recovery"
            },
            {
              "name": "Encoded-Data-Signature",
              "in": "header",
              "type": "string",
              "description": "The signature of data, used for signature recovery"
            }
          ],
          "tags": [
            "users"
          ]
        }
      },
      "/users/{id}/purchases/count": {
        "get": {
          "responses": {
            "200": {
              "description": "Success",
              "schema": {
                "$ref": "#/definitions/purchases_count_response"
              }
            }
          },
          "description": "Gets the count of purchases the user has made",
          "operationId": "Get Purchases Count",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "type": "string",
              "description": "A User ID"
            },
            {
              "name": "user_id",
              "in": "query",
              "type": "string",
              "description": "The user ID of the user making the request"
            },
            {
              "name": "content_ids",
              "in": "query",
              "type": "array",
              "items": {
                "type": "string"
              },
              "collectionFormat": "multi",
              "description": "Filters purchases by track or album IDs"
            },
            {
              "name": "Encoded-Data-Message",
              "in": "header",
              "type": "string",
              "description": "The data that was signed by the user for signature recovery"
            },
            {
              "name": "Encoded-Data-Signature",
              "in": "header",
              "type": "string",
              "description": "The signature of data, used for signature recovery"
            }
          ],
          "tags": [
            "users"
          ]
        }
      },
      "/users/{id}/recommended-tracks": {
        "get": {
          "responses": {
            "200": {
              "description": "Success",
              "schema": {
                "$ref": "#/definitions/full_tracks"
              }
            },
            "400": {
              "description": "Bad request"
            },
            "500": {
              "description": "Server error"
            }
          },
          "description": "Gets the recommended tracks for the user",
          "operationId": "Get User Recommended Tracks",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "type": "string",
              "description": "A User ID"
            },
            {
              "name": "offset",
              "in": "query",
              "type": "integer",
              "description": "The number of items to skip. Useful for pagination (page number * limit)"
            },
            {
              "name": "limit",
              "in": "query",
              "type": "integer",
              "description": "The number of items to fetch"
            },
            {
              "name": "user_id",
              "in": "query",
              "type": "string",
              "description": "The user ID of the user making the request"
            },
            {
              "name": "time_range",
              "in": "query",
              "type": "string",
              "default": "week",
              "enum": [
                "week",
                "month",
                "allTime"
              ],
              "description": "The time range for the recommended tracks"
            }
          ],
          "tags": [
            "users"
          ]
        }
      },
      "/users/{id}/related": {
        "get": {
          "responses": {
            "200": {
              "description": "Success",
              "schema": {
                "$ref": "#/definitions/related_artist_response_full"
              }
            },
            "400": {
              "description": "Bad request"
            },
            "500": {
              "description": "Server error"
            }
          },
          "description": "Gets a list of users that might be of interest to followers of this user.",
          "operationId": "Get Related Users",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "type": "string",
              "description": "A User ID"
            },
            {
              "name": "offset",
              "in": "query",
              "type": "integer",
              "description": "The number of items to skip. Useful for pagination (page number * limit)"
            },
            {
              "name": "limit",
              "in": "query",
              "type": "integer",
              "description": "The number of items to fetch"
            },
            {
              "name": "user_id",
              "in": "query",
              "type": "string",
              "description": "The user ID of the user making the request"
            },
            {
              "name": "filter_followed",
              "in": "query",
              "type": "boolean",
              "default": false,
              "description": "If true, filters out artists that the current user already follows"
            }
          ],
          "tags": [
            "users"
          ]
        }
      },
      "/users/{id}/remixers": {
        "get": {
          "responses": {
            "200": {
              "description": "Success",
              "schema": {
                "$ref": "#/definitions/full_remixers_response"
              }
            },
            "400": {
              "description": "Bad request"
            },
            "500": {
              "description": "Server error"
            }
          },
          "description": "Gets the list of unique users who have remixed tracks by the given user, or a specific track by that user if provided",
          "operationId": "Get remixers",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "type": "string",
              "description": "A User ID"
            },
            {
              "name": "offset",
              "in": "query",
              "type": "integer",
              "description": "The number of items to skip. Useful for pagination (page number * limit)"
            },
            {
              "name": "limit",
              "in": "query",
              "type": "integer",
              "description": "The number of items to fetch"
            },
            {
              "name": "user_id",
              "in": "query",
              "type": "string",
              "description": "The user ID of the user making the request"
            },
            {
              "name": "track_id",
              "in": "query",
              "type": "string",
              "description": "Filters for remixers who have remixed the given track ID"
            }
          ],
          "tags": [
            "users"
          ]
        }
      },
      "/users/{id}/remixers/count": {
        "get": {
          "responses": {
            "200": {
              "description": "Success",
              "schema": {
                "$ref": "#/definitions/remixers_count_response"
              }
            },
            "400": {
              "description": "Bad request"
            },
            "500": {
              "description": "Server error"
            }
          },
          "description": "Gets the count of unique users who have remixed tracks by the given user, or a specific track by that user if provided",
          "operationId": "Get remixers count",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "type": "string",
              "description": "A User ID"
            },
            {
              "name": "user_id",
              "in": "query",
              "type": "string",
              "description": "The user ID of the user making the request"
            },
            {
              "name": "track_id",
              "in": "query",
              "type": "string",
              "description": "Filters for remixers who have remixed the given track ID"
            }
          ],
          "tags": [
            "users"
          ]
        }
      },
      "/users/{id}/reposts": {
        "get": {
          "responses": {
            "200": {
              "description": "Success",
              "schema": {
                "$ref": "#/definitions/full_reposts"
              }
            },
            "400": {
              "description": "Bad request"
            },
            "500": {
              "description": "Server error"
            }
          },
          "description": "Gets the given user's reposts",
          "operationId": "Get Reposts",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "type": "string",
              "description": "A User ID"
            },
            {
              "name": "offset",
              "in": "query",
              "type": "integer",
              "description": "The number of items to skip. Useful for pagination (page number * limit)"
            },
            {
              "name": "limit",
              "in": "query",
              "type": "integer",
              "description": "The number of items to fetch"
            },
            {
              "name": "user_id",
              "in": "query",
              "type": "string",
              "description": "The user ID of the user making the request"
            }
          ],
          "tags": [
            "users"
          ]
        }
      },
      "/users/{id}/sales": {
        "get": {
          "responses": {
            "200": {
              "description": "Success",
              "schema": {
                "$ref": "#/definitions/purchases_response"
              }
            }
          },
          "description": "Gets the sales the user has made",
          "operationId": "Get Sales",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "type": "string",
              "description": "A User ID"
            },
            {
              "name": "offset",
              "in": "query",
              "type": "integer",
              "description": "The number of items to skip. Useful for pagination (page number * limit)"
            },
            {
              "name": "limit",
              "in": "query",
              "type": "integer",
              "description": "The number of items to fetch"
            },
            {
              "name": "user_id",
              "in": "query",
              "type": "string",
              "description": "The user ID of the user making the request"
            },
            {
              "name": "sort_method",
              "in": "query",
              "type": "string",
              "enum": [
                "content_title",
                "artist_name",
                "buyer_name",
                "date"
              ],
              "description": "The sort direction"
            },
            {
              "name": "sort_direction",
              "in": "query",
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ],
              "description": "The sort direction"
            },
            {
              "name": "content_ids",
              "in": "query",
              "type": "array",
              "items": {
                "type": "string"
              },
              "collectionFormat": "multi",
              "description": "Filters purchases by track or album IDs"
            },
            {
              "name": "Encoded-Data-Message",
              "in": "header",
              "type": "string",
              "description": "The data that was signed by the user for signature recovery"
            },
            {
              "name": "Encoded-Data-Signature",
              "in": "header",
              "type": "string",
              "description": "The signature of data, used for signature recovery"
            }
          ],
          "tags": [
            "users"
          ]
        }
      },
      "/users/{id}/sales/count": {
        "get": {
          "responses": {
            "200": {
              "description": "Success",
              "schema": {
                "$ref": "#/definitions/purchases_count_response"
              }
            }
          },
          "description": "Gets the count of sales the user has made",
          "operationId": "Get Sales Count",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "type": "string",
              "description": "A User ID"
            },
            {
              "name": "user_id",
              "in": "query",
              "type": "string",
              "description": "The user ID of the user making the request"
            },
            {
              "name": "content_ids",
              "in": "query",
              "type": "array",
              "items": {
                "type": "string"
              },
              "collectionFormat": "multi",
              "description": "Filters purchases by track or album IDs"
            },
            {
              "name": "Encoded-Data-Message",
              "in": "header",
              "type": "string",
              "description": "The data that was signed by the user for signature recovery"
            },
            {
              "name": "Encoded-Data-Signature",
              "in": "header",
              "type": "string",
              "description": "The signature of data, used for signature recovery"
            }
          ],
          "tags": [
            "users"
          ]
        }
      },
      "/users/{id}/subscribers": {
        "get": {
          "responses": {
            "200": {
              "description": "Success",
              "schema": {
                "$ref": "#/definitions/full_subscribers_response"
              }
            },
            "400": {
              "description": "Bad request"
            },
            "500": {
              "description": "Server error"
            }
          },
          "description": "All users that subscribe to the provided user",
          "operationId": "Get Subscribers",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "type": "string",
              "description": "A User ID"
            },
            {
              "name": "offset",
              "in": "query",
              "type": "integer",
              "description": "The number of items to skip. Useful for pagination (page number * limit)"
            },
            {
              "name": "limit",
              "in": "query",
              "type": "integer",
              "description": "The number of items to fetch"
            },
            {
              "name": "user_id",
              "in": "query",
              "type": "string",
              "description": "The user ID of the user making the request"
            }
          ],
          "tags": [
            "users"
          ]
        }
      },
      "/users/{id}/supporters": {
        "get": {
          "responses": {
            "200": {
              "description": "Success",
              "schema": {
                "$ref": "#/definitions/full_get_supporters"
              }
            }
          },
          "description": "Gets the supporters of the given user",
          "operationId": "Get Supporters",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "type": "string",
              "description": "A User ID"
            },
            {
              "name": "offset",
              "in": "query",
              "type": "integer",
              "description": "The number of items to skip. Useful for pagination (page number * limit)"
            },
            {
              "name": "limit",
              "in": "query",
              "type": "integer",
              "description": "The number of items to fetch"
            },
            {
              "name": "user_id",
              "in": "query",
              "type": "string",
              "description": "The user ID of the user making the request"
            }
          ],
          "tags": [
            "users"
          ]
        }
      },
      "/users/{id}/supporters/{supporter_user_id}": {
        "get": {
          "responses": {
            "200": {
              "description": "Success",
              "schema": {
                "$ref": "#/definitions/full_get_supporter"
              }
            }
          },
          "description": "Gets the specified supporter of the given user",
          "operationId": "Get Supporter",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "type": "string",
              "description": "A User ID"
            },
            {
              "name": "supporter_user_id",
              "in": "path",
              "required": true,
              "type": "string",
              "description": "A User ID of a supporter"
            },
            {
              "name": "user_id",
              "in": "query",
              "type": "string",
              "description": "The user ID of the user making the request"
            }
          ],
          "tags": [
            "users"
          ]
        }
      },
      "/users/{id}/supporting": {
        "get": {
          "responses": {
            "200": {
              "description": "Success",
              "schema": {
                "$ref": "#/definitions/full_get_supported_users"
              }
            }
          },
          "description": "Gets the users that the given user supports",
          "operationId": "Get Supported Users",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "type": "string",
              "description": "A User ID"
            },
            {
              "name": "offset",
              "in": "query",
              "type": "integer",
              "description": "The number of items to skip. Useful for pagination (page number * limit)"
            },
            {
              "name": "limit",
              "in": "query",
              "type": "integer",
              "description": "The number of items to fetch"
            },
            {
              "name": "user_id",
              "in": "query",
              "type": "string",
              "description": "The user ID of the user making the request"
            }
          ],
          "tags": [
            "users"
          ]
        }
      },
      "/users/{id}/supporting/{supported_user_id}": {
        "get": {
          "responses": {
            "200": {
              "description": "Success",
              "schema": {
                "$ref": "#/definitions/full_get_supporting"
              }
            }
          },
          "description": "Gets the support from the given user to the supported user",
          "operationId": "Get Supporting",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "type": "string",
              "description": "A User ID"
            },
            {
              "name": "supported_user_id",
              "in": "path",
              "required": true,
              "type": "string",
              "description": "A User ID of a supported user"
            },
            {
              "name": "user_id",
              "in": "query",
              "type": "string",
              "description": "The user ID of the user making the request"
            }
          ],
          "tags": [
            "users"
          ]
        }
      },
      "/users/{id}/tracks": {
        "get": {
          "responses": {
            "200": {
              "description": "Success",
              "schema": {
                "$ref": "#/definitions/full_tracks"
              }
            },
            "400": {
              "description": "Bad request"
            },
            "500": {
              "description": "Server error"
            }
          },
          "description": "Gets the tracks created by a user using their user ID",
          "operationId": "Get Tracks by User",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "type": "string",
              "description": "A User ID"
            },
            {
              "name": "offset",
              "in": "query",
              "type": "integer",
              "description": "The number of items to skip. Useful for pagination (page number * limit)"
            },
            {
              "name": "limit",
              "in": "query",
              "type": "integer",
              "description": "The number of items to fetch"
            },
            {
              "name": "user_id",
              "in": "query",
              "type": "string",
              "description": "The user ID of the user making the request"
            },
            {
              "name": "sort",
              "in": "query",
              "type": "string",
              "default": "date",
              "enum": [
                "date",
                "plays"
              ],
              "description": "[Deprecated] Field to sort by"
            },
            {
              "name": "query",
              "in": "query",
              "type": "string",
              "description": "The filter query"
            },
            {
              "name": "sort_method",
              "in": "query",
              "type": "string",
              "enum": [
                "title",
                "artist_name",
                "release_date",
                "last_listen_date",
                "added_date",
                "plays",
                "reposts",
                "saves",
                "most_listens_by_user"
              ],
              "description": "The sort method"
            },
            {
              "name": "sort_direction",
              "in": "query",
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ],
              "description": "The sort direction"
            },
            {
              "name": "filter_tracks",
              "in": "query",
              "type": "string",
              "default": "all",
              "enum": [
                "all",
                "public",
                "unlisted"
              ],
              "description": "Filter by unlisted or public tracks"
            },
            {
              "name": "Encoded-Data-Message",
              "in": "header",
              "type": "string",
              "description": "The data that was signed by the user for signature recovery"
            },
            {
              "name": "Encoded-Data-Signature",
              "in": "header",
              "type": "string",
              "description": "The signature of data, used for signature recovery"
            }
          ],
          "tags": [
            "users"
          ]
        }
      },
      "/users/{id}/transactions/audio": {
        "get": {
          "responses": {
            "200": {
              "description": "Success",
              "schema": {
                "$ref": "#/definitions/transaction_history_response"
              }
            }
          },
          "description": "Gets the user's $AUDIO transaction history within the App",
          "operationId": "Get Audio Transactions",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "type": "string",
              "description": "A User ID"
            },
            {
              "name": "offset",
              "in": "query",
              "type": "integer",
              "description": "The number of items to skip. Useful for pagination (page number * limit)"
            },
            {
              "name": "limit",
              "in": "query",
              "type": "integer",
              "description": "The number of items to fetch"
            },
            {
              "name": "sort_method",
              "in": "query",
              "type": "string",
              "default": "date",
              "enum": [
                "date",
                "transaction_type"
              ],
              "description": "The sort method"
            },
            {
              "name": "sort_direction",
              "in": "query",
              "type": "string",
              "default": "desc",
              "enum": [
                "asc",
                "desc"
              ],
              "description": "The sort direction"
            },
            {
              "name": "Encoded-Data-Message",
              "in": "header",
              "type": "string",
              "description": "The data that was signed by the user for signature recovery"
            },
            {
              "name": "Encoded-Data-Signature",
              "in": "header",
              "type": "string",
              "description": "The signature of data, used for signature recovery"
            }
          ],
          "tags": [
            "users"
          ]
        }
      },
      "/users/{id}/transactions/audio/count": {
        "get": {
          "responses": {
            "200": {
              "description": "Success",
              "schema": {
                "$ref": "#/definitions/transaction_history_count_response"
              }
            }
          },
          "description": "Gets the count of the user's $AUDIO transaction history within the App",
          "operationId": "Get Audio Transaction Count",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "type": "string",
              "description": "A User ID"
            },
            {
              "name": "Encoded-Data-Message",
              "in": "header",
              "type": "string",
              "description": "The data that was signed by the user for signature recovery"
            },
            {
              "name": "Encoded-Data-Signature",
              "in": "header",
              "type": "string",
              "description": "The signature of data, used for signature recovery"
            }
          ],
          "tags": [
            "users"
          ]
        }
      },
      "/users/{id}/transactions/usdc": {
        "get": {
          "responses": {
            "200": {
              "description": "Success",
              "schema": {
                "$ref": "#/definitions/transaction_history_response"
              }
            }
          },
          "description": "Gets the user's $USDC transaction history within the App",
          "operationId": "Get USDC Transactions",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "type": "string",
              "description": "A User ID"
            },
            {
              "name": "offset",
              "in": "query",
              "type": "integer",
              "description": "The number of items to skip. Useful for pagination (page number * limit)"
            },
            {
              "name": "limit",
              "in": "query",
              "type": "integer",
              "description": "The number of items to fetch"
            },
            {
              "name": "sort_method",
              "in": "query",
              "type": "string",
              "default": "date",
              "enum": [
                "date",
                "transaction_type"
              ],
              "description": "The sort method"
            },
            {
              "name": "sort_direction",
              "in": "query",
              "type": "string",
              "default": "desc",
              "enum": [
                "asc",
                "desc"
              ],
              "description": "The sort direction"
            },
            {
              "name": "Encoded-Data-Message",
              "in": "header",
              "type": "string",
              "description": "The data that was signed by the user for signature recovery"
            },
            {
              "name": "Encoded-Data-Signature",
              "in": "header",
              "type": "string",
              "description": "The signature of data, used for signature recovery"
            },
            {
              "name": "type",
              "in": "query",
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "purchase_content",
                  "transfer",
                  "prepare_withdrawal",
                  "recover_withdrawal",
                  "withdrawal",
                  "purchase_stripe"
                ]
              },
              "collectionFormat": "multi",
              "description": "Filters the type of transactions to show"
            },
            {
              "name": "include_system_transactions",
              "in": "query",
              "type": "boolean",
              "default": false,
              "description": "Include intermediate system transactions in the results"
            },
            {
              "name": "method",
              "in": "query",
              "type": "string",
              "enum": [
                "send",
                "receive"
              ],
              "description": "Filters the method (sent/received) of transactions to show"
            }
          ],
          "tags": [
            "users"
          ]
        }
      },
      "/users/{id}/transactions/usdc/count": {
        "get": {
          "responses": {
            "200": {
              "description": "Success",
              "schema": {
                "$ref": "#/definitions/transaction_history_count_response"
              }
            }
          },
          "description": "Gets the count of the user's $USDC transaction history within the App",
          "operationId": "Get USDC Transaction Count",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "type": "string",
              "description": "A User ID"
            },
            {
              "name": "type",
              "in": "query",
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "purchase_content",
                  "transfer",
                  "prepare_withdrawal",
                  "recover_withdrawal",
                  "withdrawal",
                  "purchase_stripe"
                ]
              },
              "collectionFormat": "multi",
              "description": "Filters the type of transactions to show"
            },
            {
              "name": "include_system_transactions",
              "in": "query",
              "type": "boolean",
              "default": false,
              "description": "Include intermediate system transactions in the results"
            },
            {
              "name": "method",
              "in": "query",
              "type": "string",
              "enum": [
                "send",
                "receive"
              ],
              "description": "Filters the method (sent/received) of transactions to show"
            },
            {
              "name": "Encoded-Data-Message",
              "in": "header",
              "type": "string",
              "description": "The data that was signed by the user for signature recovery"
            },
            {
              "name": "Encoded-Data-Signature",
              "in": "header",
              "type": "string",
              "description": "The signature of data, used for signature recovery"
            }
          ],
          "tags": [
            "users"
          ]
        }
      }
    },
    "info": {
      "title": "API",
      "version": "1.0"
    },
    "produces": [
      "application/json"
    ],
    "consumes": [
      "application/json"
    ],
    "tags": [
      {
        "name": "tracks",
        "description": "Full track operations"
      },
      {
        "name": "playlists",
        "description": "Full playlist related operations"
      },
      {
        "name": "users",
        "description": "Full user operations"
      },
      {
        "name": "search",
        "description": "Full search operations"
      },
      {
        "name": "tips",
        "description": "Full tip related operations"
      },
      {
        "name": "reactions",
        "description": "Reaction related operations"
      },
      {
        "name": "transactions",
        "description": "Full transaction history related operations"
      },
      {
        "name": "cid_data",
        "description": "Metadata related operations"
      },
      {
        "name": "notifications",
        "description": "Notifications related operations"
      },
      {
        "name": "challenges",
        "description": "Challenge related operations"
      },
      {
        "name": "comments",
        "description": "Full comment operations"
      },
      {
        "name": "explore",
        "description": "Full explore operations"
      }
    ],
    "definitions": {
      "full_track_response": {
        "required": [
          "latest_chain_block",
          "latest_chain_slot_plays",
          "latest_indexed_block",
          "latest_indexed_slot_plays",
          "signature",
          "timestamp",
          "version"
        ],
        "properties": {
          "latest_chain_block": {
            "type": "integer"
          },
          "latest_indexed_block": {
            "type": "integer"
          },
          "latest_chain_slot_plays": {
            "type": "integer"
          },
          "latest_indexed_slot_plays": {
            "type": "integer"
          },
          "signature": {
            "type": "string"
          },
          "timestamp": {
            "type": "string"
          },
          "version": {
            "$ref": "#/definitions/version_metadata"
          },
          "data": {
            "$ref": "#/definitions/track_full"
          }
        },
        "type": "object"
      },
      "version_metadata": {
        "required": [
          "service",
          "version"
        ],
        "properties": {
          "service": {
            "type": "string"
          },
          "version": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "track_full": {
        "required": [
          "access",
          "artwork",
          "blocknumber",
          "comment_count",
          "cover_art_sizes",
          "created_at",
          "download",
          "duration",
          "favorite_count",
          "field_visibility",
          "followee_favorites",
          "followee_reposts",
          "genre",
          "has_current_user_reposted",
          "has_current_user_saved",
          "id",
          "is_available",
          "is_delete",
          "is_download_gated",
          "is_downloadable",
          "is_original_available",
          "is_owned_by_user",
          "is_scheduled_release",
          "is_stream_gated",
          "is_unlisted",
          "permalink",
          "play_count",
          "preview",
          "remix_of",
          "repost_count",
          "route_id",
          "stream",
          "title",
          "track_segments",
          "updated_at",
          "user",
          "user_id"
        ],
        "properties": {
          "artwork": {
            "$ref": "#/definitions/track_artwork_full"
          },
          "description": {
            "type": "string"
          },
          "genre": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "track_cid": {
            "type": "string"
          },
          "preview_cid": {
            "type": "string"
          },
          "orig_file_cid": {
            "type": "string"
          },
          "orig_filename": {
            "type": "string"
          },
          "is_original_available": {
            "type": "boolean"
          },
          "mood": {
            "type": "string"
          },
          "release_date": {
            "type": "string"
          },
          "remix_of": {
            "$ref": "#/definitions/full_remix_parent"
          },
          "repost_count": {
            "type": "integer"
          },
          "favorite_count": {
            "type": "integer"
          },
          "comment_count": {
            "type": "integer"
          },
          "tags": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "user": {
            "$ref": "#/definitions/user_full"
          },
          "duration": {
            "type": "integer"
          },
          "is_downloadable": {
            "type": "boolean"
          },
          "play_count": {
            "type": "integer"
          },
          "permalink": {
            "type": "string"
          },
          "is_streamable": {
            "type": "boolean"
          },
          "ddex_app": {
            "type": "string"
          },
          "playlists_containing_track": {
            "type": "array",
            "items": {
              "type": "integer"
            }
          },
          "pinned_comment_id": {
            "type": "integer"
          },
          "album_backlink": {
            "$ref": "#/definitions/album_backlink"
          },
          "access": {
            "description": "Describes what access the given user has",
            "allOf": [
              {
                "$ref": "#/definitions/access"
              }
            ]
          },
          "blocknumber": {
            "type": "integer",
            "description": "The blocknumber this track was last updated"
          },
          "create_date": {
            "type": "string"
          },
          "cover_art_sizes": {
            "type": "string"
          },
          "cover_art_cids": {
            "$ref": "#/definitions/cover_art"
          },
          "created_at": {
            "type": "string"
          },
          "credits_splits": {
            "type": "string"
          },
          "isrc": {
            "type": "string"
          },
          "license": {
            "type": "string"
          },
          "iswc": {
            "type": "string"
          },
          "field_visibility": {
            "$ref": "#/definitions/field_visibility"
          },
          "followee_reposts": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/repost"
            }
          },
          "has_current_user_reposted": {
            "type": "boolean"
          },
          "is_scheduled_release": {
            "type": "boolean"
          },
          "is_unlisted": {
            "type": "boolean"
          },
          "has_current_user_saved": {
            "type": "boolean"
          },
          "followee_favorites": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/favorite"
            }
          },
          "route_id": {
            "type": "string"
          },
          "stem_of": {
            "$ref": "#/definitions/stem_parent"
          },
          "track_segments": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/track_segment"
            }
          },
          "updated_at": {
            "type": "string"
          },
          "user_id": {
            "type": "string"
          },
          "is_delete": {
            "type": "boolean"
          },
          "cover_art": {
            "type": "string"
          },
          "is_available": {
            "type": "boolean"
          },
          "ai_attribution_user_id": {
            "type": "integer"
          },
          "allowed_api_keys": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "audio_upload_id": {
            "type": "string"
          },
          "preview_start_seconds": {
            "type": "number"
          },
          "bpm": {
            "type": "number"
          },
          "is_custom_bpm": {
            "type": "boolean"
          },
          "musical_key": {
            "type": "string"
          },
          "is_custom_musical_key": {
            "type": "boolean"
          },
          "audio_analysis_error_count": {
            "type": "integer"
          },
          "comments_disabled": {
            "type": "boolean"
          },
          "ddex_release_ids": {
            "type": "object"
          },
          "artists": {
            "type": "array",
            "items": {
              "type": "object"
            }
          },
          "resource_contributors": {
            "type": "array",
            "items": {
              "type": "object"
            }
          },
          "indirect_resource_contributors": {
            "type": "array",
            "items": {
              "type": "object"
            }
          },
          "rights_controller": {
            "type": "object"
          },
          "copyright_line": {
            "type": "object"
          },
          "producer_copyright_line": {
            "type": "object"
          },
          "parental_warning_type": {
            "type": "string"
          },
          "is_stream_gated": {
            "type": "boolean",
            "description": "Whether or not the owner has restricted streaming behind an access gate"
          },
          "stream_conditions": {
            "description": "How to unlock stream access to the track",
            "allOf": [
              {
                "$ref": "#/definitions/access_gate"
              }
            ]
          },
          "is_download_gated": {
            "type": "boolean",
            "description": "Whether or not the owner has restricted downloading behind an access gate"
          },
          "download_conditions": {
            "description": "How to unlock the track download",
            "allOf": [
              {
                "$ref": "#/definitions/access_gate"
              }
            ]
          },
          "cover_original_song_title": {
            "type": "string"
          },
          "cover_original_artist": {
            "type": "string"
          },
          "is_owned_by_user": {
            "type": "boolean",
            "description": "Indicates whether the track is owned by the user for MRI sake"
          },
          "stream": {
            "$ref": "#/definitions/url_with_mirrors"
          },
          "download": {
            "$ref": "#/definitions/url_with_mirrors"
          },
          "preview": {
            "$ref": "#/definitions/url_with_mirrors"
          }
        },
        "type": "object"
      },
      "track_artwork_full": {
        "properties": {
          "150x150": {
            "type": "string"
          },
          "480x480": {
            "type": "string"
          },
          "1000x1000": {
            "type": "string"
          },
          "mirrors": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "type": "object"
      },
      "full_remix_parent": {
        "properties": {
          "tracks": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/full_remix"
            }
          }
        },
        "type": "object"
      },
      "full_remix": {
        "required": [
          "has_remix_author_reposted",
          "has_remix_author_saved",
          "parent_track_id",
          "user"
        ],
        "properties": {
          "parent_track_id": {
            "type": "string"
          },
          "user": {
            "$ref": "#/definitions/user_full"
          },
          "has_remix_author_reposted": {
            "type": "boolean"
          },
          "has_remix_author_saved": {
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "user_full": {
        "required": [
          "album_count",
          "allow_ai_attribution",
          "associated_sol_wallets_balance",
          "associated_wallets_balance",
          "balance",
          "blocknumber",
          "created_at",
          "current_user_followee_follow_count",
          "does_current_user_follow",
          "does_current_user_subscribe",
          "does_follow_current_user",
          "erc_wallet",
          "followee_count",
          "follower_count",
          "handle",
          "handle_lc",
          "has_collectibles",
          "id",
          "is_available",
          "is_deactivated",
          "is_storage_v2",
          "is_verified",
          "name",
          "playlist_count",
          "repost_count",
          "spl_wallet",
          "supporter_count",
          "supporting_count",
          "total_audio_balance",
          "total_balance",
          "track_count",
          "updated_at",
          "verified_with_instagram",
          "verified_with_tiktok",
          "verified_with_twitter",
          "wallet",
          "waudio_balance"
        ],
        "properties": {
          "album_count": {
            "type": "integer"
          },
          "artist_pick_track_id": {
            "type": "string"
          },
          "bio": {
            "type": "string"
          },
          "cover_photo": {
            "$ref": "#/definitions/cover_photo_full"
          },
          "followee_count": {
            "type": "integer"
          },
          "follower_count": {
            "type": "integer"
          },
          "handle": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "is_verified": {
            "type": "boolean"
          },
          "twitter_handle": {
            "type": "string"
          },
          "instagram_handle": {
            "type": "string"
          },
          "tiktok_handle": {
            "type": "string"
          },
          "verified_with_twitter": {
            "type": "boolean"
          },
          "verified_with_instagram": {
            "type": "boolean"
          },
          "verified_with_tiktok": {
            "type": "boolean"
          },
          "website": {
            "type": "string"
          },
          "donation": {
            "type": "string"
          },
          "location": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "playlist_count": {
            "type": "integer"
          },
          "profile_picture": {
            "$ref": "#/definitions/profile_picture_full"
          },
          "repost_count": {
            "type": "integer"
          },
          "track_count": {
            "type": "integer"
          },
          "is_deactivated": {
            "type": "boolean"
          },
          "is_available": {
            "type": "boolean"
          },
          "erc_wallet": {
            "type": "string"
          },
          "spl_wallet": {
            "type": "string"
          },
          "spl_usdc_payout_wallet": {
            "type": "string"
          },
          "supporter_count": {
            "type": "integer"
          },
          "supporting_count": {
            "type": "integer"
          },
          "total_audio_balance": {
            "type": "integer"
          },
          "wallet": {
            "type": "string",
            "description": "The user's Ethereum wallet address for their account"
          },
          "balance": {
            "type": "string"
          },
          "associated_wallets_balance": {
            "type": "string"
          },
          "total_balance": {
            "type": "string"
          },
          "waudio_balance": {
            "type": "string"
          },
          "associated_sol_wallets_balance": {
            "type": "string"
          },
          "blocknumber": {
            "type": "integer"
          },
          "created_at": {
            "type": "string"
          },
          "is_storage_v2": {
            "type": "boolean"
          },
          "creator_node_endpoint": {
            "type": "string"
          },
          "current_user_followee_follow_count": {
            "type": "integer"
          },
          "does_current_user_follow": {
            "type": "boolean"
          },
          "does_current_user_subscribe": {
            "type": "boolean"
          },
          "does_follow_current_user": {
            "type": "boolean"
          },
          "handle_lc": {
            "type": "string"
          },
          "updated_at": {
            "type": "string"
          },
          "cover_photo_sizes": {
            "type": "string"
          },
          "cover_photo_cids": {
            "$ref": "#/definitions/cover_photo"
          },
          "cover_photo_legacy": {
            "type": "string"
          },
          "profile_picture_sizes": {
            "type": "string"
          },
          "profile_picture_cids": {
            "$ref": "#/definitions/profile_picture"
          },
          "profile_picture_legacy": {
            "type": "string"
          },
          "has_collectibles": {
            "type": "boolean"
          },
          "playlist_library": {
            "$ref": "#/definitions/playlist_library"
          },
          "allow_ai_attribution": {
            "type": "boolean"
          },
          "profile_type": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "cover_photo_full": {
        "properties": {
          "640x": {
            "type": "string"
          },
          "2000x": {
            "type": "string"
          },
          "mirrors": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "type": "object"
      },
      "profile_picture_full": {
        "properties": {
          "150x150": {
            "type": "string"
          },
          "480x480": {
            "type": "string"
          },
          "1000x1000": {
            "type": "string"
          },
          "mirrors": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "type": "object"
      },
      "cover_photo": {
        "properties": {
          "640x": {
            "type": "string"
          },
          "2000x": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "profile_picture": {
        "properties": {
          "150x150": {
            "type": "string"
          },
          "480x480": {
            "type": "string"
          },
          "1000x1000": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "playlist_library": {
        "properties": {
          "contents": {
            "type": "array",
            "items": {
              "type": "object"
            }
          }
        },
        "type": "object"
      },
      "album_backlink": {
        "required": [
          "permalink",
          "playlist_id",
          "playlist_name"
        ],
        "properties": {
          "playlist_id": {
            "type": "integer"
          },
          "playlist_name": {
            "type": "string"
          },
          "permalink": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "access": {
        "required": [
          "download",
          "stream"
        ],
        "properties": {
          "stream": {
            "type": "boolean"
          },
          "download": {
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "cover_art": {
        "properties": {
          "150x150": {
            "type": "string"
          },
          "480x480": {
            "type": "string"
          },
          "1000x1000": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "field_visibility": {
        "required": [
          "genre",
          "mood",
          "play_count",
          "remixes",
          "share",
          "tags"
        ],
        "properties": {
          "mood": {
            "type": "boolean"
          },
          "tags": {
            "type": "boolean"
          },
          "genre": {
            "type": "boolean"
          },
          "share": {
            "type": "boolean"
          },
          "play_count": {
            "type": "boolean"
          },
          "remixes": {
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "repost": {
        "required": [
          "repost_item_id",
          "repost_type",
          "user_id"
        ],
        "properties": {
          "repost_item_id": {
            "type": "string"
          },
          "repost_type": {
            "type": "string"
          },
          "user_id": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "favorite": {
        "required": [
          "created_at",
          "favorite_item_id",
          "favorite_type",
          "user_id"
        ],
        "properties": {
          "favorite_item_id": {
            "type": "string"
          },
          "favorite_type": {
            "type": "string"
          },
          "user_id": {
            "type": "string"
          },
          "created_at": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "stem_parent": {
        "required": [
          "category",
          "parent_track_id"
        ],
        "properties": {
          "category": {
            "type": "string"
          },
          "parent_track_id": {
            "type": "integer"
          }
        },
        "type": "object"
      },
      "track_segment": {
        "required": [
          "duration",
          "multihash"
        ],
        "properties": {
          "duration": {
            "type": "number"
          },
          "multihash": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "access_gate": {
        "oneOf": [
          {
            "$ref": "#/definitions/tip_gate"
          },
          {
            "$ref": "#/definitions/follow_gate"
          },
          {
            "$ref": "#/definitions/purchase_gate"
          },
          {
            "$ref": "#/definitions/nft_gate"
          }
        ]
      },
      "tip_gate": {
        "required": [
          "tip_user_id"
        ],
        "properties": {
          "tip_user_id": {
            "type": "integer",
            "description": "Must tip the given user ID to unlock"
          }
        },
        "type": "object"
      },
      "follow_gate": {
        "required": [
          "follow_user_id"
        ],
        "properties": {
          "follow_user_id": {
            "type": "integer",
            "description": "Must follow the given user ID to unlock"
          }
        },
        "type": "object"
      },
      "purchase_gate": {
        "required": [
          "usdc_purchase"
        ],
        "properties": {
          "usdc_purchase": {
            "description": "Must pay the total price and split to the given addresses to unlock",
            "allOf": [
              {
                "$ref": "#/definitions/usdc_gate"
              }
            ]
          }
        },
        "type": "object"
      },
      "usdc_gate": {
        "required": [
          "price",
          "splits"
        ],
        "properties": {
          "splits": {
            "$ref": "#/definitions/wild_card_split"
          },
          "price": {
            "type": "integer"
          }
        },
        "type": "object"
      },
      "wild_card_split": {
        "type": "object",
        "additionalProperties": {
          "type": "integer"
        }
      },
      "nft_gate": {
        "required": [
          "nft_collection"
        ],
        "properties": {
          "nft_collection": {
            "description": "Must hold an NFT of the given collection to unlock",
            "allOf": [
              {
                "$ref": "#/definitions/nft_collection"
              }
            ]
          }
        },
        "type": "object"
      },
      "nft_collection": {
        "required": [
          "address",
          "chain",
          "name"
        ],
        "properties": {
          "chain": {
            "type": "string",
            "example": "eth",
            "enum": [
              "eth",
              "sol"
            ]
          },
          "standard": {
            "type": "string",
            "example": "ERC721",
            "enum": [
              "ERC721",
              "ERC1155"
            ]
          },
          "address": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "imageUrl": {
            "type": "string"
          },
          "externalLink": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "url_with_mirrors": {
        "required": [
          "mirrors"
        ],
        "properties": {
          "url": {
            "type": "string"
          },
          "mirrors": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "type": "object"
      },
      "full_tracks_response": {
        "required": [
          "latest_chain_block",
          "latest_chain_slot_plays",
          "latest_indexed_block",
          "latest_indexed_slot_plays",
          "signature",
          "timestamp",
          "version"
        ],
        "properties": {
          "latest_chain_block": {
            "type": "integer"
          },
          "latest_indexed_block": {
            "type": "integer"
          },
          "latest_chain_slot_plays": {
            "type": "integer"
          },
          "latest_indexed_slot_plays": {
            "type": "integer"
          },
          "signature": {
            "type": "string"
          },
          "timestamp": {
            "type": "string"
          },
          "version": {
            "$ref": "#/definitions/version_metadata"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/track_full"
            }
          }
        },
        "type": "object"
      },
      "track_comments_response_full": {
        "required": [
          "latest_chain_block",
          "latest_chain_slot_plays",
          "latest_indexed_block",
          "latest_indexed_slot_plays",
          "signature",
          "timestamp",
          "version"
        ],
        "properties": {
          "latest_chain_block": {
            "type": "integer"
          },
          "latest_indexed_block": {
            "type": "integer"
          },
          "latest_chain_slot_plays": {
            "type": "integer"
          },
          "latest_indexed_slot_plays": {
            "type": "integer"
          },
          "signature": {
            "type": "string"
          },
          "timestamp": {
            "type": "string"
          },
          "version": {
            "$ref": "#/definitions/version_metadata"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/comment"
            }
          },
          "related": {
            "$ref": "#/definitions/related"
          }
        },
        "type": "object"
      },
      "comment": {
        "required": [
          "created_at",
          "entity_id",
          "entity_type",
          "id",
          "is_edited",
          "message",
          "react_count",
          "reply_count"
        ],
        "properties": {
          "id": {
            "type": "string"
          },
          "entity_id": {
            "type": "string"
          },
          "entity_type": {
            "type": "string"
          },
          "user_id": {
            "type": "string"
          },
          "message": {
            "type": "string"
          },
          "mentions": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/comment_mention"
            }
          },
          "track_timestamp_s": {
            "type": "integer"
          },
          "react_count": {
            "type": "integer"
          },
          "reply_count": {
            "type": "integer"
          },
          "is_edited": {
            "type": "boolean"
          },
          "is_current_user_reacted": {
            "type": "boolean"
          },
          "is_artist_reacted": {
            "type": "boolean"
          },
          "is_tombstone": {
            "type": "boolean"
          },
          "is_muted": {
            "type": "boolean"
          },
          "created_at": {
            "type": "string"
          },
          "updated_at": {
            "type": "string"
          },
          "replies": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/reply_comment"
            }
          }
        },
        "type": "object"
      },
      "comment_mention": {
        "required": [
          "handle",
          "user_id"
        ],
        "properties": {
          "user_id": {
            "type": "integer"
          },
          "handle": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "reply_comment": {
        "required": [
          "created_at",
          "entity_id",
          "entity_type",
          "id",
          "is_edited",
          "message",
          "react_count",
          "user_id"
        ],
        "properties": {
          "id": {
            "type": "string"
          },
          "entity_id": {
            "type": "string"
          },
          "entity_type": {
            "type": "string"
          },
          "user_id": {
            "type": "string"
          },
          "message": {
            "type": "string"
          },
          "mentions": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/comment_mention"
            }
          },
          "track_timestamp_s": {
            "type": "integer"
          },
          "react_count": {
            "type": "integer"
          },
          "is_edited": {
            "type": "boolean"
          },
          "is_current_user_reacted": {
            "type": "boolean"
          },
          "is_artist_reacted": {
            "type": "boolean"
          },
          "created_at": {
            "type": "string"
          },
          "updated_at": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "related": {
        "properties": {
          "users": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/user_full"
            }
          },
          "tracks": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/track_full"
            }
          },
          "playlists": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/playlist_full"
            }
          }
        },
        "type": "object"
      },
      "playlist_full": {
        "required": [
          "access",
          "added_timestamps",
          "blocknumber",
          "created_at",
          "favorite_count",
          "followee_favorites",
          "followee_reposts",
          "has_current_user_reposted",
          "has_current_user_saved",
          "id",
          "is_album",
          "is_delete",
          "is_image_autogenerated",
          "is_private",
          "is_scheduled_release",
          "is_stream_gated",
          "permalink",
          "playlist_contents",
          "playlist_name",
          "repost_count",
          "total_play_count",
          "track_count",
          "updated_at",
          "user",
          "user_id"
        ],
        "properties": {
          "artwork": {
            "$ref": "#/definitions/playlist_artwork_full"
          },
          "description": {
            "type": "string"
          },
          "permalink": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "is_album": {
            "type": "boolean"
          },
          "is_image_autogenerated": {
            "type": "boolean"
          },
          "playlist_name": {
            "type": "string"
          },
          "playlist_contents": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/playlist_added_timestamp"
            }
          },
          "repost_count": {
            "type": "integer"
          },
          "favorite_count": {
            "type": "integer"
          },
          "total_play_count": {
            "type": "integer"
          },
          "user": {
            "$ref": "#/definitions/user_full"
          },
          "ddex_app": {
            "type": "string"
          },
          "access": {
            "$ref": "#/definitions/access"
          },
          "upc": {
            "type": "string"
          },
          "track_count": {
            "type": "integer"
          },
          "blocknumber": {
            "type": "integer"
          },
          "created_at": {
            "type": "string"
          },
          "followee_reposts": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/repost"
            }
          },
          "followee_favorites": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/favorite"
            }
          },
          "has_current_user_reposted": {
            "type": "boolean"
          },
          "has_current_user_saved": {
            "type": "boolean"
          },
          "is_delete": {
            "type": "boolean"
          },
          "is_private": {
            "type": "boolean"
          },
          "updated_at": {
            "type": "string"
          },
          "added_timestamps": {
            "type": "array",
            "description": "DEPRECATED. Use playlist_contents instead.",
            "items": {
              "$ref": "#/definitions/playlist_added_timestamp"
            }
          },
          "user_id": {
            "type": "string"
          },
          "tracks": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/track_full"
            }
          },
          "cover_art": {
            "type": "string"
          },
          "cover_art_sizes": {
            "type": "string"
          },
          "cover_art_cids": {
            "$ref": "#/definitions/playlist_artwork"
          },
          "is_stream_gated": {
            "type": "boolean"
          },
          "stream_conditions": {
            "description": "How to unlock stream access to the track",
            "allOf": [
              {
                "$ref": "#/definitions/access_gate"
              }
            ]
          },
          "is_scheduled_release": {
            "type": "boolean"
          },
          "release_date": {
            "type": "string"
          },
          "ddex_release_ids": {
            "type": "object"
          },
          "artists": {
            "type": "array",
            "items": {
              "type": "object"
            }
          },
          "copyright_line": {
            "type": "object"
          },
          "producer_copyright_line": {
            "type": "object"
          },
          "parental_warning_type": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "playlist_artwork_full": {
        "properties": {
          "150x150": {
            "type": "string"
          },
          "480x480": {
            "type": "string"
          },
          "1000x1000": {
            "type": "string"
          },
          "mirrors": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "type": "object"
      },
      "playlist_added_timestamp": {
        "required": [
          "metadata_timestamp",
          "timestamp",
          "track_id"
        ],
        "properties": {
          "metadata_timestamp": {
            "type": "integer"
          },
          "timestamp": {
            "type": "integer"
          },
          "track_id": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "playlist_artwork": {
        "properties": {
          "150x150": {
            "type": "string"
          },
          "480x480": {
            "type": "string"
          },
          "1000x1000": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "trending_ids_response": {
        "properties": {
          "data": {
            "$ref": "#/definitions/trending_times_ids"
          }
        },
        "type": "object"
      },
      "trending_times_ids": {
        "properties": {
          "week": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/track_id"
            }
          },
          "month": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/track_id"
            }
          },
          "year": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/track_id"
            }
          }
        },
        "type": "object"
      },
      "track_id": {
        "required": [
          "id"
        ],
        "properties": {
          "id": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "track_favorites_response_full": {
        "required": [
          "latest_chain_block",
          "latest_chain_slot_plays",
          "latest_indexed_block",
          "latest_indexed_slot_plays",
          "signature",
          "timestamp",
          "version"
        ],
        "properties": {
          "latest_chain_block": {
            "type": "integer"
          },
          "latest_indexed_block": {
            "type": "integer"
          },
          "latest_chain_slot_plays": {
            "type": "integer"
          },
          "latest_indexed_slot_plays": {
            "type": "integer"
          },
          "signature": {
            "type": "string"
          },
          "timestamp": {
            "type": "string"
          },
          "version": {
            "$ref": "#/definitions/version_metadata"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/user_full"
            }
          }
        },
        "type": "object"
      },
      "track_reposts_response_full": {
        "required": [
          "latest_chain_block",
          "latest_chain_slot_plays",
          "latest_indexed_block",
          "latest_indexed_slot_plays",
          "signature",
          "timestamp",
          "version"
        ],
        "properties": {
          "latest_chain_block": {
            "type": "integer"
          },
          "latest_indexed_block": {
            "type": "integer"
          },
          "latest_chain_slot_plays": {
            "type": "integer"
          },
          "latest_indexed_slot_plays": {
            "type": "integer"
          },
          "signature": {
            "type": "string"
          },
          "timestamp": {
            "type": "string"
          },
          "version": {
            "$ref": "#/definitions/version_metadata"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/user_full"
            }
          }
        },
        "type": "object"
      },
      "full_top_listener": {
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/full_top_listener"
            }
          }
        },
        "type": "object"
      },
      "stems_response": {
        "required": [
          "latest_chain_block",
          "latest_chain_slot_plays",
          "latest_indexed_block",
          "latest_indexed_slot_plays",
          "signature",
          "timestamp",
          "version"
        ],
        "properties": {
          "latest_chain_block": {
            "type": "integer"
          },
          "latest_indexed_block": {
            "type": "integer"
          },
          "latest_chain_slot_plays": {
            "type": "integer"
          },
          "latest_indexed_slot_plays": {
            "type": "integer"
          },
          "signature": {
            "type": "string"
          },
          "timestamp": {
            "type": "string"
          },
          "version": {
            "$ref": "#/definitions/version_metadata"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/stem_full"
            }
          }
        },
        "type": "object"
      },
      "stem_full": {
        "required": [
          "blocknumber",
          "category",
          "cid",
          "id",
          "orig_filename",
          "parent_id",
          "user_id"
        ],
        "properties": {
          "id": {
            "type": "string"
          },
          "parent_id": {
            "type": "string"
          },
          "category": {
            "type": "string"
          },
          "cid": {
            "type": "string"
          },
          "user_id": {
            "type": "string"
          },
          "blocknumber": {
            "type": "integer"
          },
          "orig_filename": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "remixables_response": {
        "required": [
          "latest_chain_block",
          "latest_chain_slot_plays",
          "latest_indexed_block",
          "latest_indexed_slot_plays",
          "signature",
          "timestamp",
          "version"
        ],
        "properties": {
          "latest_chain_block": {
            "type": "integer"
          },
          "latest_indexed_block": {
            "type": "integer"
          },
          "latest_chain_slot_plays": {
            "type": "integer"
          },
          "latest_indexed_slot_plays": {
            "type": "integer"
          },
          "signature": {
            "type": "string"
          },
          "timestamp": {
            "type": "string"
          },
          "version": {
            "$ref": "#/definitions/version_metadata"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/track_full"
            }
          }
        },
        "type": "object"
      },
      "remixes_response_full": {
        "required": [
          "latest_chain_block",
          "latest_chain_slot_plays",
          "latest_indexed_block",
          "latest_indexed_slot_plays",
          "signature",
          "timestamp",
          "version"
        ],
        "properties": {
          "latest_chain_block": {
            "type": "integer"
          },
          "latest_indexed_block": {
            "type": "integer"
          },
          "latest_chain_slot_plays": {
            "type": "integer"
          },
          "latest_indexed_slot_plays": {
            "type": "integer"
          },
          "signature": {
            "type": "string"
          },
          "timestamp": {
            "type": "string"
          },
          "version": {
            "$ref": "#/definitions/version_metadata"
          },
          "data": {
            "$ref": "#/definitions/remixes_response"
          }
        },
        "type": "object"
      },
      "remixes_response": {
        "required": [
          "count"
        ],
        "properties": {
          "count": {
            "type": "integer"
          },
          "tracks": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/track_full"
            }
          }
        },
        "type": "object"
      },
      "remixing_response": {
        "required": [
          "latest_chain_block",
          "latest_chain_slot_plays",
          "latest_indexed_block",
          "latest_indexed_slot_plays",
          "signature",
          "timestamp",
          "version"
        ],
        "properties": {
          "latest_chain_block": {
            "type": "integer"
          },
          "latest_indexed_block": {
            "type": "integer"
          },
          "latest_chain_slot_plays": {
            "type": "integer"
          },
          "latest_indexed_slot_plays": {
            "type": "integer"
          },
          "signature": {
            "type": "string"
          },
          "timestamp": {
            "type": "string"
          },
          "version": {
            "$ref": "#/definitions/version_metadata"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/track_full"
            }
          }
        },
        "type": "object"
      },
      "nft_gated_track_signatures_response": {
        "required": [
          "latest_chain_block",
          "latest_chain_slot_plays",
          "latest_indexed_block",
          "latest_indexed_slot_plays",
          "signature",
          "timestamp",
          "version"
        ],
        "properties": {
          "latest_chain_block": {
            "type": "integer"
          },
          "latest_indexed_block": {
            "type": "integer"
          },
          "latest_chain_slot_plays": {
            "type": "integer"
          },
          "latest_indexed_slot_plays": {
            "type": "integer"
          },
          "signature": {
            "type": "string"
          },
          "timestamp": {
            "type": "string"
          },
          "version": {
            "$ref": "#/definitions/version_metadata"
          },
          "data": {
            "$ref": "#/definitions/nft_gated_track_signature_mapping"
          }
        },
        "type": "object"
      },
      "nft_gated_track_signature_mapping": {
        "type": "object",
        "additionalProperties": {
          "$ref": "#/definitions/nft_gated_track_signature"
        }
      },
      "nft_gated_track_signature": {
        "required": [
          "mp3",
          "original"
        ],
        "properties": {
          "mp3": {
            "$ref": "#/definitions/nft_gated_track_signature_data"
          },
          "original": {
            "$ref": "#/definitions/nft_gated_track_signature_data"
          }
        },
        "type": "object"
      },
      "nft_gated_track_signature_data": {
        "required": [
          "data",
          "signature"
        ],
        "properties": {
          "data": {
            "type": "string"
          },
          "signature": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "full_playlist_response": {
        "required": [
          "latest_chain_block",
          "latest_chain_slot_plays",
          "latest_indexed_block",
          "latest_indexed_slot_plays",
          "signature",
          "timestamp",
          "version"
        ],
        "properties": {
          "latest_chain_block": {
            "type": "integer"
          },
          "latest_indexed_block": {
            "type": "integer"
          },
          "latest_chain_slot_plays": {
            "type": "integer"
          },
          "latest_indexed_slot_plays": {
            "type": "integer"
          },
          "signature": {
            "type": "string"
          },
          "timestamp": {
            "type": "string"
          },
          "version": {
            "$ref": "#/definitions/version_metadata"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/playlist_full"
            }
          }
        },
        "type": "object"
      },
      "full_playlist_tracks_response": {
        "required": [
          "latest_chain_block",
          "latest_chain_slot_plays",
          "latest_indexed_block",
          "latest_indexed_slot_plays",
          "signature",
          "timestamp",
          "version"
        ],
        "properties": {
          "latest_chain_block": {
            "type": "integer"
          },
          "latest_indexed_block": {
            "type": "integer"
          },
          "latest_chain_slot_plays": {
            "type": "integer"
          },
          "latest_indexed_slot_plays": {
            "type": "integer"
          },
          "signature": {
            "type": "string"
          },
          "timestamp": {
            "type": "string"
          },
          "version": {
            "$ref": "#/definitions/version_metadata"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/track_full"
            }
          }
        },
        "type": "object"
      },
      "full_playlist_with_score_response": {
        "required": [
          "latest_chain_block",
          "latest_chain_slot_plays",
          "latest_indexed_block",
          "latest_indexed_slot_plays",
          "signature",
          "timestamp",
          "version"
        ],
        "properties": {
          "latest_chain_block": {
            "type": "integer"
          },
          "latest_indexed_block": {
            "type": "integer"
          },
          "latest_chain_slot_plays": {
            "type": "integer"
          },
          "latest_indexed_slot_plays": {
            "type": "integer"
          },
          "signature": {
            "type": "string"
          },
          "timestamp": {
            "type": "string"
          },
          "version": {
            "$ref": "#/definitions/version_metadata"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/full_playlist_with_score"
            }
          }
        },
        "type": "object"
      },
      "full_playlist_with_score": {
        "required": [
          "access",
          "added_timestamps",
          "blocknumber",
          "created_at",
          "favorite_count",
          "followee_favorites",
          "followee_reposts",
          "has_current_user_reposted",
          "has_current_user_saved",
          "id",
          "is_album",
          "is_delete",
          "is_image_autogenerated",
          "is_private",
          "is_scheduled_release",
          "is_stream_gated",
          "permalink",
          "playlist_contents",
          "playlist_name",
          "repost_count",
          "score",
          "total_play_count",
          "track_count",
          "updated_at",
          "user",
          "user_id"
        ],
        "properties": {
          "artwork": {
            "$ref": "#/definitions/playlist_artwork_full"
          },
          "description": {
            "type": "string"
          },
          "permalink": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "is_album": {
            "type": "boolean"
          },
          "is_image_autogenerated": {
            "type": "boolean"
          },
          "playlist_name": {
            "type": "string"
          },
          "playlist_contents": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/playlist_added_timestamp"
            }
          },
          "repost_count": {
            "type": "integer"
          },
          "favorite_count": {
            "type": "integer"
          },
          "total_play_count": {
            "type": "integer"
          },
          "user": {
            "$ref": "#/definitions/user_full"
          },
          "ddex_app": {
            "type": "string"
          },
          "access": {
            "$ref": "#/definitions/access"
          },
          "upc": {
            "type": "string"
          },
          "track_count": {
            "type": "integer"
          },
          "blocknumber": {
            "type": "integer"
          },
          "created_at": {
            "type": "string"
          },
          "followee_reposts": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/repost"
            }
          },
          "followee_favorites": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/favorite"
            }
          },
          "has_current_user_reposted": {
            "type": "boolean"
          },
          "has_current_user_saved": {
            "type": "boolean"
          },
          "is_delete": {
            "type": "boolean"
          },
          "is_private": {
            "type": "boolean"
          },
          "updated_at": {
            "type": "string"
          },
          "added_timestamps": {
            "type": "array",
            "description": "DEPRECATED. Use playlist_contents instead.",
            "items": {
              "$ref": "#/definitions/playlist_added_timestamp"
            }
          },
          "user_id": {
            "type": "string"
          },
          "tracks": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/track_full"
            }
          },
          "cover_art": {
            "type": "string"
          },
          "cover_art_sizes": {
            "type": "string"
          },
          "cover_art_cids": {
            "$ref": "#/definitions/playlist_artwork"
          },
          "is_stream_gated": {
            "type": "boolean"
          },
          "stream_conditions": {
            "description": "How to unlock stream access to the track",
            "allOf": [
              {
                "$ref": "#/definitions/access_gate"
              }
            ]
          },
          "is_scheduled_release": {
            "type": "boolean"
          },
          "release_date": {
            "type": "string"
          },
          "ddex_release_ids": {
            "type": "object"
          },
          "artists": {
            "type": "array",
            "items": {
              "type": "object"
            }
          },
          "copyright_line": {
            "type": "object"
          },
          "producer_copyright_line": {
            "type": "object"
          },
          "parental_warning_type": {
            "type": "string"
          },
          "score": {
            "type": "number"
          }
        },
        "type": "object"
      },
      "following_response": {
        "required": [
          "latest_chain_block",
          "latest_chain_slot_plays",
          "latest_indexed_block",
          "latest_indexed_slot_plays",
          "signature",
          "timestamp",
          "version"
        ],
        "properties": {
          "latest_chain_block": {
            "type": "integer"
          },
          "latest_indexed_block": {
            "type": "integer"
          },
          "latest_chain_slot_plays": {
            "type": "integer"
          },
          "latest_indexed_slot_plays": {
            "type": "integer"
          },
          "signature": {
            "type": "string"
          },
          "timestamp": {
            "type": "string"
          },
          "version": {
            "$ref": "#/definitions/version_metadata"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/user_full"
            }
          }
        },
        "type": "object"
      },
      "full_trending_playlists_response": {
        "required": [
          "latest_chain_block",
          "latest_chain_slot_plays",
          "latest_indexed_block",
          "latest_indexed_slot_plays",
          "signature",
          "timestamp",
          "version"
        ],
        "properties": {
          "latest_chain_block": {
            "type": "integer"
          },
          "latest_indexed_block": {
            "type": "integer"
          },
          "latest_chain_slot_plays": {
            "type": "integer"
          },
          "latest_indexed_slot_plays": {
            "type": "integer"
          },
          "signature": {
            "type": "string"
          },
          "timestamp": {
            "type": "string"
          },
          "version": {
            "$ref": "#/definitions/version_metadata"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/playlist_full"
            }
          }
        },
        "type": "object"
      },
      "full_user_response": {
        "required": [
          "latest_chain_block",
          "latest_chain_slot_plays",
          "latest_indexed_block",
          "latest_indexed_slot_plays",
          "signature",
          "timestamp",
          "version"
        ],
        "properties": {
          "latest_chain_block": {
            "type": "integer"
          },
          "latest_indexed_block": {
            "type": "integer"
          },
          "latest_chain_slot_plays": {
            "type": "integer"
          },
          "latest_indexed_slot_plays": {
            "type": "integer"
          },
          "signature": {
            "type": "string"
          },
          "timestamp": {
            "type": "string"
          },
          "version": {
            "$ref": "#/definitions/version_metadata"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/user_full"
            }
          }
        },
        "type": "object"
      },
      "full_tracks": {
        "required": [
          "latest_chain_block",
          "latest_chain_slot_plays",
          "latest_indexed_block",
          "latest_indexed_slot_plays",
          "signature",
          "timestamp",
          "version"
        ],
        "properties": {
          "latest_chain_block": {
            "type": "integer"
          },
          "latest_indexed_block": {
            "type": "integer"
          },
          "latest_chain_slot_plays": {
            "type": "integer"
          },
          "latest_indexed_slot_plays": {
            "type": "integer"
          },
          "signature": {
            "type": "string"
          },
          "timestamp": {
            "type": "string"
          },
          "version": {
            "$ref": "#/definitions/version_metadata"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/track_full"
            }
          }
        },
        "type": "object"
      },
      "full_reposts": {
        "required": [
          "latest_chain_block",
          "latest_chain_slot_plays",
          "latest_indexed_block",
          "latest_indexed_slot_plays",
          "signature",
          "timestamp",
          "version"
        ],
        "properties": {
          "latest_chain_block": {
            "type": "integer"
          },
          "latest_indexed_block": {
            "type": "integer"
          },
          "latest_chain_slot_plays": {
            "type": "integer"
          },
          "latest_indexed_slot_plays": {
            "type": "integer"
          },
          "signature": {
            "type": "string"
          },
          "timestamp": {
            "type": "string"
          },
          "version": {
            "$ref": "#/definitions/version_metadata"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/activity_full"
            }
          }
        },
        "type": "object"
      },
      "track_activity_full": {
        "allOf": [
          {
            "$ref": "#/definitions/activity_full"
          },
          {
            "required": [
              "item",
              "item_type"
            ],
            "properties": {
              "item_type": {
                "type": "string",
                "example": "track",
                "enum": [
                  "track"
                ]
              },
              "item": {
                "$ref": "#/definitions/track_full"
              }
            },
            "type": "object"
          }
        ]
      },
      "activity_full": {
        "required": [
          "class",
          "item",
          "item_type",
          "timestamp"
        ],
        "properties": {
          "timestamp": {
            "type": "string"
          },
          "item_type": {
            "type": "string",
            "example": "track",
            "enum": [
              "track",
              "playlist"
            ]
          },
          "item": {
            "type": "object"
          },
          "class": {
            "type": "string"
          }
        },
        "discriminator": "class",
        "type": "object"
      },
      "collection_activity_full": {
        "allOf": [
          {
            "$ref": "#/definitions/activity_full"
          },
          {
            "required": [
              "item",
              "item_type"
            ],
            "properties": {
              "item_type": {
                "type": "string",
                "example": "playlist",
                "enum": [
                  "playlist"
                ]
              },
              "item": {
                "$ref": "#/definitions/playlist_full"
              }
            },
            "type": "object"
          }
        ]
      },
      "playlists_response_full": {
        "required": [
          "latest_chain_block",
          "latest_chain_slot_plays",
          "latest_indexed_block",
          "latest_indexed_slot_plays",
          "signature",
          "timestamp",
          "version"
        ],
        "properties": {
          "latest_chain_block": {
            "type": "integer"
          },
          "latest_indexed_block": {
            "type": "integer"
          },
          "latest_chain_slot_plays": {
            "type": "integer"
          },
          "latest_indexed_slot_plays": {
            "type": "integer"
          },
          "signature": {
            "type": "string"
          },
          "timestamp": {
            "type": "string"
          },
          "version": {
            "$ref": "#/definitions/version_metadata"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/playlist_full_without_tracks"
            }
          }
        },
        "type": "object"
      },
      "playlist_full_without_tracks": {
        "required": [
          "access",
          "added_timestamps",
          "blocknumber",
          "created_at",
          "favorite_count",
          "followee_favorites",
          "followee_reposts",
          "has_current_user_reposted",
          "has_current_user_saved",
          "id",
          "is_album",
          "is_delete",
          "is_image_autogenerated",
          "is_private",
          "is_scheduled_release",
          "is_stream_gated",
          "permalink",
          "playlist_contents",
          "playlist_name",
          "repost_count",
          "total_play_count",
          "track_count",
          "updated_at",
          "user",
          "user_id"
        ],
        "properties": {
          "artwork": {
            "$ref": "#/definitions/playlist_artwork_full"
          },
          "description": {
            "type": "string"
          },
          "permalink": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "is_album": {
            "type": "boolean"
          },
          "is_image_autogenerated": {
            "type": "boolean"
          },
          "playlist_name": {
            "type": "string"
          },
          "playlist_contents": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/playlist_added_timestamp"
            }
          },
          "repost_count": {
            "type": "integer"
          },
          "favorite_count": {
            "type": "integer"
          },
          "total_play_count": {
            "type": "integer"
          },
          "user": {
            "$ref": "#/definitions/user_full"
          },
          "ddex_app": {
            "type": "string"
          },
          "access": {
            "$ref": "#/definitions/access"
          },
          "upc": {
            "type": "string"
          },
          "track_count": {
            "type": "integer"
          },
          "blocknumber": {
            "type": "integer"
          },
          "created_at": {
            "type": "string"
          },
          "followee_reposts": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/repost"
            }
          },
          "followee_favorites": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/favorite"
            }
          },
          "has_current_user_reposted": {
            "type": "boolean"
          },
          "has_current_user_saved": {
            "type": "boolean"
          },
          "is_delete": {
            "type": "boolean"
          },
          "is_private": {
            "type": "boolean"
          },
          "updated_at": {
            "type": "string"
          },
          "added_timestamps": {
            "type": "array",
            "description": "DEPRECATED. Use playlist_contents instead.",
            "items": {
              "$ref": "#/definitions/playlist_added_timestamp"
            }
          },
          "user_id": {
            "type": "string"
          },
          "tracks": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/track_full"
            }
          },
          "cover_art": {
            "type": "string"
          },
          "cover_art_sizes": {
            "type": "string"
          },
          "cover_art_cids": {
            "$ref": "#/definitions/playlist_artwork"
          },
          "is_stream_gated": {
            "type": "boolean"
          },
          "stream_conditions": {
            "description": "How to unlock stream access to the track",
            "allOf": [
              {
                "$ref": "#/definitions/access_gate"
              }
            ]
          },
          "is_scheduled_release": {
            "type": "boolean"
          },
          "release_date": {
            "type": "string"
          },
          "ddex_release_ids": {
            "type": "object"
          },
          "artists": {
            "type": "array",
            "items": {
              "type": "object"
            }
          },
          "copyright_line": {
            "type": "object"
          },
          "producer_copyright_line": {
            "type": "object"
          },
          "parental_warning_type": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "albums_response_full": {
        "required": [
          "latest_chain_block",
          "latest_chain_slot_plays",
          "latest_indexed_block",
          "latest_indexed_slot_plays",
          "signature",
          "timestamp",
          "version"
        ],
        "properties": {
          "latest_chain_block": {
            "type": "integer"
          },
          "latest_indexed_block": {
            "type": "integer"
          },
          "latest_chain_slot_plays": {
            "type": "integer"
          },
          "latest_indexed_slot_plays": {
            "type": "integer"
          },
          "signature": {
            "type": "string"
          },
          "timestamp": {
            "type": "string"
          },
          "version": {
            "$ref": "#/definitions/version_metadata"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/playlist_full_without_tracks"
            }
          }
        },
        "type": "object"
      },
      "track_library_response_full": {
        "required": [
          "latest_chain_block",
          "latest_chain_slot_plays",
          "latest_indexed_block",
          "latest_indexed_slot_plays",
          "signature",
          "timestamp",
          "version"
        ],
        "properties": {
          "latest_chain_block": {
            "type": "integer"
          },
          "latest_indexed_block": {
            "type": "integer"
          },
          "latest_chain_slot_plays": {
            "type": "integer"
          },
          "latest_indexed_slot_plays": {
            "type": "integer"
          },
          "signature": {
            "type": "string"
          },
          "timestamp": {
            "type": "string"
          },
          "version": {
            "$ref": "#/definitions/version_metadata"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/track_activity_full"
            }
          }
        },
        "type": "object"
      },
      "collection_library_response_full": {
        "required": [
          "latest_chain_block",
          "latest_chain_slot_plays",
          "latest_indexed_block",
          "latest_indexed_slot_plays",
          "signature",
          "timestamp",
          "version"
        ],
        "properties": {
          "latest_chain_block": {
            "type": "integer"
          },
          "latest_indexed_block": {
            "type": "integer"
          },
          "latest_chain_slot_plays": {
            "type": "integer"
          },
          "latest_indexed_slot_plays": {
            "type": "integer"
          },
          "signature": {
            "type": "string"
          },
          "timestamp": {
            "type": "string"
          },
          "version": {
            "$ref": "#/definitions/version_metadata"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/collection_activity_full_without_tracks"
            }
          }
        },
        "type": "object"
      },
      "collection_activity_full_without_tracks": {
        "allOf": [
          {
            "$ref": "#/definitions/activity_full"
          },
          {
            "required": [
              "item",
              "item_type"
            ],
            "properties": {
              "item_type": {
                "type": "string",
                "example": "playlist",
                "enum": [
                  "playlist"
                ]
              },
              "item": {
                "$ref": "#/definitions/playlist_full_without_tracks"
              }
            },
            "type": "object"
          }
        ]
      },
      "history_response_full": {
        "required": [
          "latest_chain_block",
          "latest_chain_slot_plays",
          "latest_indexed_block",
          "latest_indexed_slot_plays",
          "signature",
          "timestamp",
          "version"
        ],
        "properties": {
          "latest_chain_block": {
            "type": "integer"
          },
          "latest_indexed_block": {
            "type": "integer"
          },
          "latest_chain_slot_plays": {
            "type": "integer"
          },
          "latest_indexed_slot_plays": {
            "type": "integer"
          },
          "signature": {
            "type": "string"
          },
          "timestamp": {
            "type": "string"
          },
          "version": {
            "$ref": "#/definitions/version_metadata"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/track_activity_full"
            }
          }
        },
        "type": "object"
      },
      "full_subscribers_response": {
        "required": [
          "latest_chain_block",
          "latest_chain_slot_plays",
          "latest_indexed_block",
          "latest_indexed_slot_plays",
          "signature",
          "timestamp",
          "version"
        ],
        "properties": {
          "latest_chain_block": {
            "type": "integer"
          },
          "latest_indexed_block": {
            "type": "integer"
          },
          "latest_chain_slot_plays": {
            "type": "integer"
          },
          "latest_indexed_slot_plays": {
            "type": "integer"
          },
          "signature": {
            "type": "string"
          },
          "timestamp": {
            "type": "string"
          },
          "version": {
            "$ref": "#/definitions/version_metadata"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/user_full"
            }
          }
        },
        "type": "object"
      },
      "full_bulk_subscribers_response": {
        "required": [
          "latest_chain_block",
          "latest_chain_slot_plays",
          "latest_indexed_block",
          "latest_indexed_slot_plays",
          "signature",
          "timestamp",
          "version"
        ],
        "properties": {
          "latest_chain_block": {
            "type": "integer"
          },
          "latest_indexed_block": {
            "type": "integer"
          },
          "latest_chain_slot_plays": {
            "type": "integer"
          },
          "latest_indexed_slot_plays": {
            "type": "integer"
          },
          "signature": {
            "type": "string"
          },
          "timestamp": {
            "type": "string"
          },
          "version": {
            "$ref": "#/definitions/version_metadata"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/user_subscribers"
            }
          }
        },
        "type": "object"
      },
      "user_subscribers": {
        "required": [
          "user_id"
        ],
        "properties": {
          "user_id": {
            "type": "string"
          },
          "subscriber_ids": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "type": "object"
      },
      "full_followers_response": {
        "required": [
          "latest_chain_block",
          "latest_chain_slot_plays",
          "latest_indexed_block",
          "latest_indexed_slot_plays",
          "signature",
          "timestamp",
          "version"
        ],
        "properties": {
          "latest_chain_block": {
            "type": "integer"
          },
          "latest_indexed_block": {
            "type": "integer"
          },
          "latest_chain_slot_plays": {
            "type": "integer"
          },
          "latest_indexed_slot_plays": {
            "type": "integer"
          },
          "signature": {
            "type": "string"
          },
          "timestamp": {
            "type": "string"
          },
          "version": {
            "$ref": "#/definitions/version_metadata"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/user_full"
            }
          }
        },
        "type": "object"
      },
      "following_response_full": {
        "required": [
          "latest_chain_block",
          "latest_chain_slot_plays",
          "latest_indexed_block",
          "latest_indexed_slot_plays",
          "signature",
          "timestamp",
          "version"
        ],
        "properties": {
          "latest_chain_block": {
            "type": "integer"
          },
          "latest_indexed_block": {
            "type": "integer"
          },
          "latest_chain_slot_plays": {
            "type": "integer"
          },
          "latest_indexed_slot_plays": {
            "type": "integer"
          },
          "signature": {
            "type": "string"
          },
          "timestamp": {
            "type": "string"
          },
          "version": {
            "$ref": "#/definitions/version_metadata"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/user_full"
            }
          }
        },
        "type": "object"
      },
      "full_mutual_followers_response": {
        "required": [
          "latest_chain_block",
          "latest_chain_slot_plays",
          "latest_indexed_block",
          "latest_indexed_slot_plays",
          "signature",
          "timestamp",
          "version"
        ],
        "properties": {
          "latest_chain_block": {
            "type": "integer"
          },
          "latest_indexed_block": {
            "type": "integer"
          },
          "latest_chain_slot_plays": {
            "type": "integer"
          },
          "latest_indexed_slot_plays": {
            "type": "integer"
          },
          "signature": {
            "type": "string"
          },
          "timestamp": {
            "type": "string"
          },
          "version": {
            "$ref": "#/definitions/version_metadata"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/user_full"
            }
          }
        },
        "type": "object"
      },
      "related_artist_response_full": {
        "required": [
          "latest_chain_block",
          "latest_chain_slot_plays",
          "latest_indexed_block",
          "latest_indexed_slot_plays",
          "signature",
          "timestamp",
          "version"
        ],
        "properties": {
          "latest_chain_block": {
            "type": "integer"
          },
          "latest_indexed_block": {
            "type": "integer"
          },
          "latest_chain_slot_plays": {
            "type": "integer"
          },
          "latest_indexed_slot_plays": {
            "type": "integer"
          },
          "signature": {
            "type": "string"
          },
          "timestamp": {
            "type": "string"
          },
          "version": {
            "$ref": "#/definitions/version_metadata"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/user_full"
            }
          }
        },
        "type": "object"
      },
      "top_genre_users_response_full": {
        "required": [
          "latest_chain_block",
          "latest_chain_slot_plays",
          "latest_indexed_block",
          "latest_indexed_slot_plays",
          "signature",
          "timestamp",
          "version"
        ],
        "properties": {
          "latest_chain_block": {
            "type": "integer"
          },
          "latest_indexed_block": {
            "type": "integer"
          },
          "latest_chain_slot_plays": {
            "type": "integer"
          },
          "latest_indexed_slot_plays": {
            "type": "integer"
          },
          "signature": {
            "type": "string"
          },
          "timestamp": {
            "type": "string"
          },
          "version": {
            "$ref": "#/definitions/version_metadata"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/user_full"
            }
          }
        },
        "type": "object"
      },
      "top_users_response_full": {
        "required": [
          "latest_chain_block",
          "latest_chain_slot_plays",
          "latest_indexed_block",
          "latest_indexed_slot_plays",
          "signature",
          "timestamp",
          "version"
        ],
        "properties": {
          "latest_chain_block": {
            "type": "integer"
          },
          "latest_indexed_block": {
            "type": "integer"
          },
          "latest_chain_slot_plays": {
            "type": "integer"
          },
          "latest_indexed_slot_plays": {
            "type": "integer"
          },
          "signature": {
            "type": "string"
          },
          "timestamp": {
            "type": "string"
          },
          "version": {
            "$ref": "#/definitions/version_metadata"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/user_full"
            }
          }
        },
        "type": "object"
      },
      "user_account_response_full": {
        "properties": {
          "data": {
            "$ref": "#/definitions/account_full"
          }
        },
        "type": "object"
      },
      "account_full": {
        "required": [
          "playlists",
          "track_save_count",
          "user"
        ],
        "properties": {
          "user": {
            "$ref": "#/definitions/user_full"
          },
          "playlists": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/account_collection"
            }
          },
          "playlist_library": {
            "$ref": "#/definitions/playlist_library"
          },
          "track_save_count": {
            "type": "integer"
          }
        },
        "type": "object"
      },
      "account_collection": {
        "required": [
          "id",
          "is_album",
          "name",
          "permalink",
          "user"
        ],
        "properties": {
          "id": {
            "type": "string"
          },
          "is_album": {
            "type": "boolean"
          },
          "name": {
            "type": "string"
          },
          "permalink": {
            "type": "string"
          },
          "user": {
            "$ref": "#/definitions/account_collection_user"
          }
        },
        "type": "object"
      },
      "account_collection_user": {
        "required": [
          "handle",
          "id"
        ],
        "properties": {
          "id": {
            "type": "string"
          },
          "handle": {
            "type": "string"
          },
          "is_deactivated": {
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "full_get_supporters": {
        "required": [
          "latest_chain_block",
          "latest_chain_slot_plays",
          "latest_indexed_block",
          "latest_indexed_slot_plays",
          "signature",
          "timestamp",
          "version"
        ],
        "properties": {
          "latest_chain_block": {
            "type": "integer"
          },
          "latest_indexed_block": {
            "type": "integer"
          },
          "latest_chain_slot_plays": {
            "type": "integer"
          },
          "latest_indexed_slot_plays": {
            "type": "integer"
          },
          "signature": {
            "type": "string"
          },
          "timestamp": {
            "type": "string"
          },
          "version": {
            "$ref": "#/definitions/version_metadata"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/full_supporter"
            }
          }
        },
        "type": "object"
      },
      "full_supporter": {
        "required": [
          "amount",
          "rank",
          "sender"
        ],
        "properties": {
          "rank": {
            "type": "integer"
          },
          "amount": {
            "type": "string"
          },
          "sender": {
            "$ref": "#/definitions/user_full"
          }
        },
        "type": "object"
      },
      "full_get_supporter": {
        "required": [
          "latest_chain_block",
          "latest_chain_slot_plays",
          "latest_indexed_block",
          "latest_indexed_slot_plays",
          "signature",
          "timestamp",
          "version"
        ],
        "properties": {
          "latest_chain_block": {
            "type": "integer"
          },
          "latest_indexed_block": {
            "type": "integer"
          },
          "latest_chain_slot_plays": {
            "type": "integer"
          },
          "latest_indexed_slot_plays": {
            "type": "integer"
          },
          "signature": {
            "type": "string"
          },
          "timestamp": {
            "type": "string"
          },
          "version": {
            "$ref": "#/definitions/version_metadata"
          },
          "data": {
            "$ref": "#/definitions/full_supporter"
          }
        },
        "type": "object"
      },
      "full_get_supported_users": {
        "required": [
          "latest_chain_block",
          "latest_chain_slot_plays",
          "latest_indexed_block",
          "latest_indexed_slot_plays",
          "signature",
          "timestamp",
          "version"
        ],
        "properties": {
          "latest_chain_block": {
            "type": "integer"
          },
          "latest_indexed_block": {
            "type": "integer"
          },
          "latest_chain_slot_plays": {
            "type": "integer"
          },
          "latest_indexed_slot_plays": {
            "type": "integer"
          },
          "signature": {
            "type": "string"
          },
          "timestamp": {
            "type": "string"
          },
          "version": {
            "$ref": "#/definitions/version_metadata"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/full_supporting"
            }
          }
        },
        "type": "object"
      },
      "full_supporting": {
        "required": [
          "amount",
          "rank",
          "receiver"
        ],
        "properties": {
          "rank": {
            "type": "integer"
          },
          "amount": {
            "type": "string"
          },
          "receiver": {
            "$ref": "#/definitions/user_full"
          }
        },
        "type": "object"
      },
      "full_get_supporting": {
        "required": [
          "latest_chain_block",
          "latest_chain_slot_plays",
          "latest_indexed_block",
          "latest_indexed_slot_plays",
          "signature",
          "timestamp",
          "version"
        ],
        "properties": {
          "latest_chain_block": {
            "type": "integer"
          },
          "latest_indexed_block": {
            "type": "integer"
          },
          "latest_chain_slot_plays": {
            "type": "integer"
          },
          "latest_indexed_slot_plays": {
            "type": "integer"
          },
          "signature": {
            "type": "string"
          },
          "timestamp": {
            "type": "string"
          },
          "version": {
            "$ref": "#/definitions/version_metadata"
          },
          "data": {
            "$ref": "#/definitions/full_supporting"
          }
        },
        "type": "object"
      },
      "managed_users_response": {
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/managed_user"
            }
          }
        },
        "type": "object"
      },
      "managed_user": {
        "required": [
          "grant",
          "user"
        ],
        "properties": {
          "user": {
            "$ref": "#/definitions/user_full"
          },
          "grant": {
            "$ref": "#/definitions/grant"
          }
        },
        "type": "object"
      },
      "grant": {
        "required": [
          "created_at",
          "grantee_address",
          "is_approved",
          "is_revoked",
          "updated_at",
          "user_id"
        ],
        "properties": {
          "grantee_address": {
            "type": "string"
          },
          "user_id": {
            "type": "string"
          },
          "is_revoked": {
            "type": "boolean"
          },
          "is_approved": {
            "type": "boolean"
          },
          "created_at": {
            "type": "string"
          },
          "updated_at": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "managers_response": {
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/user_manager"
            }
          }
        },
        "type": "object"
      },
      "user_manager": {
        "required": [
          "grant",
          "manager"
        ],
        "properties": {
          "manager": {
            "$ref": "#/definitions/user_full"
          },
          "grant": {
            "$ref": "#/definitions/grant"
          }
        },
        "type": "object"
      },
      "purchases_response": {
        "required": [
          "latest_chain_block",
          "latest_chain_slot_plays",
          "latest_indexed_block",
          "latest_indexed_slot_plays",
          "signature",
          "timestamp",
          "version"
        ],
        "properties": {
          "latest_chain_block": {
            "type": "integer"
          },
          "latest_indexed_block": {
            "type": "integer"
          },
          "latest_chain_slot_plays": {
            "type": "integer"
          },
          "latest_indexed_slot_plays": {
            "type": "integer"
          },
          "signature": {
            "type": "string"
          },
          "timestamp": {
            "type": "string"
          },
          "version": {
            "$ref": "#/definitions/version_metadata"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/purchase"
            }
          }
        },
        "type": "object"
      },
      "purchase": {
        "required": [
          "access",
          "amount",
          "buyer_user_id",
          "content_id",
          "content_type",
          "created_at",
          "extra_amount",
          "seller_user_id",
          "signature",
          "slot",
          "splits",
          "updated_at"
        ],
        "properties": {
          "slot": {
            "type": "integer"
          },
          "signature": {
            "type": "string"
          },
          "seller_user_id": {
            "type": "string"
          },
          "buyer_user_id": {
            "type": "string"
          },
          "amount": {
            "type": "string"
          },
          "extra_amount": {
            "type": "string"
          },
          "content_type": {
            "type": "string"
          },
          "content_id": {
            "type": "string"
          },
          "created_at": {
            "type": "string"
          },
          "updated_at": {
            "type": "string"
          },
          "access": {
            "type": "string"
          },
          "splits": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/purchase_split"
            }
          }
        },
        "discriminator": "content_type",
        "type": "object"
      },
      "purchase_split": {
        "required": [
          "amount",
          "payout_wallet"
        ],
        "properties": {
          "user_id": {
            "type": "integer"
          },
          "payout_wallet": {
            "type": "string"
          },
          "amount": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "purchases_count_response": {
        "required": [
          "latest_chain_block",
          "latest_chain_slot_plays",
          "latest_indexed_block",
          "latest_indexed_slot_plays",
          "signature",
          "timestamp",
          "version"
        ],
        "properties": {
          "latest_chain_block": {
            "type": "integer"
          },
          "latest_indexed_block": {
            "type": "integer"
          },
          "latest_chain_slot_plays": {
            "type": "integer"
          },
          "latest_indexed_slot_plays": {
            "type": "integer"
          },
          "signature": {
            "type": "string"
          },
          "timestamp": {
            "type": "string"
          },
          "version": {
            "$ref": "#/definitions/version_metadata"
          },
          "data": {
            "type": "integer"
          }
        },
        "type": "object"
      },
      "full_remixers_response": {
        "required": [
          "latest_chain_block",
          "latest_chain_slot_plays",
          "latest_indexed_block",
          "latest_indexed_slot_plays",
          "signature",
          "timestamp",
          "version"
        ],
        "properties": {
          "latest_chain_block": {
            "type": "integer"
          },
          "latest_indexed_block": {
            "type": "integer"
          },
          "latest_chain_slot_plays": {
            "type": "integer"
          },
          "latest_indexed_slot_plays": {
            "type": "integer"
          },
          "signature": {
            "type": "string"
          },
          "timestamp": {
            "type": "string"
          },
          "version": {
            "$ref": "#/definitions/version_metadata"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/user_full"
            }
          }
        },
        "type": "object"
      },
      "remixers_count_response": {
        "required": [
          "latest_chain_block",
          "latest_chain_slot_plays",
          "latest_indexed_block",
          "latest_indexed_slot_plays",
          "signature",
          "timestamp",
          "version"
        ],
        "properties": {
          "latest_chain_block": {
            "type": "integer"
          },
          "latest_indexed_block": {
            "type": "integer"
          },
          "latest_chain_slot_plays": {
            "type": "integer"
          },
          "latest_indexed_slot_plays": {
            "type": "integer"
          },
          "signature": {
            "type": "string"
          },
          "timestamp": {
            "type": "string"
          },
          "version": {
            "$ref": "#/definitions/version_metadata"
          },
          "data": {
            "type": "integer"
          }
        },
        "type": "object"
      },
      "full_purchasers_response": {
        "required": [
          "latest_chain_block",
          "latest_chain_slot_plays",
          "latest_indexed_block",
          "latest_indexed_slot_plays",
          "signature",
          "timestamp",
          "version"
        ],
        "properties": {
          "latest_chain_block": {
            "type": "integer"
          },
          "latest_indexed_block": {
            "type": "integer"
          },
          "latest_chain_slot_plays": {
            "type": "integer"
          },
          "latest_indexed_slot_plays": {
            "type": "integer"
          },
          "signature": {
            "type": "string"
          },
          "timestamp": {
            "type": "string"
          },
          "version": {
            "$ref": "#/definitions/version_metadata"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/user_full"
            }
          }
        },
        "type": "object"
      },
      "purchasers_count_response": {
        "required": [
          "latest_chain_block",
          "latest_chain_slot_plays",
          "latest_indexed_block",
          "latest_indexed_slot_plays",
          "signature",
          "timestamp",
          "version"
        ],
        "properties": {
          "latest_chain_block": {
            "type": "integer"
          },
          "latest_indexed_block": {
            "type": "integer"
          },
          "latest_chain_slot_plays": {
            "type": "integer"
          },
          "latest_indexed_slot_plays": {
            "type": "integer"
          },
          "signature": {
            "type": "string"
          },
          "timestamp": {
            "type": "string"
          },
          "version": {
            "$ref": "#/definitions/version_metadata"
          },
          "data": {
            "type": "integer"
          }
        },
        "type": "object"
      },
      "user_feed_response": {
        "required": [
          "latest_chain_block",
          "latest_chain_slot_plays",
          "latest_indexed_block",
          "latest_indexed_slot_plays",
          "signature",
          "timestamp",
          "version"
        ],
        "properties": {
          "latest_chain_block": {
            "type": "integer"
          },
          "latest_indexed_block": {
            "type": "integer"
          },
          "latest_chain_slot_plays": {
            "type": "integer"
          },
          "latest_indexed_slot_plays": {
            "type": "integer"
          },
          "signature": {
            "type": "string"
          },
          "timestamp": {
            "type": "string"
          },
          "version": {
            "$ref": "#/definitions/version_metadata"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/user_feed_item"
            }
          }
        },
        "type": "object"
      },
      "user_feed_item": {
        "oneOf": [
          {
            "$ref": "#/definitions/track_feed_item"
          },
          {
            "$ref": "#/definitions/playlist_feed_item"
          }
        ],
        "discriminator": {
          "propertyName": "type",
          "mapping": {
            "track": "#/definitions/track_feed_item",
            "playlist": "#/definitions/playlist_feed_item"
          }
        }
      },
      "track_feed_item": {
        "required": [
          "item",
          "type"
        ],
        "properties": {
          "type": {
            "type": "string"
          },
          "item": {
            "$ref": "#/definitions/track_full"
          }
        },
        "type": "object"
      },
      "playlist_feed_item": {
        "required": [
          "item",
          "type"
        ],
        "properties": {
          "type": {
            "type": "string"
          },
          "item": {
            "$ref": "#/definitions/playlist_full"
          }
        },
        "type": "object"
      },
      "user_comments_response_full": {
        "required": [
          "latest_chain_block",
          "latest_chain_slot_plays",
          "latest_indexed_block",
          "latest_indexed_slot_plays",
          "signature",
          "timestamp",
          "version"
        ],
        "properties": {
          "latest_chain_block": {
            "type": "integer"
          },
          "latest_indexed_block": {
            "type": "integer"
          },
          "latest_chain_slot_plays": {
            "type": "integer"
          },
          "latest_indexed_slot_plays": {
            "type": "integer"
          },
          "signature": {
            "type": "string"
          },
          "timestamp": {
            "type": "string"
          },
          "version": {
            "$ref": "#/definitions/version_metadata"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/comment"
            }
          },
          "related": {
            "$ref": "#/definitions/related"
          }
        },
        "type": "object"
      },
      "transaction_history_response": {
        "required": [
          "latest_chain_block",
          "latest_chain_slot_plays",
          "latest_indexed_block",
          "latest_indexed_slot_plays",
          "signature",
          "timestamp",
          "version"
        ],
        "properties": {
          "latest_chain_block": {
            "type": "integer"
          },
          "latest_indexed_block": {
            "type": "integer"
          },
          "latest_chain_slot_plays": {
            "type": "integer"
          },
          "latest_indexed_slot_plays": {
            "type": "integer"
          },
          "signature": {
            "type": "string"
          },
          "timestamp": {
            "type": "string"
          },
          "version": {
            "$ref": "#/definitions/version_metadata"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/transaction_details"
            }
          }
        },
        "type": "object"
      },
      "transaction_details": {
        "required": [
          "balance",
          "change",
          "metadata",
          "method",
          "signature",
          "transaction_date",
          "transaction_type",
          "user_bank"
        ],
        "properties": {
          "transaction_date": {
            "type": "string"
          },
          "transaction_type": {
            "type": "string"
          },
          "method": {
            "type": "string"
          },
          "signature": {
            "type": "string"
          },
          "user_bank": {
            "type": "string"
          },
          "change": {
            "type": "string"
          },
          "balance": {
            "type": "string"
          },
          "metadata": {
            "type": "object"
          }
        },
        "discriminator": "transaction_type",
        "type": "object"
      },
      "transaction_history_count_response": {
        "required": [
          "latest_chain_block",
          "latest_chain_slot_plays",
          "latest_indexed_block",
          "latest_indexed_slot_plays",
          "signature",
          "timestamp",
          "version"
        ],
        "properties": {
          "latest_chain_block": {
            "type": "integer"
          },
          "latest_indexed_block": {
            "type": "integer"
          },
          "latest_chain_slot_plays": {
            "type": "integer"
          },
          "latest_indexed_slot_plays": {
            "type": "integer"
          },
          "signature": {
            "type": "string"
          },
          "timestamp": {
            "type": "string"
          },
          "version": {
            "$ref": "#/definitions/version_metadata"
          },
          "data": {
            "type": "integer"
          }
        },
        "type": "object"
      },
      "search_full_response": {
        "required": [
          "latest_chain_block",
          "latest_chain_slot_plays",
          "latest_indexed_block",
          "latest_indexed_slot_plays",
          "signature",
          "timestamp",
          "version"
        ],
        "properties": {
          "latest_chain_block": {
            "type": "integer"
          },
          "latest_indexed_block": {
            "type": "integer"
          },
          "latest_chain_slot_plays": {
            "type": "integer"
          },
          "latest_indexed_slot_plays": {
            "type": "integer"
          },
          "signature": {
            "type": "string"
          },
          "timestamp": {
            "type": "string"
          },
          "version": {
            "$ref": "#/definitions/version_metadata"
          },
          "data": {
            "$ref": "#/definitions/search_model"
          }
        },
        "type": "object"
      },
      "search_model": {
        "required": [
          "albums",
          "playlists",
          "tracks",
          "users"
        ],
        "properties": {
          "users": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/user_full"
            }
          },
          "followed_users": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/user_full"
            }
          },
          "tracks": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/search_track_full"
            }
          },
          "saved_tracks": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/search_track_full"
            }
          },
          "playlists": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/search_playlist_full"
            }
          },
          "saved_playlists": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/search_playlist_full"
            }
          },
          "albums": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/search_playlist_full"
            }
          },
          "saved_albums": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/search_playlist_full"
            }
          }
        },
        "type": "object"
      },
      "search_track_full": {
        "required": [
          "access",
          "artwork",
          "blocknumber",
          "comment_count",
          "cover_art_sizes",
          "created_at",
          "download",
          "duration",
          "favorite_count",
          "field_visibility",
          "genre",
          "has_current_user_reposted",
          "has_current_user_saved",
          "id",
          "is_available",
          "is_delete",
          "is_download_gated",
          "is_downloadable",
          "is_original_available",
          "is_owned_by_user",
          "is_scheduled_release",
          "is_stream_gated",
          "is_unlisted",
          "permalink",
          "play_count",
          "preview",
          "remix_of",
          "repost_count",
          "route_id",
          "stream",
          "title",
          "track_segments",
          "updated_at",
          "user",
          "user_id"
        ],
        "properties": {
          "artwork": {
            "$ref": "#/definitions/track_artwork_full"
          },
          "description": {
            "type": "string"
          },
          "genre": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "track_cid": {
            "type": "string"
          },
          "preview_cid": {
            "type": "string"
          },
          "orig_file_cid": {
            "type": "string"
          },
          "orig_filename": {
            "type": "string"
          },
          "is_original_available": {
            "type": "boolean"
          },
          "mood": {
            "type": "string"
          },
          "release_date": {
            "type": "string"
          },
          "remix_of": {
            "$ref": "#/definitions/full_remix_parent"
          },
          "repost_count": {
            "type": "integer"
          },
          "favorite_count": {
            "type": "integer"
          },
          "comment_count": {
            "type": "integer"
          },
          "tags": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "user": {
            "$ref": "#/definitions/user_full"
          },
          "duration": {
            "type": "integer"
          },
          "is_downloadable": {
            "type": "boolean"
          },
          "play_count": {
            "type": "integer"
          },
          "permalink": {
            "type": "string"
          },
          "is_streamable": {
            "type": "boolean"
          },
          "ddex_app": {
            "type": "string"
          },
          "playlists_containing_track": {
            "type": "array",
            "items": {
              "type": "integer"
            }
          },
          "pinned_comment_id": {
            "type": "integer"
          },
          "album_backlink": {
            "$ref": "#/definitions/album_backlink"
          },
          "access": {
            "description": "Describes what access the given user has",
            "allOf": [
              {
                "$ref": "#/definitions/access"
              }
            ]
          },
          "blocknumber": {
            "type": "integer",
            "description": "The blocknumber this track was last updated"
          },
          "create_date": {
            "type": "string"
          },
          "cover_art_sizes": {
            "type": "string"
          },
          "cover_art_cids": {
            "$ref": "#/definitions/cover_art"
          },
          "created_at": {
            "type": "string"
          },
          "credits_splits": {
            "type": "string"
          },
          "isrc": {
            "type": "string"
          },
          "license": {
            "type": "string"
          },
          "iswc": {
            "type": "string"
          },
          "field_visibility": {
            "$ref": "#/definitions/field_visibility"
          },
          "followee_reposts": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/repost"
            }
          },
          "has_current_user_reposted": {
            "type": "boolean"
          },
          "is_scheduled_release": {
            "type": "boolean"
          },
          "is_unlisted": {
            "type": "boolean"
          },
          "has_current_user_saved": {
            "type": "boolean"
          },
          "followee_favorites": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/favorite"
            }
          },
          "route_id": {
            "type": "string"
          },
          "stem_of": {
            "$ref": "#/definitions/stem_parent"
          },
          "track_segments": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/track_segment"
            }
          },
          "updated_at": {
            "type": "string"
          },
          "user_id": {
            "type": "string"
          },
          "is_delete": {
            "type": "boolean"
          },
          "cover_art": {
            "type": "string"
          },
          "is_available": {
            "type": "boolean"
          },
          "ai_attribution_user_id": {
            "type": "integer"
          },
          "allowed_api_keys": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "audio_upload_id": {
            "type": "string"
          },
          "preview_start_seconds": {
            "type": "number"
          },
          "bpm": {
            "type": "number"
          },
          "is_custom_bpm": {
            "type": "boolean"
          },
          "musical_key": {
            "type": "string"
          },
          "is_custom_musical_key": {
            "type": "boolean"
          },
          "audio_analysis_error_count": {
            "type": "integer"
          },
          "comments_disabled": {
            "type": "boolean"
          },
          "ddex_release_ids": {
            "type": "object"
          },
          "artists": {
            "type": "array",
            "items": {
              "type": "object"
            }
          },
          "resource_contributors": {
            "type": "array",
            "items": {
              "type": "object"
            }
          },
          "indirect_resource_contributors": {
            "type": "array",
            "items": {
              "type": "object"
            }
          },
          "rights_controller": {
            "type": "object"
          },
          "copyright_line": {
            "type": "object"
          },
          "producer_copyright_line": {
            "type": "object"
          },
          "parental_warning_type": {
            "type": "string"
          },
          "is_stream_gated": {
            "type": "boolean",
            "description": "Whether or not the owner has restricted streaming behind an access gate"
          },
          "stream_conditions": {
            "description": "How to unlock stream access to the track",
            "allOf": [
              {
                "$ref": "#/definitions/access_gate"
              }
            ]
          },
          "is_download_gated": {
            "type": "boolean",
            "description": "Whether or not the owner has restricted downloading behind an access gate"
          },
          "download_conditions": {
            "description": "How to unlock the track download",
            "allOf": [
              {
                "$ref": "#/definitions/access_gate"
              }
            ]
          },
          "cover_original_song_title": {
            "type": "string"
          },
          "cover_original_artist": {
            "type": "string"
          },
          "is_owned_by_user": {
            "type": "boolean",
            "description": "Indicates whether the track is owned by the user for MRI sake"
          },
          "stream": {
            "$ref": "#/definitions/url_with_mirrors"
          },
          "download": {
            "$ref": "#/definitions/url_with_mirrors"
          },
          "preview": {
            "$ref": "#/definitions/url_with_mirrors"
          }
        },
        "type": "object"
      },
      "search_playlist_full": {
        "required": [
          "access",
          "added_timestamps",
          "blocknumber",
          "created_at",
          "favorite_count",
          "has_current_user_reposted",
          "has_current_user_saved",
          "id",
          "is_album",
          "is_delete",
          "is_image_autogenerated",
          "is_private",
          "is_scheduled_release",
          "is_stream_gated",
          "permalink",
          "playlist_contents",
          "playlist_name",
          "repost_count",
          "total_play_count",
          "track_count",
          "updated_at",
          "user",
          "user_id"
        ],
        "properties": {
          "artwork": {
            "$ref": "#/definitions/playlist_artwork_full"
          },
          "description": {
            "type": "string"
          },
          "permalink": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "is_album": {
            "type": "boolean"
          },
          "is_image_autogenerated": {
            "type": "boolean"
          },
          "playlist_name": {
            "type": "string"
          },
          "playlist_contents": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/playlist_added_timestamp"
            }
          },
          "repost_count": {
            "type": "integer"
          },
          "favorite_count": {
            "type": "integer"
          },
          "total_play_count": {
            "type": "integer"
          },
          "user": {
            "$ref": "#/definitions/user_full"
          },
          "ddex_app": {
            "type": "string"
          },
          "access": {
            "$ref": "#/definitions/access"
          },
          "upc": {
            "type": "string"
          },
          "track_count": {
            "type": "integer"
          },
          "blocknumber": {
            "type": "integer"
          },
          "created_at": {
            "type": "string"
          },
          "followee_reposts": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/repost"
            }
          },
          "followee_favorites": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/favorite"
            }
          },
          "has_current_user_reposted": {
            "type": "boolean"
          },
          "has_current_user_saved": {
            "type": "boolean"
          },
          "is_delete": {
            "type": "boolean"
          },
          "is_private": {
            "type": "boolean"
          },
          "updated_at": {
            "type": "string"
          },
          "added_timestamps": {
            "type": "array",
            "description": "DEPRECATED. Use playlist_contents instead.",
            "items": {
              "$ref": "#/definitions/playlist_added_timestamp"
            }
          },
          "user_id": {
            "type": "string"
          },
          "tracks": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/track_full"
            }
          },
          "cover_art": {
            "type": "string"
          },
          "cover_art_sizes": {
            "type": "string"
          },
          "cover_art_cids": {
            "$ref": "#/definitions/playlist_artwork"
          },
          "is_stream_gated": {
            "type": "boolean"
          },
          "stream_conditions": {
            "description": "How to unlock stream access to the track",
            "allOf": [
              {
                "$ref": "#/definitions/access_gate"
              }
            ]
          },
          "is_scheduled_release": {
            "type": "boolean"
          },
          "release_date": {
            "type": "string"
          },
          "ddex_release_ids": {
            "type": "object"
          },
          "artists": {
            "type": "array",
            "items": {
              "type": "object"
            }
          },
          "copyright_line": {
            "type": "object"
          },
          "producer_copyright_line": {
            "type": "object"
          },
          "parental_warning_type": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "search_autocomplete_response": {
        "required": [
          "latest_chain_block",
          "latest_chain_slot_plays",
          "latest_indexed_block",
          "latest_indexed_slot_plays",
          "signature",
          "timestamp",
          "version"
        ],
        "properties": {
          "latest_chain_block": {
            "type": "integer"
          },
          "latest_indexed_block": {
            "type": "integer"
          },
          "latest_chain_slot_plays": {
            "type": "integer"
          },
          "latest_indexed_slot_plays": {
            "type": "integer"
          },
          "signature": {
            "type": "string"
          },
          "timestamp": {
            "type": "string"
          },
          "version": {
            "$ref": "#/definitions/version_metadata"
          },
          "data": {
            "$ref": "#/definitions/search_model"
          }
        },
        "type": "object"
      },
      "get_tips_response": {
        "required": [
          "latest_chain_block",
          "latest_chain_slot_plays",
          "latest_indexed_block",
          "latest_indexed_slot_plays",
          "signature",
          "timestamp",
          "version"
        ],
        "properties": {
          "latest_chain_block": {
            "type": "integer"
          },
          "latest_indexed_block": {
            "type": "integer"
          },
          "latest_chain_slot_plays": {
            "type": "integer"
          },
          "latest_indexed_slot_plays": {
            "type": "integer"
          },
          "signature": {
            "type": "string"
          },
          "timestamp": {
            "type": "string"
          },
          "version": {
            "$ref": "#/definitions/version_metadata"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/full_tip"
            }
          }
        },
        "type": "object"
      },
      "full_tip": {
        "required": [
          "amount",
          "created_at",
          "followee_supporters",
          "receiver",
          "sender",
          "slot",
          "tx_signature"
        ],
        "properties": {
          "amount": {
            "type": "string"
          },
          "sender": {
            "$ref": "#/definitions/user_full"
          },
          "receiver": {
            "$ref": "#/definitions/user_full"
          },
          "created_at": {
            "type": "string"
          },
          "slot": {
            "type": "integer"
          },
          "followee_supporters": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/supporter_reference"
            }
          },
          "tx_signature": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "supporter_reference": {
        "required": [
          "user_id"
        ],
        "properties": {
          "user_id": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "reactions": {
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/reaction"
            }
          }
        },
        "type": "object"
      },
      "reaction": {
        "required": [
          "reacted_to",
          "reaction_type",
          "reaction_value",
          "sender_user_id"
        ],
        "properties": {
          "reaction_value": {
            "type": "string"
          },
          "reaction_type": {
            "type": "string"
          },
          "sender_user_id": {
            "type": "string"
          },
          "reacted_to": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "cid_data_response": {
        "properties": {
          "data": {
            "$ref": "#/definitions/data_and_type"
          }
        },
        "type": "object"
      },
      "data_and_type": {
        "properties": {
          "type": {
            "type": "string"
          },
          "data": {
            "$ref": "#/definitions/cid_data"
          }
        },
        "type": "object"
      },
      "cid_data": {
        "properties": {
          "collectibles": {
            "type": "object"
          },
          "associated_sol_wallets": {
            "type": "object"
          },
          "associated_wallets": {
            "type": "object"
          }
        },
        "type": "object"
      },
      "notifications_response": {
        "required": [
          "latest_chain_block",
          "latest_chain_slot_plays",
          "latest_indexed_block",
          "latest_indexed_slot_plays",
          "signature",
          "timestamp",
          "version"
        ],
        "properties": {
          "latest_chain_block": {
            "type": "integer"
          },
          "latest_indexed_block": {
            "type": "integer"
          },
          "latest_chain_slot_plays": {
            "type": "integer"
          },
          "latest_indexed_slot_plays": {
            "type": "integer"
          },
          "signature": {
            "type": "string"
          },
          "timestamp": {
            "type": "string"
          },
          "version": {
            "$ref": "#/definitions/version_metadata"
          },
          "data": {
            "$ref": "#/definitions/notifications"
          }
        },
        "type": "object"
      },
      "notifications": {
        "required": [
          "unread_count"
        ],
        "properties": {
          "notifications": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/notification"
            }
          },
          "unread_count": {
            "type": "integer"
          }
        },
        "type": "object"
      },
      "notification": {
        "oneOf": [
          {
            "$ref": "#/definitions/follow_notification"
          },
          {
            "$ref": "#/definitions/save_notification"
          },
          {
            "$ref": "#/definitions/repost_notification"
          },
          {
            "$ref": "#/definitions/repost_of_repost_notification"
          },
          {
            "$ref": "#/definitions/save_of_repost_notification"
          },
          {
            "$ref": "#/definitions/tastemaker_notification"
          },
          {
            "$ref": "#/definitions/remix_notification"
          },
          {
            "$ref": "#/definitions/cosign_notification"
          },
          {
            "$ref": "#/definitions/create_notification"
          },
          {
            "$ref": "#/definitions/send_tip_notification"
          },
          {
            "$ref": "#/definitions/receive_tip_notification"
          },
          {
            "$ref": "#/definitions/supporter_dethroned_notification"
          },
          {
            "$ref": "#/definitions/supporter_rank_up_notification"
          },
          {
            "$ref": "#/definitions/supporter_rank_up_notification"
          },
          {
            "$ref": "#/definitions/challenge_reward_notification"
          },
          {
            "$ref": "#/definitions/claimable_reward_notification"
          },
          {
            "$ref": "#/definitions/reaction_notification"
          },
          {
            "$ref": "#/definitions/milestone_notification"
          },
          {
            "$ref": "#/definitions/tier_change_notification"
          },
          {
            "$ref": "#/definitions/track_added_to_playlist_notification"
          },
          {
            "$ref": "#/definitions/track_added_to_purchased_album_notification"
          },
          {
            "$ref": "#/definitions/usdc_purchase_seller_notification"
          },
          {
            "$ref": "#/definitions/usdc_purchase_buyer_notification"
          },
          {
            "$ref": "#/definitions/request_manager_notification"
          },
          {
            "$ref": "#/definitions/approve_manager_request_notification"
          },
          {
            "$ref": "#/definitions/trending_notification"
          },
          {
            "$ref": "#/definitions/trending_playlist_notification"
          },
          {
            "$ref": "#/definitions/trending_underground_notification"
          },
          {
            "$ref": "#/definitions/announcement_notification"
          },
          {
            "$ref": "#/definitions/comment_notification"
          },
          {
            "$ref": "#/definitions/comment_thread_notification"
          },
          {
            "$ref": "#/definitions/comment_mention_notification"
          },
          {
            "$ref": "#/definitions/comment_reaction_notification"
          },
          {
            "$ref": "#/definitions/listen_streak_reminder_notification"
          },
          {
            "$ref": "#/definitions/fan_remix_contest_started_notification"
          },
          {
            "$ref": "#/definitions/fan_remix_contest_ended_notification"
          },
          {
            "$ref": "#/definitions/fan_remix_contest_ending_soon_notification"
          },
          {
            "$ref": "#/definitions/artist_remix_contest_ended_notification"
          },
          {
            "$ref": "#/definitions/artist_remix_contest_ending_soon_notification"
          },
          {
            "$ref": "#/definitions/artist_remix_contest_submissions_notification"
          },
          {
            "$ref": "#/definitions/fan_remix_contest_winners_selected_notification"
          }
        ],
        "discriminator": {
          "propertyName": "type",
          "mapping": {
            "follow": "#/definitions/follow_notification",
            "save": "#/definitions/save_notification",
            "repost": "#/definitions/repost_notification",
            "repost_of_repost": "#/definitions/repost_of_repost_notification",
            "save_of_repost": "#/definitions/save_of_repost_notification",
            "tastemaker": "#/definitions/tastemaker_notification",
            "remix": "#/definitions/remix_notification",
            "cosign": "#/definitions/cosign_notification",
            "create": "#/definitions/create_notification",
            "tip_send": "#/definitions/send_tip_notification",
            "tip_receive": "#/definitions/receive_tip_notification",
            "supporter_dethroned": "#/definitions/supporter_dethroned_notification",
            "supporter_rank_up": "#/definitions/supporter_rank_up_notification",
            "supporting_rank_up": "#/definitions/supporter_rank_up_notification",
            "challenge_reward": "#/definitions/challenge_reward_notification",
            "claimable_reward": "#/definitions/claimable_reward_notification",
            "reaction": "#/definitions/reaction_notification",
            "milestone": "#/definitions/milestone_notification",
            "tier_change": "#/definitions/tier_change_notification",
            "track_added_to_playlist": "#/definitions/track_added_to_playlist_notification",
            "track_added_to_purchased_album": "#/definitions/track_added_to_purchased_album_notification",
            "usdc_purchase_seller": "#/definitions/usdc_purchase_seller_notification",
            "usdc_purchase_buyer": "#/definitions/usdc_purchase_buyer_notification",
            "request_manager": "#/definitions/request_manager_notification",
            "approve_manager_request": "#/definitions/approve_manager_request_notification",
            "trending": "#/definitions/trending_notification",
            "trending_playlist": "#/definitions/trending_playlist_notification",
            "trending_underground": "#/definitions/trending_underground_notification",
            "announcement": "#/definitions/announcement_notification",
            "comment": "#/definitions/comment_notification",
            "comment_thread": "#/definitions/comment_thread_notification",
            "comment_mention": "#/definitions/comment_mention_notification",
            "comment_reaction": "#/definitions/comment_reaction_notification",
            "listen_streak_reminder": "#/definitions/listen_streak_reminder_notification",
            "fan_remix_contest_started": "#/definitions/fan_remix_contest_started_notification",
            "fan_remix_contest_ended": "#/definitions/fan_remix_contest_ended_notification",
            "fan_remix_contest_ending_soon": "#/definitions/fan_remix_contest_ending_soon_notification",
            "artist_remix_contest_ended": "#/definitions/artist_remix_contest_ended_notification",
            "artist_remix_contest_ending_soon": "#/definitions/artist_remix_contest_ending_soon_notification",
            "artist_remix_contest_submissions": "#/definitions/artist_remix_contest_submissions_notification",
            "fan_remix_contest_winners_selected": "#/definitions/fan_remix_contest_winners_selected_notification"
          }
        }
      },
      "follow_notification": {
        "required": [
          "actions",
          "group_id",
          "is_seen",
          "type"
        ],
        "properties": {
          "type": {
            "type": "string"
          },
          "group_id": {
            "type": "string"
          },
          "is_seen": {
            "type": "boolean"
          },
          "seen_at": {
            "type": "integer"
          },
          "actions": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/follow_notification_action"
            }
          }
        },
        "type": "object"
      },
      "follow_notification_action": {
        "required": [
          "data",
          "specifier",
          "timestamp",
          "type"
        ],
        "properties": {
          "specifier": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "timestamp": {
            "type": "integer"
          },
          "data": {
            "$ref": "#/definitions/follow_notification_action_data"
          }
        },
        "type": "object"
      },
      "follow_notification_action_data": {
        "required": [
          "followee_user_id",
          "follower_user_id"
        ],
        "properties": {
          "follower_user_id": {
            "type": "string"
          },
          "followee_user_id": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "save_notification": {
        "required": [
          "actions",
          "group_id",
          "is_seen",
          "type"
        ],
        "properties": {
          "type": {
            "type": "string"
          },
          "group_id": {
            "type": "string"
          },
          "is_seen": {
            "type": "boolean"
          },
          "seen_at": {
            "type": "integer"
          },
          "actions": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/save_notification_action"
            }
          }
        },
        "type": "object"
      },
      "save_notification_action": {
        "required": [
          "data",
          "specifier",
          "timestamp",
          "type"
        ],
        "properties": {
          "specifier": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "timestamp": {
            "type": "integer"
          },
          "data": {
            "$ref": "#/definitions/save_notification_action_data"
          }
        },
        "type": "object"
      },
      "save_notification_action_data": {
        "required": [
          "save_item_id",
          "type",
          "user_id"
        ],
        "properties": {
          "type": {
            "type": "string",
            "example": "track",
            "enum": [
              "track",
              "playlist",
              "album"
            ]
          },
          "user_id": {
            "type": "string"
          },
          "save_item_id": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "repost_notification": {
        "required": [
          "actions",
          "group_id",
          "is_seen",
          "type"
        ],
        "properties": {
          "type": {
            "type": "string"
          },
          "group_id": {
            "type": "string"
          },
          "is_seen": {
            "type": "boolean"
          },
          "seen_at": {
            "type": "integer"
          },
          "actions": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/repost_notification_action"
            }
          }
        },
        "type": "object"
      },
      "repost_notification_action": {
        "required": [
          "data",
          "specifier",
          "timestamp",
          "type"
        ],
        "properties": {
          "specifier": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "timestamp": {
            "type": "integer"
          },
          "data": {
            "$ref": "#/definitions/repost_notification_action_data"
          }
        },
        "type": "object"
      },
      "repost_notification_action_data": {
        "required": [
          "repost_item_id",
          "type",
          "user_id"
        ],
        "properties": {
          "type": {
            "type": "string",
            "example": "track",
            "enum": [
              "track",
              "playlist",
              "album"
            ]
          },
          "user_id": {
            "type": "string"
          },
          "repost_item_id": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "repost_of_repost_notification": {
        "required": [
          "actions",
          "group_id",
          "is_seen",
          "type"
        ],
        "properties": {
          "type": {
            "type": "string"
          },
          "group_id": {
            "type": "string"
          },
          "is_seen": {
            "type": "boolean"
          },
          "seen_at": {
            "type": "integer"
          },
          "actions": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/repost_of_repost_notification_action"
            }
          }
        },
        "type": "object"
      },
      "repost_of_repost_notification_action": {
        "required": [
          "data",
          "specifier",
          "timestamp",
          "type"
        ],
        "properties": {
          "specifier": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "timestamp": {
            "type": "integer"
          },
          "data": {
            "$ref": "#/definitions/repost_of_repost_notification_action_data"
          }
        },
        "type": "object"
      },
      "repost_of_repost_notification_action_data": {
        "required": [
          "repost_of_repost_item_id",
          "type",
          "user_id"
        ],
        "properties": {
          "type": {
            "type": "string",
            "example": "track",
            "enum": [
              "track",
              "playlist",
              "album"
            ]
          },
          "user_id": {
            "type": "string"
          },
          "repost_of_repost_item_id": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "save_of_repost_notification": {
        "required": [
          "actions",
          "group_id",
          "is_seen",
          "type"
        ],
        "properties": {
          "type": {
            "type": "string"
          },
          "group_id": {
            "type": "string"
          },
          "is_seen": {
            "type": "boolean"
          },
          "seen_at": {
            "type": "integer"
          },
          "actions": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/save_of_repost_notification_action"
            }
          }
        },
        "type": "object"
      },
      "save_of_repost_notification_action": {
        "required": [
          "data",
          "specifier",
          "timestamp",
          "type"
        ],
        "properties": {
          "specifier": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "timestamp": {
            "type": "integer"
          },
          "data": {
            "$ref": "#/definitions/save_of_repost_notification_action_data"
          }
        },
        "type": "object"
      },
      "save_of_repost_notification_action_data": {
        "required": [
          "save_of_repost_item_id",
          "type",
          "user_id"
        ],
        "properties": {
          "type": {
            "type": "string",
            "example": "track",
            "enum": [
              "track",
              "playlist",
              "album"
            ]
          },
          "user_id": {
            "type": "string"
          },
          "save_of_repost_item_id": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "tastemaker_notification": {
        "required": [
          "actions",
          "group_id",
          "is_seen",
          "type"
        ],
        "properties": {
          "type": {
            "type": "string"
          },
          "group_id": {
            "type": "string"
          },
          "is_seen": {
            "type": "boolean"
          },
          "seen_at": {
            "type": "integer"
          },
          "actions": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/tastemaker_notification_action"
            }
          }
        },
        "type": "object"
      },
      "tastemaker_notification_action": {
        "required": [
          "data",
          "specifier",
          "timestamp",
          "type"
        ],
        "properties": {
          "specifier": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "timestamp": {
            "type": "integer"
          },
          "data": {
            "$ref": "#/definitions/tastemaker_notification_action_data"
          }
        },
        "type": "object"
      },
      "tastemaker_notification_action_data": {
        "required": [
          "action",
          "tastemaker_item_id",
          "tastemaker_item_owner_id",
          "tastemaker_item_type",
          "tastemaker_user_id"
        ],
        "properties": {
          "tastemaker_item_owner_id": {
            "type": "string"
          },
          "tastemaker_item_id": {
            "type": "string"
          },
          "action": {
            "type": "string"
          },
          "tastemaker_item_type": {
            "type": "string"
          },
          "tastemaker_user_id": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "remix_notification": {
        "required": [
          "actions",
          "group_id",
          "is_seen",
          "type"
        ],
        "properties": {
          "type": {
            "type": "string"
          },
          "group_id": {
            "type": "string"
          },
          "is_seen": {
            "type": "boolean"
          },
          "seen_at": {
            "type": "integer"
          },
          "actions": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/remix_notification_action"
            }
          }
        },
        "type": "object"
      },
      "remix_notification_action": {
        "required": [
          "data",
          "specifier",
          "timestamp",
          "type"
        ],
        "properties": {
          "specifier": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "timestamp": {
            "type": "integer"
          },
          "data": {
            "$ref": "#/definitions/remix_notification_action_data"
          }
        },
        "type": "object"
      },
      "remix_notification_action_data": {
        "required": [
          "parent_track_id",
          "track_id",
          "track_owner_id"
        ],
        "properties": {
          "parent_track_id": {
            "type": "string"
          },
          "track_id": {
            "type": "string"
          },
          "track_owner_id": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "cosign_notification": {
        "required": [
          "actions",
          "group_id",
          "is_seen",
          "type"
        ],
        "properties": {
          "type": {
            "type": "string"
          },
          "group_id": {
            "type": "string"
          },
          "is_seen": {
            "type": "boolean"
          },
          "seen_at": {
            "type": "integer"
          },
          "actions": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/cosign_notification_action"
            }
          }
        },
        "type": "object"
      },
      "cosign_notification_action": {
        "required": [
          "data",
          "specifier",
          "timestamp",
          "type"
        ],
        "properties": {
          "specifier": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "timestamp": {
            "type": "integer"
          },
          "data": {
            "$ref": "#/definitions/cosign_notification_action_data"
          }
        },
        "type": "object"
      },
      "cosign_notification_action_data": {
        "required": [
          "parent_track_id",
          "parent_track_owner_id",
          "track_id",
          "track_owner_id"
        ],
        "properties": {
          "parent_track_id": {
            "type": "string"
          },
          "parent_track_owner_id": {
            "type": "string"
          },
          "track_id": {
            "type": "string"
          },
          "track_owner_id": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "create_notification": {
        "required": [
          "actions",
          "group_id",
          "is_seen",
          "type"
        ],
        "properties": {
          "type": {
            "type": "string"
          },
          "group_id": {
            "type": "string"
          },
          "is_seen": {
            "type": "boolean"
          },
          "seen_at": {
            "type": "integer"
          },
          "actions": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/create_notification_action"
            }
          }
        },
        "type": "object"
      },
      "create_notification_action": {
        "required": [
          "data",
          "specifier",
          "timestamp",
          "type"
        ],
        "properties": {
          "specifier": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "timestamp": {
            "type": "integer"
          },
          "data": {
            "$ref": "#/definitions/create_notification_action_data"
          }
        },
        "type": "object"
      },
      "create_notification_action_data": {
        "oneOf": [
          {
            "$ref": "#/definitions/create_playlist_notification_action_data"
          },
          {
            "$ref": "#/definitions/create_track_notification_action_data"
          }
        ]
      },
      "create_playlist_notification_action_data": {
        "required": [
          "is_album",
          "playlist_id"
        ],
        "properties": {
          "is_album": {
            "type": "boolean"
          },
          "playlist_id": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "type": "object"
      },
      "create_track_notification_action_data": {
        "required": [
          "track_id"
        ],
        "properties": {
          "track_id": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "send_tip_notification": {
        "required": [
          "actions",
          "group_id",
          "is_seen",
          "type"
        ],
        "properties": {
          "type": {
            "type": "string"
          },
          "group_id": {
            "type": "string"
          },
          "is_seen": {
            "type": "boolean"
          },
          "seen_at": {
            "type": "integer"
          },
          "actions": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/send_tip_notification_action"
            }
          }
        },
        "type": "object"
      },
      "send_tip_notification_action": {
        "required": [
          "data",
          "specifier",
          "timestamp",
          "type"
        ],
        "properties": {
          "specifier": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "timestamp": {
            "type": "integer"
          },
          "data": {
            "$ref": "#/definitions/send_tip_notification_action_data"
          }
        },
        "type": "object"
      },
      "send_tip_notification_action_data": {
        "required": [
          "amount",
          "receiver_user_id",
          "sender_user_id",
          "tip_tx_signature"
        ],
        "properties": {
          "amount": {
            "type": "string"
          },
          "sender_user_id": {
            "type": "string"
          },
          "receiver_user_id": {
            "type": "string"
          },
          "tip_tx_signature": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "receive_tip_notification": {
        "required": [
          "actions",
          "group_id",
          "is_seen",
          "type"
        ],
        "properties": {
          "type": {
            "type": "string"
          },
          "group_id": {
            "type": "string"
          },
          "is_seen": {
            "type": "boolean"
          },
          "seen_at": {
            "type": "integer"
          },
          "actions": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/receive_tip_notification_action"
            }
          }
        },
        "type": "object"
      },
      "receive_tip_notification_action": {
        "required": [
          "data",
          "specifier",
          "timestamp",
          "type"
        ],
        "properties": {
          "specifier": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "timestamp": {
            "type": "integer"
          },
          "data": {
            "$ref": "#/definitions/receive_tip_notification_action_data"
          }
        },
        "type": "object"
      },
      "receive_tip_notification_action_data": {
        "required": [
          "amount",
          "reaction_value",
          "receiver_user_id",
          "sender_user_id",
          "tip_tx_signature"
        ],
        "properties": {
          "amount": {
            "type": "string"
          },
          "sender_user_id": {
            "type": "string"
          },
          "receiver_user_id": {
            "type": "string"
          },
          "tip_tx_signature": {
            "type": "string"
          },
          "reaction_value": {
            "type": "integer"
          }
        },
        "type": "object"
      },
      "supporter_dethroned_notification": {
        "required": [
          "actions",
          "group_id",
          "is_seen",
          "type"
        ],
        "properties": {
          "type": {
            "type": "string"
          },
          "group_id": {
            "type": "string"
          },
          "is_seen": {
            "type": "boolean"
          },
          "seen_at": {
            "type": "integer"
          },
          "actions": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/supporter_dethroned_notification_action"
            }
          }
        },
        "type": "object"
      },
      "supporter_dethroned_notification_action": {
        "required": [
          "data",
          "specifier",
          "timestamp",
          "type"
        ],
        "properties": {
          "specifier": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "timestamp": {
            "type": "integer"
          },
          "data": {
            "$ref": "#/definitions/supporter_dethroned_notification_action_data"
          }
        },
        "type": "object"
      },
      "supporter_dethroned_notification_action_data": {
        "required": [
          "dethroned_user_id",
          "receiver_user_id",
          "sender_user_id"
        ],
        "properties": {
          "dethroned_user_id": {
            "type": "string"
          },
          "sender_user_id": {
            "type": "string"
          },
          "receiver_user_id": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "supporter_rank_up_notification": {
        "required": [
          "actions",
          "group_id",
          "is_seen",
          "type"
        ],
        "properties": {
          "type": {
            "type": "string"
          },
          "group_id": {
            "type": "string"
          },
          "is_seen": {
            "type": "boolean"
          },
          "seen_at": {
            "type": "integer"
          },
          "actions": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/supporter_rank_up_notification_action"
            }
          }
        },
        "type": "object"
      },
      "supporter_rank_up_notification_action": {
        "required": [
          "data",
          "specifier",
          "timestamp",
          "type"
        ],
        "properties": {
          "specifier": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "timestamp": {
            "type": "integer"
          },
          "data": {
            "$ref": "#/definitions/supporter_rank_up_notification_action_data"
          }
        },
        "type": "object"
      },
      "supporter_rank_up_notification_action_data": {
        "required": [
          "rank",
          "receiver_user_id",
          "sender_user_id"
        ],
        "properties": {
          "rank": {
            "type": "integer"
          },
          "sender_user_id": {
            "type": "string"
          },
          "receiver_user_id": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "challenge_reward_notification": {
        "required": [
          "actions",
          "group_id",
          "is_seen",
          "type"
        ],
        "properties": {
          "type": {
            "type": "string"
          },
          "group_id": {
            "type": "string"
          },
          "is_seen": {
            "type": "boolean"
          },
          "seen_at": {
            "type": "integer"
          },
          "actions": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/challenge_reward_notification_action"
            }
          }
        },
        "type": "object"
      },
      "challenge_reward_notification_action": {
        "required": [
          "data",
          "specifier",
          "timestamp",
          "type"
        ],
        "properties": {
          "specifier": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "timestamp": {
            "type": "integer"
          },
          "data": {
            "$ref": "#/definitions/challenge_reward_notification_action_data"
          }
        },
        "type": "object"
      },
      "challenge_reward_notification_action_data": {
        "required": [
          "amount",
          "challenge_id",
          "specifier"
        ],
        "properties": {
          "amount": {
            "type": "string"
          },
          "specifier": {
            "type": "string"
          },
          "challenge_id": {
            "type": "string"
          },
          "listen_streak": {
            "type": "integer"
          }
        },
        "type": "object"
      },
      "claimable_reward_notification": {
        "required": [
          "actions",
          "group_id",
          "is_seen",
          "type"
        ],
        "properties": {
          "type": {
            "type": "string"
          },
          "group_id": {
            "type": "string"
          },
          "is_seen": {
            "type": "boolean"
          },
          "seen_at": {
            "type": "integer"
          },
          "actions": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/claimable_reward_notification_action"
            }
          }
        },
        "type": "object"
      },
      "claimable_reward_notification_action": {
        "required": [
          "data",
          "specifier",
          "timestamp",
          "type"
        ],
        "properties": {
          "specifier": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "timestamp": {
            "type": "integer"
          },
          "data": {
            "$ref": "#/definitions/claimable_reward_notification_action_data"
          }
        },
        "type": "object"
      },
      "claimable_reward_notification_action_data": {
        "required": [
          "amount",
          "challenge_id",
          "specifier"
        ],
        "properties": {
          "amount": {
            "type": "string"
          },
          "specifier": {
            "type": "string"
          },
          "challenge_id": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "reaction_notification": {
        "required": [
          "actions",
          "group_id",
          "is_seen",
          "type"
        ],
        "properties": {
          "type": {
            "type": "string"
          },
          "group_id": {
            "type": "string"
          },
          "is_seen": {
            "type": "boolean"
          },
          "seen_at": {
            "type": "integer"
          },
          "actions": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/reaction_notification_action"
            }
          }
        },
        "type": "object"
      },
      "reaction_notification_action": {
        "required": [
          "data",
          "specifier",
          "timestamp",
          "type"
        ],
        "properties": {
          "specifier": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "timestamp": {
            "type": "integer"
          },
          "data": {
            "$ref": "#/definitions/reaction_notification_action_data"
          }
        },
        "type": "object"
      },
      "reaction_notification_action_data": {
        "required": [
          "reacted_to",
          "reaction_type",
          "reaction_value",
          "receiver_user_id",
          "sender_user_id",
          "sender_wallet",
          "tip_amount"
        ],
        "properties": {
          "reacted_to": {
            "type": "string"
          },
          "reaction_type": {
            "type": "string"
          },
          "reaction_value": {
            "type": "integer"
          },
          "receiver_user_id": {
            "type": "string"
          },
          "sender_user_id": {
            "type": "string"
          },
          "sender_wallet": {
            "type": "string"
          },
          "tip_amount": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "milestone_notification": {
        "required": [
          "actions",
          "group_id",
          "is_seen",
          "type"
        ],
        "properties": {
          "type": {
            "type": "string"
          },
          "group_id": {
            "type": "string"
          },
          "is_seen": {
            "type": "boolean"
          },
          "seen_at": {
            "type": "integer"
          },
          "actions": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/milestone_notification_action"
            }
          }
        },
        "type": "object"
      },
      "milestone_notification_action": {
        "required": [
          "data",
          "specifier",
          "timestamp",
          "type"
        ],
        "properties": {
          "specifier": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "timestamp": {
            "type": "integer"
          },
          "data": {
            "$ref": "#/definitions/milestone_notification_action_data"
          }
        },
        "type": "object"
      },
      "milestone_notification_action_data": {
        "oneOf": [
          {
            "$ref": "#/definitions/user_milestone_notification_action_data"
          },
          {
            "$ref": "#/definitions/track_milestone_notification_action_data"
          },
          {
            "$ref": "#/definitions/playlist_milestone_notification_action_data"
          }
        ]
      },
      "user_milestone_notification_action_data": {
        "required": [
          "threshold",
          "type",
          "user_id"
        ],
        "properties": {
          "type": {
            "type": "string"
          },
          "threshold": {
            "type": "integer"
          },
          "user_id": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "track_milestone_notification_action_data": {
        "required": [
          "threshold",
          "track_id",
          "type"
        ],
        "properties": {
          "type": {
            "type": "string"
          },
          "threshold": {
            "type": "integer"
          },
          "track_id": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "playlist_milestone_notification_action_data": {
        "required": [
          "is_album",
          "playlist_id",
          "threshold",
          "type"
        ],
        "properties": {
          "type": {
            "type": "string"
          },
          "threshold": {
            "type": "integer"
          },
          "playlist_id": {
            "type": "string"
          },
          "is_album": {
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "tier_change_notification": {
        "required": [
          "actions",
          "group_id",
          "is_seen",
          "type"
        ],
        "properties": {
          "type": {
            "type": "string"
          },
          "group_id": {
            "type": "string"
          },
          "is_seen": {
            "type": "boolean"
          },
          "seen_at": {
            "type": "integer"
          },
          "actions": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/tier_change_notification_action"
            }
          }
        },
        "type": "object"
      },
      "tier_change_notification_action": {
        "required": [
          "data",
          "specifier",
          "timestamp",
          "type"
        ],
        "properties": {
          "specifier": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "timestamp": {
            "type": "integer"
          },
          "data": {
            "$ref": "#/definitions/tier_change_notification_action_data"
          }
        },
        "type": "object"
      },
      "tier_change_notification_action_data": {
        "required": [
          "current_value",
          "new_tier",
          "new_tier_value"
        ],
        "properties": {
          "new_tier": {
            "type": "string"
          },
          "current_value": {
            "type": "string"
          },
          "new_tier_value": {
            "type": "integer"
          }
        },
        "type": "object"
      },
      "track_added_to_playlist_notification": {
        "required": [
          "actions",
          "group_id",
          "is_seen",
          "type"
        ],
        "properties": {
          "type": {
            "type": "string"
          },
          "group_id": {
            "type": "string"
          },
          "is_seen": {
            "type": "boolean"
          },
          "seen_at": {
            "type": "integer"
          },
          "actions": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/track_added_to_playlist_notification_action"
            }
          }
        },
        "type": "object"
      },
      "track_added_to_playlist_notification_action": {
        "required": [
          "data",
          "specifier",
          "timestamp",
          "type"
        ],
        "properties": {
          "specifier": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "timestamp": {
            "type": "integer"
          },
          "data": {
            "$ref": "#/definitions/track_added_to_playlist_notification_action_data"
          }
        },
        "type": "object"
      },
      "track_added_to_playlist_notification_action_data": {
        "required": [
          "playlist_id",
          "playlist_owner_id",
          "track_id"
        ],
        "properties": {
          "track_id": {
            "type": "string"
          },
          "playlist_id": {
            "type": "string"
          },
          "playlist_owner_id": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "track_added_to_purchased_album_notification": {
        "required": [
          "actions",
          "group_id",
          "is_seen",
          "type"
        ],
        "properties": {
          "type": {
            "type": "string"
          },
          "group_id": {
            "type": "string"
          },
          "is_seen": {
            "type": "boolean"
          },
          "seen_at": {
            "type": "integer"
          },
          "actions": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/track_added_to_purchased_album_notification_action"
            }
          }
        },
        "type": "object"
      },
      "track_added_to_purchased_album_notification_action": {
        "required": [
          "data",
          "specifier",
          "timestamp",
          "type"
        ],
        "properties": {
          "specifier": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "timestamp": {
            "type": "integer"
          },
          "data": {
            "$ref": "#/definitions/track_added_to_purchased_album_notification_action_data"
          }
        },
        "type": "object"
      },
      "track_added_to_purchased_album_notification_action_data": {
        "required": [
          "playlist_id",
          "playlist_owner_id",
          "track_id"
        ],
        "properties": {
          "track_id": {
            "type": "string"
          },
          "playlist_id": {
            "type": "string"
          },
          "playlist_owner_id": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "usdc_purchase_seller_notification": {
        "required": [
          "actions",
          "group_id",
          "is_seen",
          "type"
        ],
        "properties": {
          "type": {
            "type": "string"
          },
          "group_id": {
            "type": "string"
          },
          "is_seen": {
            "type": "boolean"
          },
          "seen_at": {
            "type": "integer"
          },
          "actions": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/usdc_purchase_seller_notification_action"
            }
          }
        },
        "type": "object"
      },
      "usdc_purchase_seller_notification_action": {
        "required": [
          "data",
          "specifier",
          "timestamp",
          "type"
        ],
        "properties": {
          "specifier": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "timestamp": {
            "type": "integer"
          },
          "data": {
            "$ref": "#/definitions/usdc_purchase_seller_notification_action_data"
          }
        },
        "type": "object"
      },
      "usdc_purchase_seller_notification_action_data": {
        "required": [
          "amount",
          "buyer_user_id",
          "content_id",
          "content_type",
          "extra_amount",
          "seller_user_id"
        ],
        "properties": {
          "content_type": {
            "type": "string"
          },
          "buyer_user_id": {
            "type": "string"
          },
          "seller_user_id": {
            "type": "string"
          },
          "amount": {
            "type": "string"
          },
          "extra_amount": {
            "type": "string"
          },
          "content_id": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "usdc_purchase_buyer_notification": {
        "required": [
          "actions",
          "group_id",
          "is_seen",
          "type"
        ],
        "properties": {
          "type": {
            "type": "string"
          },
          "group_id": {
            "type": "string"
          },
          "is_seen": {
            "type": "boolean"
          },
          "seen_at": {
            "type": "integer"
          },
          "actions": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/usdc_purchase_buyer_notification_action"
            }
          }
        },
        "type": "object"
      },
      "usdc_purchase_buyer_notification_action": {
        "required": [
          "data",
          "specifier",
          "timestamp",
          "type"
        ],
        "properties": {
          "specifier": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "timestamp": {
            "type": "integer"
          },
          "data": {
            "$ref": "#/definitions/usdc_purchase_buyer_notification_action_data"
          }
        },
        "type": "object"
      },
      "usdc_purchase_buyer_notification_action_data": {
        "required": [
          "amount",
          "buyer_user_id",
          "content_id",
          "content_type",
          "extra_amount",
          "seller_user_id"
        ],
        "properties": {
          "content_type": {
            "type": "string"
          },
          "buyer_user_id": {
            "type": "string"
          },
          "seller_user_id": {
            "type": "string"
          },
          "amount": {
            "type": "string"
          },
          "extra_amount": {
            "type": "string"
          },
          "content_id": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "request_manager_notification": {
        "required": [
          "actions",
          "group_id",
          "is_seen",
          "type"
        ],
        "properties": {
          "type": {
            "type": "string"
          },
          "group_id": {
            "type": "string"
          },
          "is_seen": {
            "type": "boolean"
          },
          "seen_at": {
            "type": "integer"
          },
          "actions": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/request_manager_notification_action"
            }
          }
        },
        "type": "object"
      },
      "request_manager_notification_action": {
        "required": [
          "data",
          "specifier",
          "timestamp",
          "type"
        ],
        "properties": {
          "specifier": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "timestamp": {
            "type": "integer"
          },
          "data": {
            "$ref": "#/definitions/request_manager_notification_action_data"
          }
        },
        "type": "object"
      },
      "request_manager_notification_action_data": {
        "required": [
          "grantee_address",
          "grantee_user_id",
          "user_id"
        ],
        "properties": {
          "user_id": {
            "type": "string"
          },
          "grantee_user_id": {
            "type": "string"
          },
          "grantee_address": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "approve_manager_request_notification": {
        "required": [
          "actions",
          "group_id",
          "is_seen",
          "type"
        ],
        "properties": {
          "type": {
            "type": "string"
          },
          "group_id": {
            "type": "string"
          },
          "is_seen": {
            "type": "boolean"
          },
          "seen_at": {
            "type": "integer"
          },
          "actions": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/approve_manager_request_notification_action"
            }
          }
        },
        "type": "object"
      },
      "approve_manager_request_notification_action": {
        "required": [
          "data",
          "specifier",
          "timestamp",
          "type"
        ],
        "properties": {
          "specifier": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "timestamp": {
            "type": "integer"
          },
          "data": {
            "$ref": "#/definitions/approve_manager_request_notification_action_data"
          }
        },
        "type": "object"
      },
      "approve_manager_request_notification_action_data": {
        "required": [
          "grantee_address",
          "grantee_user_id",
          "user_id"
        ],
        "properties": {
          "user_id": {
            "type": "string"
          },
          "grantee_user_id": {
            "type": "string"
          },
          "grantee_address": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "trending_notification": {
        "required": [
          "actions",
          "group_id",
          "is_seen",
          "type"
        ],
        "properties": {
          "type": {
            "type": "string"
          },
          "group_id": {
            "type": "string"
          },
          "is_seen": {
            "type": "boolean"
          },
          "seen_at": {
            "type": "integer"
          },
          "actions": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/trending_notification_action"
            }
          }
        },
        "type": "object"
      },
      "trending_notification_action": {
        "required": [
          "data",
          "specifier",
          "timestamp",
          "type"
        ],
        "properties": {
          "specifier": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "timestamp": {
            "type": "integer"
          },
          "data": {
            "$ref": "#/definitions/trending_notification_action_data"
          }
        },
        "type": "object"
      },
      "trending_notification_action_data": {
        "required": [
          "genre",
          "rank",
          "time_range",
          "track_id"
        ],
        "properties": {
          "rank": {
            "type": "integer"
          },
          "genre": {
            "type": "string"
          },
          "track_id": {
            "type": "string"
          },
          "time_range": {
            "type": "string",
            "example": "week",
            "enum": [
              "week",
              "month",
              "year"
            ]
          }
        },
        "type": "object"
      },
      "trending_playlist_notification": {
        "required": [
          "actions",
          "group_id",
          "is_seen",
          "type"
        ],
        "properties": {
          "type": {
            "type": "string"
          },
          "group_id": {
            "type": "string"
          },
          "is_seen": {
            "type": "boolean"
          },
          "seen_at": {
            "type": "integer"
          },
          "actions": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/trending_playlist_notification_action"
            }
          }
        },
        "type": "object"
      },
      "trending_playlist_notification_action": {
        "required": [
          "data",
          "specifier",
          "timestamp",
          "type"
        ],
        "properties": {
          "specifier": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "timestamp": {
            "type": "integer"
          },
          "data": {
            "$ref": "#/definitions/trending_playlist_notification_action_data"
          }
        },
        "type": "object"
      },
      "trending_playlist_notification_action_data": {
        "required": [
          "genre",
          "playlist_id",
          "rank",
          "time_range"
        ],
        "properties": {
          "rank": {
            "type": "integer"
          },
          "genre": {
            "type": "string"
          },
          "playlist_id": {
            "type": "string"
          },
          "time_range": {
            "type": "string",
            "example": "week",
            "enum": [
              "week",
              "month",
              "year"
            ]
          }
        },
        "type": "object"
      },
      "trending_underground_notification": {
        "required": [
          "actions",
          "group_id",
          "is_seen",
          "type"
        ],
        "properties": {
          "type": {
            "type": "string"
          },
          "group_id": {
            "type": "string"
          },
          "is_seen": {
            "type": "boolean"
          },
          "seen_at": {
            "type": "integer"
          },
          "actions": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/trending_underground_notification_action"
            }
          }
        },
        "type": "object"
      },
      "trending_underground_notification_action": {
        "required": [
          "data",
          "specifier",
          "timestamp",
          "type"
        ],
        "properties": {
          "specifier": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "timestamp": {
            "type": "integer"
          },
          "data": {
            "$ref": "#/definitions/trending_underground_notification_action_data"
          }
        },
        "type": "object"
      },
      "trending_underground_notification_action_data": {
        "required": [
          "genre",
          "rank",
          "time_range",
          "track_id"
        ],
        "properties": {
          "rank": {
            "type": "integer"
          },
          "genre": {
            "type": "string"
          },
          "track_id": {
            "type": "string"
          },
          "time_range": {
            "type": "string",
            "example": "week",
            "enum": [
              "week",
              "month",
              "year"
            ]
          }
        },
        "type": "object"
      },
      "announcement_notification": {
        "required": [
          "actions",
          "group_id",
          "is_seen",
          "type"
        ],
        "properties": {
          "type": {
            "type": "string"
          },
          "group_id": {
            "type": "string"
          },
          "is_seen": {
            "type": "boolean"
          },
          "seen_at": {
            "type": "integer"
          },
          "actions": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/announcement_notification_action"
            }
          }
        },
        "type": "object"
      },
      "announcement_notification_action": {
        "required": [
          "data",
          "specifier",
          "timestamp",
          "type"
        ],
        "properties": {
          "specifier": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "timestamp": {
            "type": "integer"
          },
          "data": {
            "$ref": "#/definitions/announcement_notification_action_data"
          }
        },
        "type": "object"
      },
      "announcement_notification_action_data": {
        "required": [
          "long_description",
          "push_body",
          "short_description",
          "title"
        ],
        "properties": {
          "title": {
            "type": "string"
          },
          "push_body": {
            "type": "string"
          },
          "short_description": {
            "type": "string"
          },
          "long_description": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "comment_notification": {
        "required": [
          "actions",
          "group_id",
          "is_seen",
          "type"
        ],
        "properties": {
          "type": {
            "type": "string"
          },
          "group_id": {
            "type": "string"
          },
          "is_seen": {
            "type": "boolean"
          },
          "seen_at": {
            "type": "integer"
          },
          "actions": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/comment_notification_action"
            }
          }
        },
        "type": "object"
      },
      "comment_notification_action": {
        "required": [
          "data",
          "specifier",
          "timestamp",
          "type"
        ],
        "properties": {
          "specifier": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "timestamp": {
            "type": "integer"
          },
          "data": {
            "$ref": "#/definitions/comment_notification_action_data"
          }
        },
        "type": "object"
      },
      "comment_notification_action_data": {
        "required": [
          "comment_user_id",
          "entity_id",
          "type"
        ],
        "properties": {
          "type": {
            "type": "string",
            "example": "Track",
            "enum": [
              "Track",
              "Playlist",
              "Album"
            ]
          },
          "entity_id": {
            "type": "string"
          },
          "comment_user_id": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "comment_thread_notification": {
        "required": [
          "actions",
          "group_id",
          "is_seen",
          "type"
        ],
        "properties": {
          "type": {
            "type": "string"
          },
          "group_id": {
            "type": "string"
          },
          "is_seen": {
            "type": "boolean"
          },
          "seen_at": {
            "type": "integer"
          },
          "actions": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/comment_thread_notification_action"
            }
          }
        },
        "type": "object"
      },
      "comment_thread_notification_action": {
        "required": [
          "data",
          "specifier",
          "timestamp",
          "type"
        ],
        "properties": {
          "specifier": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "timestamp": {
            "type": "integer"
          },
          "data": {
            "$ref": "#/definitions/comment_thread_notification_action_data"
          }
        },
        "type": "object"
      },
      "comment_thread_notification_action_data": {
        "required": [
          "comment_user_id",
          "entity_id",
          "entity_user_id",
          "type"
        ],
        "properties": {
          "type": {
            "type": "string",
            "example": "Track",
            "enum": [
              "Track",
              "Playlist",
              "Album"
            ]
          },
          "entity_id": {
            "type": "string"
          },
          "entity_user_id": {
            "type": "string"
          },
          "comment_user_id": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "comment_mention_notification": {
        "required": [
          "actions",
          "group_id",
          "is_seen",
          "type"
        ],
        "properties": {
          "type": {
            "type": "string"
          },
          "group_id": {
            "type": "string"
          },
          "is_seen": {
            "type": "boolean"
          },
          "seen_at": {
            "type": "integer"
          },
          "actions": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/comment_mention_notification_action"
            }
          }
        },
        "type": "object"
      },
      "comment_mention_notification_action": {
        "required": [
          "data",
          "specifier",
          "timestamp",
          "type"
        ],
        "properties": {
          "specifier": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "timestamp": {
            "type": "integer"
          },
          "data": {
            "$ref": "#/definitions/comment_mention_notification_action_data"
          }
        },
        "type": "object"
      },
      "comment_mention_notification_action_data": {
        "required": [
          "comment_user_id",
          "entity_id",
          "entity_user_id",
          "type"
        ],
        "properties": {
          "type": {
            "type": "string",
            "example": "Track",
            "enum": [
              "Track",
              "Playlist",
              "Album"
            ]
          },
          "entity_id": {
            "type": "string"
          },
          "entity_user_id": {
            "type": "string"
          },
          "comment_user_id": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "comment_reaction_notification": {
        "required": [
          "actions",
          "group_id",
          "is_seen",
          "type"
        ],
        "properties": {
          "type": {
            "type": "string"
          },
          "group_id": {
            "type": "string"
          },
          "is_seen": {
            "type": "boolean"
          },
          "seen_at": {
            "type": "integer"
          },
          "actions": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/comment_reaction_notification_action"
            }
          }
        },
        "type": "object"
      },
      "comment_reaction_notification_action": {
        "required": [
          "data",
          "specifier",
          "timestamp",
          "type"
        ],
        "properties": {
          "specifier": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "timestamp": {
            "type": "integer"
          },
          "data": {
            "$ref": "#/definitions/comment_reaction_notification_action_data"
          }
        },
        "type": "object"
      },
      "comment_reaction_notification_action_data": {
        "required": [
          "entity_id",
          "entity_user_id",
          "reacter_user_id",
          "type"
        ],
        "properties": {
          "type": {
            "type": "string",
            "example": "Track",
            "enum": [
              "Track",
              "Playlist",
              "Album"
            ]
          },
          "entity_id": {
            "type": "string"
          },
          "entity_user_id": {
            "type": "string"
          },
          "reacter_user_id": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "listen_streak_reminder_notification": {
        "required": [
          "actions",
          "group_id",
          "is_seen",
          "type"
        ],
        "properties": {
          "type": {
            "type": "string"
          },
          "group_id": {
            "type": "string"
          },
          "is_seen": {
            "type": "boolean"
          },
          "seen_at": {
            "type": "integer"
          },
          "actions": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/listen_streak_reminder_notification_action"
            }
          }
        },
        "type": "object"
      },
      "listen_streak_reminder_notification_action": {
        "required": [
          "data",
          "specifier",
          "timestamp",
          "type"
        ],
        "properties": {
          "specifier": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "timestamp": {
            "type": "integer"
          },
          "data": {
            "$ref": "#/definitions/listen_streak_reminder_notification_action_data"
          }
        },
        "type": "object"
      },
      "listen_streak_reminder_notification_action_data": {
        "required": [
          "streak"
        ],
        "properties": {
          "streak": {
            "type": "integer"
          }
        },
        "type": "object"
      },
      "fan_remix_contest_started_notification": {
        "required": [
          "actions",
          "group_id",
          "is_seen",
          "type"
        ],
        "properties": {
          "type": {
            "type": "string"
          },
          "group_id": {
            "type": "string"
          },
          "is_seen": {
            "type": "boolean"
          },
          "seen_at": {
            "type": "integer"
          },
          "actions": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/fan_remix_contest_started_notification_action"
            }
          }
        },
        "type": "object"
      },
      "fan_remix_contest_started_notification_action": {
        "required": [
          "data",
          "specifier",
          "timestamp",
          "type"
        ],
        "properties": {
          "specifier": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "timestamp": {
            "type": "integer"
          },
          "data": {
            "$ref": "#/definitions/fan_remix_contest_started_notification_action_data"
          }
        },
        "type": "object"
      },
      "fan_remix_contest_started_notification_action_data": {
        "required": [
          "entity_id",
          "entity_user_id"
        ],
        "properties": {
          "entity_user_id": {
            "type": "string"
          },
          "entity_id": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "fan_remix_contest_ended_notification": {
        "required": [
          "actions",
          "group_id",
          "is_seen",
          "type"
        ],
        "properties": {
          "type": {
            "type": "string"
          },
          "group_id": {
            "type": "string"
          },
          "is_seen": {
            "type": "boolean"
          },
          "seen_at": {
            "type": "integer"
          },
          "actions": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/fan_remix_contest_ended_notification_action"
            }
          }
        },
        "type": "object"
      },
      "fan_remix_contest_ended_notification_action": {
        "required": [
          "data",
          "specifier",
          "timestamp",
          "type"
        ],
        "properties": {
          "specifier": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "timestamp": {
            "type": "integer"
          },
          "data": {
            "$ref": "#/definitions/fan_remix_contest_ended_notification_action_data"
          }
        },
        "type": "object"
      },
      "fan_remix_contest_ended_notification_action_data": {
        "required": [
          "entity_id",
          "entity_user_id"
        ],
        "properties": {
          "entity_user_id": {
            "type": "string"
          },
          "entity_id": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "fan_remix_contest_ending_soon_notification": {
        "required": [
          "actions",
          "group_id",
          "is_seen",
          "type"
        ],
        "properties": {
          "type": {
            "type": "string"
          },
          "group_id": {
            "type": "string"
          },
          "is_seen": {
            "type": "boolean"
          },
          "seen_at": {
            "type": "integer"
          },
          "actions": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/fan_remix_contest_ending_soon_notification_action"
            }
          }
        },
        "type": "object"
      },
      "fan_remix_contest_ending_soon_notification_action": {
        "required": [
          "data",
          "specifier",
          "timestamp",
          "type"
        ],
        "properties": {
          "specifier": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "timestamp": {
            "type": "integer"
          },
          "data": {
            "$ref": "#/definitions/fan_remix_contest_ending_soon_notification_action_data"
          }
        },
        "type": "object"
      },
      "fan_remix_contest_ending_soon_notification_action_data": {
        "required": [
          "entity_id",
          "entity_user_id"
        ],
        "properties": {
          "entity_user_id": {
            "type": "string"
          },
          "entity_id": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "artist_remix_contest_ended_notification": {
        "required": [
          "actions",
          "group_id",
          "is_seen",
          "type"
        ],
        "properties": {
          "type": {
            "type": "string"
          },
          "group_id": {
            "type": "string"
          },
          "is_seen": {
            "type": "boolean"
          },
          "seen_at": {
            "type": "integer"
          },
          "actions": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/artist_remix_contest_ended_notification_action"
            }
          }
        },
        "type": "object"
      },
      "artist_remix_contest_ended_notification_action": {
        "required": [
          "data",
          "specifier",
          "timestamp",
          "type"
        ],
        "properties": {
          "specifier": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "timestamp": {
            "type": "integer"
          },
          "data": {
            "$ref": "#/definitions/artist_remix_contest_ended_notification_action_data"
          }
        },
        "type": "object"
      },
      "artist_remix_contest_ended_notification_action_data": {
        "required": [
          "entity_id"
        ],
        "properties": {
          "entity_id": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "artist_remix_contest_ending_soon_notification": {
        "required": [
          "actions",
          "group_id",
          "is_seen",
          "type"
        ],
        "properties": {
          "type": {
            "type": "string"
          },
          "group_id": {
            "type": "string"
          },
          "is_seen": {
            "type": "boolean"
          },
          "seen_at": {
            "type": "integer"
          },
          "actions": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/artist_remix_contest_ending_soon_notification_action"
            }
          }
        },
        "type": "object"
      },
      "artist_remix_contest_ending_soon_notification_action": {
        "required": [
          "data",
          "specifier",
          "timestamp",
          "type"
        ],
        "properties": {
          "specifier": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "timestamp": {
            "type": "integer"
          },
          "data": {
            "$ref": "#/definitions/artist_remix_contest_ending_soon_notification_action_data"
          }
        },
        "type": "object"
      },
      "artist_remix_contest_ending_soon_notification_action_data": {
        "required": [
          "entity_id",
          "entity_user_id"
        ],
        "properties": {
          "entity_user_id": {
            "type": "string"
          },
          "entity_id": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "artist_remix_contest_submissions_notification": {
        "required": [
          "actions",
          "group_id",
          "is_seen",
          "type"
        ],
        "properties": {
          "type": {
            "type": "string"
          },
          "group_id": {
            "type": "string"
          },
          "is_seen": {
            "type": "boolean"
          },
          "seen_at": {
            "type": "integer"
          },
          "actions": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/artist_remix_contest_submissions_notification_action"
            }
          }
        },
        "type": "object"
      },
      "artist_remix_contest_submissions_notification_action": {
        "required": [
          "data",
          "specifier",
          "timestamp",
          "type"
        ],
        "properties": {
          "specifier": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "timestamp": {
            "type": "integer"
          },
          "data": {
            "$ref": "#/definitions/artist_remix_contest_submissions_notification_action_data"
          }
        },
        "type": "object"
      },
      "artist_remix_contest_submissions_notification_action_data": {
        "required": [
          "entity_id",
          "event_id",
          "milestone"
        ],
        "properties": {
          "event_id": {
            "type": "string"
          },
          "milestone": {
            "type": "integer"
          },
          "entity_id": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "fan_remix_contest_winners_selected_notification": {
        "required": [
          "actions",
          "group_id",
          "is_seen",
          "type"
        ],
        "properties": {
          "type": {
            "type": "string"
          },
          "group_id": {
            "type": "string"
          },
          "is_seen": {
            "type": "boolean"
          },
          "seen_at": {
            "type": "integer"
          },
          "actions": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/fan_remix_contest_winners_selected_notification_action"
            }
          }
        },
        "type": "object"
      },
      "fan_remix_contest_winners_selected_notification_action": {
        "required": [
          "data",
          "specifier",
          "timestamp",
          "type"
        ],
        "properties": {
          "specifier": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "timestamp": {
            "type": "integer"
          },
          "data": {
            "$ref": "#/definitions/fan_remix_contest_winners_selected_notification_action_data"
          }
        },
        "type": "object"
      },
      "fan_remix_contest_winners_selected_notification_action_data": {
        "required": [
          "entity_id",
          "entity_user_id"
        ],
        "properties": {
          "entity_user_id": {
            "type": "string"
          },
          "entity_id": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "playlist_updates_response": {
        "required": [
          "latest_chain_block",
          "latest_chain_slot_plays",
          "latest_indexed_block",
          "latest_indexed_slot_plays",
          "signature",
          "timestamp",
          "version"
        ],
        "properties": {
          "latest_chain_block": {
            "type": "integer"
          },
          "latest_indexed_block": {
            "type": "integer"
          },
          "latest_chain_slot_plays": {
            "type": "integer"
          },
          "latest_indexed_slot_plays": {
            "type": "integer"
          },
          "signature": {
            "type": "string"
          },
          "timestamp": {
            "type": "string"
          },
          "version": {
            "$ref": "#/definitions/version_metadata"
          },
          "data": {
            "$ref": "#/definitions/playlist_updates"
          }
        },
        "type": "object"
      },
      "playlist_updates": {
        "properties": {
          "playlist_updates": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/playlist_update"
            }
          }
        },
        "type": "object"
      },
      "playlist_update": {
        "required": [
          "playlist_id",
          "updated_at"
        ],
        "properties": {
          "playlist_id": {
            "type": "string"
          },
          "updated_at": {
            "type": "integer"
          },
          "last_seen_at": {
            "type": "integer"
          }
        },
        "type": "object"
      },
      "attestation_reponse": {
        "properties": {
          "data": {
            "$ref": "#/definitions/attestation"
          }
        },
        "type": "object"
      },
      "attestation": {
        "required": [
          "attestation",
          "owner_wallet"
        ],
        "properties": {
          "owner_wallet": {
            "type": "string"
          },
          "attestation": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "comment_replies_response": {
        "required": [
          "latest_chain_block",
          "latest_chain_slot_plays",
          "latest_indexed_block",
          "latest_indexed_slot_plays",
          "signature",
          "timestamp",
          "version"
        ],
        "properties": {
          "latest_chain_block": {
            "type": "integer"
          },
          "latest_indexed_block": {
            "type": "integer"
          },
          "latest_chain_slot_plays": {
            "type": "integer"
          },
          "latest_indexed_slot_plays": {
            "type": "integer"
          },
          "signature": {
            "type": "string"
          },
          "timestamp": {
            "type": "string"
          },
          "version": {
            "$ref": "#/definitions/version_metadata"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/reply_comment"
            }
          },
          "related": {
            "$ref": "#/definitions/related"
          }
        },
        "type": "object"
      },
      "best_selling_full_response": {
        "required": [
          "latest_chain_block",
          "latest_chain_slot_plays",
          "latest_indexed_block",
          "latest_indexed_slot_plays",
          "signature",
          "timestamp",
          "version"
        ],
        "properties": {
          "latest_chain_block": {
            "type": "integer"
          },
          "latest_indexed_block": {
            "type": "integer"
          },
          "latest_chain_slot_plays": {
            "type": "integer"
          },
          "latest_indexed_slot_plays": {
            "type": "integer"
          },
          "signature": {
            "type": "string"
          },
          "timestamp": {
            "type": "string"
          },
          "version": {
            "$ref": "#/definitions/version_metadata"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/best_selling_item"
            }
          },
          "related": {
            "$ref": "#/definitions/related"
          }
        },
        "type": "object"
      },
      "best_selling_item": {
        "required": [
          "content_id",
          "owner_id",
          "title"
        ],
        "properties": {
          "content_id": {
            "type": "string"
          },
          "content_type": {
            "type": "string",
            "example": "track",
            "enum": [
              "track",
              "album"
            ]
          },
          "title": {
            "type": "string"
          },
          "owner_id": {
            "type": "string"
          }
        },
        "type": "object"
      }
    },
    "responses": {
      "ParseError": {
        "description": "When a mask can't be parsed"
      },
      "MaskError": {
        "description": "When any error occurs on mask"
      }
    }
  }
