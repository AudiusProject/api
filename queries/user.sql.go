// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.28.0
// source: user.sql

package queries

import (
	"context"
)

const getUserByHandle = `-- name: GetUserByHandle :one
SELECT
  u.user_id,
  handle,
  wallet,
  name,
  bio,
  location,
  follower_count,
  track_count
FROM users u
JOIN aggregate_user using (user_id)
WHERE handle_lc = lower($1) LIMIT 1
`

type GetUserByHandleRow struct {
	UserID        int32   `json:"user_id"`
	Handle        *string `json:"handle"`
	Wallet        *string `json:"wallet"`
	Name          *string `json:"name"`
	Bio           *string `json:"bio"`
	Location      *string `json:"location"`
	FollowerCount *int64  `json:"follower_count"`
	TrackCount    *int64  `json:"track_count"`
}

func (q *Queries) GetUserByHandle(ctx context.Context, lower string) (GetUserByHandleRow, error) {
	row := q.db.QueryRow(ctx, getUserByHandle, lower)
	var i GetUserByHandleRow
	err := row.Scan(
		&i.UserID,
		&i.Handle,
		&i.Wallet,
		&i.Name,
		&i.Bio,
		&i.Location,
		&i.FollowerCount,
		&i.TrackCount,
	)
	return i, err
}
